[{"F:\\projects\\burger-gril\\src\\index.tsx":"1","F:\\projects\\burger-gril\\src\\App.tsx":"2","F:\\projects\\burger-gril\\src\\firebase\\firebaseConfig.tsx":"3","F:\\projects\\burger-gril\\src\\global-styles.tsx":"4","F:\\projects\\burger-gril\\src\\redux\\reducers\\authReducer.ts":"5","F:\\projects\\burger-gril\\src\\redux\\index.ts":"6","F:\\projects\\burger-gril\\src\\redux\\types\\authTypes.ts":"7","F:\\projects\\burger-gril\\src\\redux\\actions\\authActions.ts":"8","F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar.tsx":"9","F:\\projects\\burger-gril\\src\\components\\sidebar\\SidebarData.tsx":"10","F:\\projects\\burger-gril\\src\\pages\\home.tsx":"11","F:\\projects\\burger-gril\\src\\pages\\index.tsx":"12","F:\\projects\\burger-gril\\src\\components\\hero\\Hero.tsx":"13","F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar-style.tsx":"14","F:\\projects\\burger-gril\\src\\helpers\\scrollReveal.tsx":"15","F:\\projects\\burger-gril\\src\\components\\hero\\Hero-style.ts":"16","F:\\projects\\burger-gril\\src\\components\\about\\About.tsx":"17","F:\\projects\\burger-gril\\src\\components\\about\\About-style.ts":"18","F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers.tsx":"19","F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers-style.ts":"20","F:\\projects\\burger-gril\\src\\components\\best-sellers\\SliderData.ts":"21","F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews.tsx":"22","F:\\projects\\burger-gril\\src\\components\\reviews\\ReviewsData.ts":"23","F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation.tsx":"24","F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation-style.ts":"25","F:\\projects\\burger-gril\\src\\components\\footer\\Footer.tsx":"26","F:\\projects\\burger-gril\\src\\components\\footer\\Footer-style.ts":"27","F:\\projects\\burger-gril\\src\\pages\\auth.tsx":"28","F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm.tsx":"29","F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews-style.ts":"30","F:\\projects\\burger-gril\\src\\hooks\\use-autoLogin.tsx":"31","F:\\projects\\burger-gril\\src\\auth\\PrivateRoute.tsx":"32","F:\\projects\\burger-gril\\src\\auth\\PrivateAlereadyAuthRoute.tsx":"33","F:\\projects\\burger-gril\\src\\redux\\constants\\authConstants.ts":"34","F:\\projects\\burger-gril\\src\\redux\\reducers\\popupMessageReducer.ts":"35","F:\\projects\\burger-gril\\src\\redux\\constants\\popupMessageConstants.ts":"36","F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm-style.ts":"37","F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage.tsx":"38","F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage-style.ts":"39","F:\\projects\\burger-gril\\src\\redux\\actions\\popupMessageAction.ts":"40","F:\\projects\\burger-gril\\src\\pages\\bookTable.tsx":"41","F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation.tsx":"42","F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation-style.ts":"43","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation.tsx":"44","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation-style.ts":"45","F:\\projects\\burger-gril\\src\\redux\\reducers\\reservationReducer.ts":"46","F:\\projects\\burger-gril\\src\\redux\\constants\\reservationConstants.ts":"47","F:\\projects\\burger-gril\\src\\redux\\actions\\reservationActions.ts":"48","F:\\projects\\burger-gril\\src\\components\\loader\\Loader.tsx":"49","F:\\projects\\burger-gril\\src\\components\\loader\\Loader-style.ts":"50","F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation.tsx":"51","F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation-style.ts":"52","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary.tsx":"53","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary-style.ts":"54","F:\\projects\\burger-gril\\src\\redux\\constants\\endPoints.ts":"55","F:\\projects\\burger-gril\\src\\helpers\\convertPhoneNumber.tsx":"56","F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar.tsx":"57","F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar-style.tsx":"58","F:\\projects\\burger-gril\\src\\components\\navbar\\NavbarData.tsx":"59","F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart.tsx":"60","F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart-style.tsx":"61","F:\\projects\\burger-gril\\src\\redux\\reducers\\cartReducer.ts":"62","F:\\projects\\burger-gril\\src\\redux\\constants\\cartConstants.ts":"63","F:\\projects\\burger-gril\\src\\redux\\actions\\cartActions.ts":"64","F:\\projects\\burger-gril\\src\\redux\\actions\\productsActions.ts":"65","F:\\projects\\burger-gril\\src\\redux\\reducers\\productsReducer.ts":"66","F:\\projects\\burger-gril\\src\\redux\\constants\\productsConstants.ts":"67","F:\\projects\\burger-gril\\src\\pages\\menu.tsx":"68","F:\\projects\\burger-gril\\src\\components\\menu\\Menu.tsx":"69","F:\\projects\\burger-gril\\src\\components\\menu\\Menu-style.ts":"70","F:\\projects\\burger-gril\\src\\redux\\types\\productsType.ts":"71","F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup-style.ts":"72","F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup.tsx":"73","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup.tsx":"74","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup-style.tsx":"75","F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup.tsx":"76","F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup-style.tsx":"77","F:\\projects\\burger-gril\\src\\pages\\cartSummary.tsx":"78","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary.tsx":"79","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary-style.ts":"80","F:\\projects\\burger-gril\\src\\pages\\checkout.tsx":"81","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout.tsx":"82","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout-style.ts":"83","F:\\projects\\burger-gril\\src\\helpers\\getCartTotal.ts":"84","F:\\projects\\burger-gril\\src\\redux\\actions\\orderActions.ts":"85","F:\\projects\\burger-gril\\src\\redux\\constants\\orderConstants.ts":"86","F:\\projects\\burger-gril\\src\\redux\\reducers\\orderReducer.ts":"87"},{"size":391,"mtime":1611762308418,"results":"88","hashOfConfig":"89"},{"size":1858,"mtime":1613937902487,"results":"90","hashOfConfig":"89"},{"size":538,"mtime":1611761100918,"results":"91","hashOfConfig":"89"},{"size":460,"mtime":1612687625794,"results":"92","hashOfConfig":"89"},{"size":1559,"mtime":1613214939885,"results":"93","hashOfConfig":"89"},{"size":1246,"mtime":1614164759862,"results":"94","hashOfConfig":"89"},{"size":1353,"mtime":1612625254615,"results":"95","hashOfConfig":"89"},{"size":9078,"mtime":1614202923897,"results":"96","hashOfConfig":"89"},{"size":2430,"mtime":1613924530301,"results":"97","hashOfConfig":"89"},{"size":679,"mtime":1613838883351,"results":"98","hashOfConfig":"89"},{"size":1083,"mtime":1613145991530,"results":"99","hashOfConfig":"89"},{"size":317,"mtime":1613937880814,"results":"100","hashOfConfig":"89"},{"size":1545,"mtime":1612783400720,"results":"101","hashOfConfig":"89"},{"size":2142,"mtime":1613494365960,"results":"102","hashOfConfig":"89"},{"size":1170,"mtime":1612604409258,"results":"103","hashOfConfig":"89"},{"size":3674,"mtime":1612296418758,"results":"104","hashOfConfig":"89"},{"size":1470,"mtime":1612351661847,"results":"105","hashOfConfig":"89"},{"size":2850,"mtime":1612345330542,"results":"106","hashOfConfig":"89"},{"size":3959,"mtime":1613669843837,"results":"107","hashOfConfig":"89"},{"size":7104,"mtime":1613755891990,"results":"108","hashOfConfig":"89"},{"size":1379,"mtime":1613472436805,"results":"109","hashOfConfig":"89"},{"size":2205,"mtime":1612538474442,"results":"110","hashOfConfig":"89"},{"size":897,"mtime":1612367548310,"results":"111","hashOfConfig":"89"},{"size":4656,"mtime":1613146190308,"results":"112","hashOfConfig":"89"},{"size":3320,"mtime":1613379871082,"results":"113","hashOfConfig":"89"},{"size":298,"mtime":1612456193941,"results":"114","hashOfConfig":"89"},{"size":365,"mtime":1612456281006,"results":"115","hashOfConfig":"89"},{"size":231,"mtime":1613335548663,"results":"116","hashOfConfig":"89"},{"size":4247,"mtime":1612801335660,"results":"117","hashOfConfig":"89"},{"size":2940,"mtime":1612538823371,"results":"118","hashOfConfig":"89"},{"size":813,"mtime":1612614468068,"results":"119","hashOfConfig":"89"},{"size":532,"mtime":1612623321983,"results":"120","hashOfConfig":"89"},{"size":551,"mtime":1612624207861,"results":"121","hashOfConfig":"89"},{"size":1036,"mtime":1612625114477,"results":"122","hashOfConfig":"89"},{"size":471,"mtime":1612637912774,"results":"123","hashOfConfig":"89"},{"size":90,"mtime":1612625149597,"results":"124","hashOfConfig":"89"},{"size":4377,"mtime":1612688421027,"results":"125","hashOfConfig":"89"},{"size":943,"mtime":1612637647041,"results":"126","hashOfConfig":"89"},{"size":2266,"mtime":1612637642582,"results":"127","hashOfConfig":"89"},{"size":595,"mtime":1612637770800,"results":"128","hashOfConfig":"89"},{"size":235,"mtime":1612816799475,"results":"129","hashOfConfig":"89"},{"size":1224,"mtime":1613072906353,"results":"130","hashOfConfig":"89"},{"size":1241,"mtime":1613034891331,"results":"131","hashOfConfig":"89"},{"size":8931,"mtime":1613254166124,"results":"132","hashOfConfig":"89"},{"size":4075,"mtime":1613218002220,"results":"133","hashOfConfig":"89"},{"size":2261,"mtime":1613339846950,"results":"134","hashOfConfig":"89"},{"size":632,"mtime":1613062903800,"results":"135","hashOfConfig":"89"},{"size":5760,"mtime":1614183125489,"results":"136","hashOfConfig":"89"},{"size":231,"mtime":1612905137742,"results":"137","hashOfConfig":"89"},{"size":464,"mtime":1613577810949,"results":"138","hashOfConfig":"89"},{"size":3767,"mtime":1613340254425,"results":"139","hashOfConfig":"89"},{"size":1197,"mtime":1613217964112,"results":"140","hashOfConfig":"89"},{"size":1616,"mtime":1613340136345,"results":"141","hashOfConfig":"89"},{"size":914,"mtime":1613312380855,"results":"142","hashOfConfig":"89"},{"size":87,"mtime":1613299058500,"results":"143","hashOfConfig":"89"},{"size":839,"mtime":1613316641802,"results":"144","hashOfConfig":"89"},{"size":2785,"mtime":1613924486820,"results":"145","hashOfConfig":"89"},{"size":2573,"mtime":1613427257223,"results":"146","hashOfConfig":"89"},{"size":679,"mtime":1613838850443,"results":"147","hashOfConfig":"89"},{"size":2783,"mtime":1614103144403,"results":"148","hashOfConfig":"89"},{"size":3008,"mtime":1614162944375,"results":"149","hashOfConfig":"89"},{"size":886,"mtime":1614167104806,"results":"150","hashOfConfig":"89"},{"size":159,"mtime":1614167010672,"results":"151","hashOfConfig":"89"},{"size":899,"mtime":1614117312878,"results":"152","hashOfConfig":"89"},{"size":2072,"mtime":1613596533469,"results":"153","hashOfConfig":"89"},{"size":2094,"mtime":1613596505638,"results":"154","hashOfConfig":"89"},{"size":716,"mtime":1613596406628,"results":"155","hashOfConfig":"89"},{"size":208,"mtime":1613561737241,"results":"156","hashOfConfig":"89"},{"size":4371,"mtime":1613772474400,"results":"157","hashOfConfig":"89"},{"size":5938,"mtime":1613819443943,"results":"158","hashOfConfig":"89"},{"size":1429,"mtime":1613596436929,"results":"159","hashOfConfig":"89"},{"size":425,"mtime":1613755012529,"results":"160","hashOfConfig":"89"},{"size":802,"mtime":1613775320868,"results":"161","hashOfConfig":"89"},{"size":4705,"mtime":1613856878652,"results":"162","hashOfConfig":"89"},{"size":2876,"mtime":1613770181961,"results":"163","hashOfConfig":"89"},{"size":6494,"mtime":1613856817118,"results":"164","hashOfConfig":"89"},{"size":2919,"mtime":1613771911618,"results":"165","hashOfConfig":"89"},{"size":253,"mtime":1613817950631,"results":"166","hashOfConfig":"89"},{"size":6152,"mtime":1614113995540,"results":"167","hashOfConfig":"89"},{"size":5899,"mtime":1614166141012,"results":"168","hashOfConfig":"89"},{"size":234,"mtime":1613937876588,"results":"169","hashOfConfig":"89"},{"size":8745,"mtime":1614186789152,"results":"170","hashOfConfig":"89"},{"size":6139,"mtime":1614167259746,"results":"171","hashOfConfig":"89"},{"size":435,"mtime":1614117741919,"results":"172","hashOfConfig":"89"},{"size":3110,"mtime":1614200388353,"results":"173","hashOfConfig":"89"},{"size":220,"mtime":1614167039622,"results":"174","hashOfConfig":"89"},{"size":1218,"mtime":1614168164191,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"bv91hs",{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"178"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"178"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"178"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"178"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"178"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"178"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"178"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"178"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"178"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"178"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"178"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"178"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"178"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"178"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"178"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"178"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"178"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"178"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"178"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"178"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"178"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"178"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"178"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"178"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"178"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"178"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"178"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"178"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"178"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"178"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"178"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"178"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"178"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"178"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"178"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"178"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"F:\\projects\\burger-gril\\src\\index.tsx",[],["388","389"],"F:\\projects\\burger-gril\\src\\App.tsx",["390","391","392","393"],"import React, { useContext, useEffect, useState } from 'react';\nimport useAutoLogin from './hooks/use-autoLogin';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Sidebar from './components/sidebar/Sidebar';\nimport { HomePage, AuthPage, BookTablePage, MenuPage,CartSummaryPage,CheckoutPage } from './pages';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from './redux';\nimport PrivateRoute from './auth/PrivateRoute';\nimport PrivateAlreadyAuthRoute from './auth/PrivateAlereadyAuthRoute';\nimport PopupMessage from './components/popup-message/PopupMessage';\nimport Navbar from './components/navbar/Navbar';\nimport MenuItemPopup from './components/menu-item-popup/MenuItemPopup';\nimport { getAllProducts } from './redux/actions/productsActions';\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  useAutoLogin();\n  useEffect(() => {\n    dispatch(getAllProducts())\n  })\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const toggleSidebar = () => setShowSidebar(!showSidebar);\n\n  return (\n    <>\n      <Router>\n        <Navbar user={user} toggleSidebar={toggleSidebar} />\n        <Sidebar showSidebar={showSidebar} toggleSidebar={toggleSidebar} user={user} />\n        <PopupMessage />\n        <MenuItemPopup />\n        <Switch>\n          <Route path='/' exact component={HomePage} />\n          <PrivateAlreadyAuthRoute path='/auth' component={AuthPage} exact />\n          <Route path='/book-table' component={BookTablePage} exact/>\n          <Route path='/order' component={MenuPage} exact/>\n          <Route path='/cart' component={CartSummaryPage} exact/>\n          <Route path='/checkout' component={CheckoutPage} exact/>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","F:\\projects\\burger-gril\\src\\firebase\\firebaseConfig.tsx",[],"F:\\projects\\burger-gril\\src\\global-styles.tsx",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\authReducer.ts",["394"],"import { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, RESET_ERROR, USER_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, SET_USER } from '../constants/authConstants';\nimport { AuthAction } from '../types/authTypes';\nimport { User } from './../types/authTypes';\n\n\nexport const userRegisterReducer = (state = { error: '', successMessage: null, loading: false }, action: AuthAction) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      }\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false, successMessage: action.payload\n      }\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case USER_LOGOUT:\n      return {\n        error: '', successMessage: null, loading: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport const userLoginReducer = (state: { error: string, user: User, loading: boolean } = { error: '', user: null, loading: false }, action: AuthAction) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      }\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false, user: action.payload\n      }\n    case SET_USER:\n      return {\n        loading: false, user: action.payload\n      }\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case USER_LOGOUT:\n      return {\n        error: '', user: null, loading: false\n      }\n    default:\n      return state;\n  }\n}\n\n\n","F:\\projects\\burger-gril\\src\\redux\\index.ts",[],"F:\\projects\\burger-gril\\src\\redux\\types\\authTypes.ts",[],["395","396"],"F:\\projects\\burger-gril\\src\\redux\\actions\\authActions.ts",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar.tsx",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\SidebarData.tsx",["397"],"import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as GiIcons from 'react-icons/gi';\n\nexport const SidebarData = [\n  {\n    title: 'Home',\n    path: '/',\n    icon: <AiIcons.AiFillHome />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Order',\n    path: '/order',\n    icon: <IoIcons.IoIosPaper />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Book Table',\n    path: '/book-table',\n    icon: <GiIcons.GiTabletopPlayers />,\n    cName: 'nav-text'\n  },\n  // {\n  //   title: 'Cart',\n  //   path: '/order',\n  //   icon: <FaIcons.FaCartPlus />,\n  //   cName: 'nav-text'\n  // }\n];\n","F:\\projects\\burger-gril\\src\\pages\\home.tsx",["398","399","400","401","402"],"import React, { FC, useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { signUpUser, setError, signOut } from '../redux/actions/authActions';\r\nimport { RootState } from '../redux';\r\nimport activateScrollReveal from '../helpers/scrollReveal';\r\nimport Hero from '../components/hero/Hero';\r\nimport About from '../components/about/About';\r\nimport BestSellers from '../components/best-sellers/BestSellers';\r\nimport Reviews from '../components/reviews/Reviews';\r\nimport Reservation from '../components/reservation/Reservation';\r\nimport Footer from '../components/footer/Footer';\r\n\r\n\r\nconst HomePage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    activateScrollReveal()\r\n  })\r\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Hero user={user}/>\r\n      <About />\r\n      <BestSellers />       \r\n      <Reviews/>\r\n      <Reservation fromBookTablePage={false}/>\r\n      <Footer/>\r\n    </>\r\n  );\r\n}   \r\n\r\nexport default HomePage;     ","F:\\projects\\burger-gril\\src\\pages\\index.tsx",[],"F:\\projects\\burger-gril\\src\\components\\hero\\Hero.tsx",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar-style.tsx",["403"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarContainer =\r\n  styled.nav <\r\n    { showSidebar: boolean } >\r\n    `\r\nbackground-color: #292929;\r\nwidth: 200px;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nposition: fixed;\r\nz-index: 10000;\r\n// top: 20px;\r\ntransition: ${({ showSidebar }) => (showSidebar ? '350ms' : '1350ms')};\r\nleft: ${({ showSidebar }) => (showSidebar ? '0' : '-100%')};\r\n`;\r\n\r\nexport const LinksContainer = styled.ul`\r\n  width: 100%;\r\n`;\r\nexport const ToggleSidebarWrapper = styled.li`\r\n  background-color: #292929;\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CloseIcon = styled(AiIcons.AiOutlineClose)`\r\n  color: white;\r\n  font-size: 2rem;\r\n  margin-left:1.3rem;\r\n  // padding-bottom: 2rem;\r\n  background: none;\r\n`;\r\n\r\nexport const NumberOfCartItems = styled.div`\r\n  width: 35px!important;\r\n  height: 35px !important;\r\n  padding: 10px;\r\n  margin-left:10px;\r\n  background: rgb(247,195,105);\r\n  border-radius: 50% !important;\r\n  color:black !important;\r\n`;\r\n\r\nexport const NavbarItemMobile = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: start;\r\n  padding: 8px 0px 8px 16px;\r\n  list-style: none;\r\n  height: 60px;\r\n  color:white;\r\n  a{\r\n  text-decoration: none;\r\n  // color: #f5f5f5;\r\n  color: white;\r\n  font-size: 18px;\r\n  width: 70%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  // padding: 0 16px;\r\n  border-radius: 4px;\r\n  transition: all .2s ease-in-out; \r\n  }\r\n  a:hover{\r\n    color:lightblue ;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    a:hover{\r\n      transform: scale(1.1) ;\r\n    }\r\n  }\r\n\r\n  div{\r\n    text-decoration: none;\r\n    // color: #f5f5f5;\r\n    color: white;\r\n    font-size: 18px;\r\n    width: 70%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    // padding: 0 16px;\r\n    border-radius: 4px;\r\n    transition: all .2s ease-in-out; \r\n  }\r\n\r\n  div:hover{\r\n    color:lightblue;\r\n  }\r\n\r\n\r\n  span {\r\n  margin-left: 10px;\r\n  } \r\n\r\n  }\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\helpers\\scrollReveal.tsx",["404"],"\r\nimport ScrollReveal from 'scrollreveal';\r\n\r\nexport default function activateScrollReveal (){\r\n  let reval = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 100,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalWithDelay = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 1200,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalWithLongerDelay = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 2200,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalFromRight = {\r\n    distance: '15%',\r\n    origin: 'right',\r\n    // delay: 1200,\r\n    duration: 3000,\r\n    easing: 'ease',  \r\n  };\r\n  let revalFromLeft = {\r\n    distance: '15%',\r\n    origin: 'left',\r\n    // delay: 1200,\r\n    duration: 3000,\r\n    easing: 'ease',  \r\n  };\r\n\r\n  ScrollReveal().reveal('.title', reval)\r\n  ScrollReveal().reveal('.best-sellers', reval)\r\n  ScrollReveal().reveal('.description-text', revalWithDelay)\r\n  ScrollReveal().reveal('.menu-btn', revalWithDelay)\r\n  ScrollReveal().reveal('.button', revalWithDelay)\r\n  ScrollReveal().reveal('.about-description', revalFromRight)\r\n  ScrollReveal().reveal('.about-image', revalFromLeft)\r\n}","F:\\projects\\burger-gril\\src\\components\\hero\\Hero-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\about\\About.tsx",[],"F:\\projects\\burger-gril\\src\\components\\about\\About-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers.tsx",["405","406"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BestSellersSection, BestSellersContainer, BestSellersTitle, SlideInner, BestSellersImageBox, BestSellersImage, BurgerDescriptionContainer, BurgerTitle, BurgerPrice, BurgerDescription, ArrowsContainer, RightArrow, LeftArrow, Slide, ButtonsContainer, OrderButton, AddToCartButton, VIcon, MenuLink } from './BestSellers-style';\nimport { addItemToCart } from '../../redux/actions/cartActions';\nimport { RootState } from '../../redux';\nimport { MenuItem } from '../../redux/types/productsType';\nimport { getBestSellersProducts, selectItemForPopup } from './../../redux/actions/productsActions';\nimport Loader from '../loader/Loader';\n\nconst BestSellers = () => {\n  const dispatch = useDispatch();\n  const { menuItems, loading, error }: { menuItems: MenuItem[], loading: boolean, error: string } = useSelector((state: RootState) => state.bestSellers);\n\n  const [current, setCurrent] = useState(0);\n  const [showVIcon, setShowVIcon] = useState(false);\n  const [stopSlider, setStopSlider] = useState(false);\n  const length = menuItems.length;\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      nextSlide()\n      setShowVIcon(false)\n    }, 8000);\n    return () => {\n      clearTimeout(timeout);\n    }\n  })\n\n  useEffect(() => {\n    dispatch(getBestSellersProducts())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const nextSlide = () => {\n    if (stopSlider) {\n      return\n    }\n    setCurrent(current === length - 1 ? 0 : current + 1);\n    setShowVIcon(false)\n\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n    setShowVIcon(false)\n\n  };\n\n  return (\n    <BestSellersSection>\n      <BestSellersTitle>Our Best Sellers:</BestSellersTitle>\n      <BestSellersContainer id=\"best-sellers\" className=\"best-sellers\">\n        <ArrowsContainer >\n          <LeftArrow onClick={prevSlide} />\n          <RightArrow onClick={nextSlide} />\n        </ArrowsContainer>\n        {loading && <Loader />}\n        {menuItems && menuItems.map((menuItem, index) => {\n          return (\n\n            <Slide\n              currentSlide={index === current ? true : false}\n              key={index}\n            >\n              {index === current && (\n                <SlideInner onMouseOver={() => {\n                  setStopSlider(true)\n                }}\n                  onMouseOut={() => {\n                    setStopSlider(false)\n                  }}\n                >\n                  <BestSellersImageBox><BestSellersImage src={menuItem.image} alt={menuItem.title} /></BestSellersImageBox>\n\n                  <BurgerDescriptionContainer><BurgerTitle>\n                    {menuItem.title}\n                  </BurgerTitle>\n                    <br />\n                    <BurgerDescription>\n                      {menuItem.description}\n                    </BurgerDescription>\n                    <br />\n                    <BurgerPrice>\n                      ${menuItem.price}\n                    </BurgerPrice>\n\n                    <ButtonsContainer>\n                      <OrderButton onClick={() => {\n                        if (menuItem.type === 'meals' || menuItem.type === 'burgers') {\n                          dispatch(selectItemForPopup(menuItem));\n                        } else {\n                          dispatch(addItemToCart(menuItem));\n                          setShowVIcon(true)\n                        }\n                      }}>ADD TO CART</OrderButton>\n                      {showVIcon && <VIcon></VIcon>}\n                    </ButtonsContainer>\n                  </BurgerDescriptionContainer>\n\n                </SlideInner>\n              )}\n\n            </Slide>\n\n          );\n        })}\n\n        <MenuLink to='/menu' className=\"menu-btn\">Explore Our Full Menu</MenuLink>\n      </BestSellersContainer>\n    </BestSellersSection>\n  );\n};\n\nexport default BestSellers;\n","F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers-style.ts",["407"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport BestSellersBackground from '../../images/bestsellers-background.jpg';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\n\r\nexport const BestSellersSection = styled.div`\r\n  background-image: url(${BestSellersBackground});\r\n  // background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  // width:100vw;\r\n  padding: 70px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const BestSellersContainer = styled.div`\r\n  // max-width:560px;\r\n  // margin:0 auto;\r\n  display: flex;\r\n  position:relative;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const ArrowsContainer = styled.div`\r\nwidth:250px;\r\nmargin-bottom: 30px;\r\ndisplay:flex;\r\njustify-content:space-between;\r\n@media screen and (max-width: 768px) {\r\n  width: 150px;\r\n\r\n  }\r\n`;\r\nexport const RightArrow = styled(FaIcons.FaArrowAltCircleRight)`\r\n  width: 50px;\r\n  height: 50px;\r\n  // border-radius: 10px;\r\n  // position:absolute;\r\n  // right:0px;\r\n  // top:50%;\r\n  color:white;\r\n  cursor: pointer;\r\n\r\n`;\r\nexport const LeftArrow = styled(FaIcons.FaArrowAltCircleLeft)`\r\n  width: 50px;\r\n  height: 50px;\r\n  // border-radius: 10px;\r\n  // position:absolute;\r\n  // left:0px;\r\n  // top:50%;\r\n  color:white;\r\n  cursor: pointer;\r\n`;\r\nexport const BestSellersTitle = styled.h1`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 4rem;\r\n  display: inline-block;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:white;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nexport const Slide =\r\n  styled.div <\r\n    { currentSlide: boolean } >\r\n    `\r\n  opacity: ${({ currentSlide }) => (currentSlide ? 1 : 0)};\r\n  transition-duration: ${({ currentSlide }) =>\r\n      currentSlide ? '3s' : '3s ease-in-out'};\r\n  transform: ${({ currentSlide }) => (currentSlide ? 'scale(1.08)' : 'scale(1)')};\r\n\r\n`;\r\n\r\nexport const SlideInner =\r\n  styled.div\r\n    `\r\n  display:flex;\r\n  // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // max-width:1360px;\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n`;\r\nexport const BestSellersImageBox = styled.div`\r\n  // width: 350px;\r\n  // height: 350px;\r\n  // transition-duration: 1s;\r\n  // :hover{\r\n  //   transform:scale(1.04);\r\n  // }\r\n\r\n  // position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  width: 350px;\r\n  height: 350px;\r\n  :hover img {\r\n    transform: scale(1.1);\r\n\r\n}\r\n@media screen and (max-width: 768px) {\r\n  width: 250px;\r\n  height: 250px;\r\n  }\r\n`;\r\nexport const BestSellersImage = styled.img`\r\n  // width: 350px;\r\n  // height: 350px;\r\n  // transition-duration: 1s;\r\n  // :hover{\r\n  //   transform:scale(1.04);\r\n  // }\r\n\r\n\r\n  // max-width: 100%;\r\n  transition: all 0.3s;\r\n  display: block;\r\n  width: 100%;\r\n  margin:0 auto;\r\n  height:100%;\r\n  // height: auto;\r\n  transform: scale(1);\r\n`;\r\nexport const BurgerDescriptionContainer = styled.div`\r\n  width: 350px;\r\n  height: 350px;\r\n  background:white;\r\n  padding:20px;\r\n  display:flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 768px) {\r\n    width: 250px;\r\n    height: 320px;\r\n    }\r\n  \r\n`;\r\nexport const BurgerTitle = styled.h1`\r\n      // margin-left:40px;\r\n      // margin-top:40px;\r\n      font-family: 'Imbue', serif;\r\n      text-align:center;\r\n      border-bottom:1px solid black;\r\n`;\r\nexport const BurgerDescription = styled.p`\r\n      // margin-left:40px;\r\n      font-family: 'Indie Flower', cursive;\r\nfont-size:1.2rem;\r\n      // margin-top:40px;\r\n`;\r\n\r\nexport const BurgerPrice = styled.p`\r\n      // margin-left:40px;\r\n      // margin-top:40px;\r\n      font-weight:bold;\r\n\r\n`;\r\nexport const ButtonsContainer = styled.div`\r\ndisplay:flex;\r\nposition:absolute;\r\nbottom:20px;\r\n\r\n`;\r\nexport const OrderButton = styled.button`\r\ncolor:black;\r\nbackground:#F9C56A;\r\noutline: none;\r\nborder:none;\r\ncursor:pointer;\r\npadding:15px;\r\nfont-weight:bold;\r\nopacity:0.7;\r\nmargin-right:10px;\r\n:hover{\r\n  opacity:1;\r\n}\r\n@media screen and (max-width: 768px) {\r\n  padding:5px;\r\n\r\n  }\r\n`;\r\nexport const AddToCartButton = styled.button`\r\ncolor:black;\r\nbackground:lightgrey;\r\noutline: none;\r\nborder:none;\r\ncursor:pointer;\r\npadding:15px;\r\nfont-weight:bold;\r\nopacity:0.7;\r\n\r\n:hover{\r\n  opacity:1;\r\n}\r\n@media screen and (max-width: 768px) {\r\n  padding:5px;\r\n\r\n}\r\n`;\r\nexport const VIcon = styled(AiIcons.AiFillCheckCircle)`\r\n  width: 50px;\r\n  height: 50px;\r\n  color:green;\r\n  cursor: pointer;\r\n  \r\n  -webkit-animation-name: zoomInRight;\r\n  animation-name: zoomInRight;\r\n  -webkit-animation-duration: 1s;\r\n  animation-duration: 1s;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n  }\r\n  @-webkit-keyframes zoomInRight {\r\n  0% {\r\n  opacity: 0;\r\n  -webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n  transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n  -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n  60% {\r\n  opacity: 1;\r\n  -webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n  transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n  -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n  }\r\n  @keyframes zoomInRight {\r\n  0% {\r\n  opacity: 0;\r\n  -webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n  transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n  -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n  60% {\r\n  opacity: 1;\r\n  -webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n  transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n  -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n`;\r\nexport const MenuLink = styled(LinkRouter)`\r\n  color: white;\r\n  background: black;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  animation: pulse 2s infinite 3s cubic-bezier(0.25, 0, 0, 1);\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: white;\r\n    color: #1f4141;\r\n    animation: none;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    to {\r\n      box-shadow: 0 0 0 18px rgba(255, 255, 255, 0);\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\best-sellers\\SliderData.ts",[],["408","409"],"F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews.tsx",[],"F:\\projects\\burger-gril\\src\\components\\reviews\\ReviewsData.ts",[],"F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation.tsx",["410"],"import React, { useState } from \"react\";\r\nimport { ReservationSection, ReservationForm, ReservationTitle, ReservationSubTitle,ReservationSmall, FormInputWrapper, FormLabel, DatePickerInput, FormInput, IconWrapper, SubmitButton } from \"./Reservation-style\";\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport moment from 'moment';\r\nimport { setReservationData } from \"../../redux/actions/reservationActions\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ReservationData } from './../../redux/types/reservationTypes';\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Reservation = ({fromBookTablePage}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [date, setDate] = useState<any>(new Date());\r\n  const [time, setTime] = useState<any>(moment().hours(12).minutes(0).toDate());\r\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [partySize, setPartySize] = useState<number>(0);\r\n  const [name, setName] = useState<any>('');\r\n\r\n\r\n  const handleDate = (date: any) => {\r\n    setDate(date);\r\n    // console.log(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n  const handleTimeDate = (date: any) => {\r\n    setTime(date);\r\n    // console.log(date.getHours()); \r\n  }\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    let reservationData: ReservationData = {\r\n      date, name, email, phoneNumber, partySize, time: time.getHours()\r\n    }\r\n    dispatch(setReservationData(reservationData))\r\n    history.push('/book-table')\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <ReservationSection id=\"Reservation\">\r\n        <ReservationTitle fromBookTablePage={fromBookTablePage} className=\"title\">RESERVATIONS</ReservationTitle>\r\n        <ReservationSubTitle fromBookTablePage={fromBookTablePage} className=\"title\">Book a table online. Confirmation will reach your email.</ReservationSubTitle>\r\n        <ReservationSmall fromBookTablePage={fromBookTablePage}>* all fields are required</ReservationSmall>\r\n        <br />\r\n        <ReservationForm fromBookTablePage={fromBookTablePage} onSubmit={submitForm}>\r\n          <FormInputWrapper>\r\n            <FormLabel>Date:</FormLabel>\r\n            <DatePickerInput\r\n              required={true}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              selected={date} onChange={handleDate} />\r\n            <IconWrapper> <BsIcons.BsCalendar></BsIcons.BsCalendar></IconWrapper>\r\n          </FormInputWrapper>\r\n          <FormInputWrapper>\r\n            <FormLabel>Name:</FormLabel>\r\n            <FormInput required={true}  \r\n              onChange={(e) => setName(e.target.value)} type=\"text\"></FormInput>\r\n            <IconWrapper> <HiIcons.HiPencilAlt></HiIcons.HiPencilAlt></IconWrapper>\r\n          </FormInputWrapper>\r\n          <FormInputWrapper>\r\n            <FormLabel>Time:</FormLabel>\r\n            <DatePickerInput\r\n              required={true}\r\n\r\n              selected={time}\r\n              onChange={handleTimeDate}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              timeIntervals={60}\r\n              minTime={moment().hours(12).minutes(0).toDate()}\r\n              maxTime={moment().hours(22).minutes(0).toDate()}\r\n              timeCaption=\"Time\"\r\n              dateFormat=\"HH:mm\"\r\n              timeFormat=\"HH:mm\"\r\n            />\r\n            <IconWrapper> <BsIcons.BsClock></BsIcons.BsClock></IconWrapper>\r\n          </FormInputWrapper>\r\n          <FormInputWrapper>\r\n            <FormLabel>Email:</FormLabel>\r\n            <FormInput required={true}\r\n              onChange={(e) => setEmail(e.target.value)} type=\"email\"></FormInput>\r\n            <IconWrapper> <HiIcons.HiOutlineMail></HiIcons.HiOutlineMail></IconWrapper>\r\n          </FormInputWrapper>\r\n          <FormInputWrapper>\r\n            <FormLabel>Number Of Guests:</FormLabel>\r\n            <FormInput required={true}\r\n              onChange={(e) => setPartySize(+e.target.value)} min={1} max={12} type=\"number\"></FormInput>\r\n            <IconWrapper> <BsIcons.BsFillPersonFill></BsIcons.BsFillPersonFill></IconWrapper>\r\n          </FormInputWrapper>\r\n          <FormInputWrapper>\r\n            <FormLabel>Phone Number:</FormLabel>\r\n            <FormInput required={true}\r\n              onChange={(e) => setPhoneNumber(e.target.value)} type=\"text\"></FormInput>\r\n            <IconWrapper> <HiIcons.HiPhone></HiIcons.HiPhone></IconWrapper>\r\n          </FormInputWrapper>\r\n          <SubmitButton>Check Availability</SubmitButton>\r\n        </ReservationForm>\r\n      </ReservationSection>\r\n    </>)\r\n}\r\n\r\nexport default Reservation\r\n\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation-style.ts",["411","412","413"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport * as BsIcons from 'react-icons/bs';\r\n\r\nexport const ReservationSection = styled.section`\r\n  padding: 40px;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const ReservationTitle = styled.h1<\r\n{ fromBookTablePage: boolean } >`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 3rem;\r\n  display: ${({ fromBookTablePage }) => (fromBookTablePage ? \"none\" : \"inline-block\")};\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2rem;\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\nexport const ReservationSubTitle = styled.h4<\r\n{ fromBookTablePage: boolean } >`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 2rem;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  display: ${({ fromBookTablePage }) => (fromBookTablePage ? \"none\" : \"inline-block\")};\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ReservationSmall = styled.small<\r\n{ fromBookTablePage: boolean } >`\r\n font-size:1rem;\r\n color: ${({ fromBookTablePage }) => (fromBookTablePage ? \"white\" : \"black\")};\r\n\r\n`;\r\nexport const ReservationForm = styled.form<\r\n{ fromBookTablePage: boolean } >`\r\n  display: flex;\r\n  background-color: white;\r\n  align-items: center;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  padding: 30px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.7);\r\n  @media screen and (max-width: 968px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\nexport const FormInputWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\nexport const FormLabel = styled.label`\r\n  padding-bottom: 10px;\r\n  font-weight: bold;\r\n`;\r\nexport const DatePickerInput = styled(DatePicker)`\r\n  cursor: pointer;\r\n  width: 300px;\r\n  height: 50px;\r\n  padding: 10px;\r\n  background-color: rgb(243, 241, 237);\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 968px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  background-color: rgb(243, 241, 237);\r\n  padding: 10px;\r\n  width: 300px;\r\n  height: 50px;\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 968px) {\r\n    width: 200px;\r\n  }\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n     -webkit-appearance: none;\r\n     margin: 0;\r\n}\r\n`;\r\nexport const IconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 35%;\r\n  z-index: 200;\r\n  right: 30px;\r\n  color: orange;\r\n`;\r\nexport const SubmitButton = styled.button`\r\n  background-color: rgb(249, 197, 106, 0.7);\r\n  padding: 10px;\r\n  width: 300px;\r\n  height: 50px;\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  margin-top: 20px;\r\n  :hover {\r\n    background-color: rgb(249, 197, 106);\r\n  }\r\n  @media screen and (max-width: 968px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n","F:\\projects\\burger-gril\\src\\components\\footer\\Footer.tsx",[],"F:\\projects\\burger-gril\\src\\components\\footer\\Footer-style.ts",[],"F:\\projects\\burger-gril\\src\\pages\\auth.tsx",["414","415","416"],"import React, { FC, useState, FormEvent, useEffect } from 'react';\r\nimport AuthForm from '../components/auth-form/AuthForm';\r\n\r\n\r\nconst Auth: FC = () => {\r\n\r\n  return (\r\n    <AuthForm></AuthForm>\r\n  );\r\n}\r\n\r\nexport default Auth;   ","F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm.tsx",["417","418","419","420","421"],"import React, { useEffect, useState } from 'react';\nimport { signInUserWithGoogle, logOut, signInUserWithFacebook, loginUser, signUpUser } from '../../redux/actions/authActions';\nimport { AuthFormSection, AuthFormContainer, Form, MainForm, SideForm, AuthFormTitle, IconsWrapper, FacebookIcon, GoogleIcon, SubTitle, Input, SubmitButton, SwitchButton } from './AuthForm-style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nconst AuthForm = () => {\n  const [current, setCurrent] = useState('signIn');\n  const [signInEmail, setSignInEmail] = useState('');\n  const [signInPassword, setSignInPassword] = useState('');\n  const [signUpEmail, setSignUpEmail] = useState('');\n  const [signUpPassword, setSignUpPassword] = useState('');\n  const [signUpName, setSignUpName] = useState('');\n  const dispatch = useDispatch();\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    dispatch(signUpUser({ email: signUpEmail, password: signUpPassword, name: signUpName }))\n  }\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    dispatch(loginUser({ email: signInEmail, password: signInPassword }))\n  }\n\n  return (\n    <>\n      <AuthFormSection>\n        <AuthFormContainer>\n          {current === 'signIn' && <Form onSubmit={handleSignIn}>\n            <MainForm>\n              <AuthFormTitle isSideForm={false}>Sign In</AuthFormTitle>\n              <IconsWrapper>\n                <FacebookIcon onClick={() => {\n                  dispatch(signInUserWithFacebook())\n                }}></FacebookIcon>\n                <GoogleIcon onClick={() => {\n                  dispatch(signInUserWithGoogle())\n                }}></GoogleIcon>\n              </IconsWrapper>\n              <SubTitle>or use your email account</SubTitle>\n              <Input onChange={(e) => {\n                setSignInEmail(e.target.value)\n              }} placeholder=\"Email\" type=\"email\"></Input>\n              <Input onChange={(e) => {\n                setSignInPassword(e.target.value)\n              }} placeholder=\"Password\" type=\"password\"></Input>\n              <SubmitButton>\n                SIGN IN\n            </SubmitButton>\n            </MainForm>\n            <SideForm>\n              <AuthFormTitle isSideForm={true}>Hello, Friend!</AuthFormTitle>\n              <SubTitle>Enter your personal details and start a journey full of discounts with us</SubTitle>\n              <SwitchButton onClick={() => {\n                setCurrent('signUp')\n              }} type=\"button\">Sign Up</SwitchButton>\n            </SideForm>\n          </Form>}\n          {current === 'signUp' && <Form onSubmit={handleSignUp}>\n            <MainForm>\n              <AuthFormTitle isSideForm={false}>Create Account\n            </AuthFormTitle>\n              <IconsWrapper>\n                <FacebookIcon onClick={() => {\n                  dispatch(signInUserWithFacebook())\n                }}></FacebookIcon>\n                <GoogleIcon onClick={() => {\n                  dispatch(signInUserWithGoogle())\n                }}></GoogleIcon>\n              </IconsWrapper>\n              <SubTitle>or use your email for  registration</SubTitle>\n              <Input onChange={(e) => {\n                setSignUpName(e.target.value)\n              }} placeholder=\"Name\" type=\"text\"></Input>\n              <Input onChange={(e) => {\n                setSignUpEmail(e.target.value)\n              }} placeholder=\"Email\" type=\"email\"></Input>\n              <Input onChange={(e) => {\n                setSignUpPassword(e.target.value)\n              }} placeholder=\"Password\" type=\"password\"></Input>\n              <SubmitButton>\n                SIGN Up\n            </SubmitButton>\n            </MainForm>\n            <SideForm>\n              <AuthFormTitle isSideForm={true}>Welcome Back!</AuthFormTitle>\n              <SubTitle>To keep you connected with us please login with your personal info</SubTitle>\n              <SwitchButton onClick={() => {\n                setCurrent('signIn')\n              }} type=\"button\">Sign In</SwitchButton>\n            </SideForm>\n          </Form>}\n\n        </AuthFormContainer>\n    </AuthFormSection>\n    </>);\n};\n\nexport default AuthForm;\n","F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews-style.ts",[],"F:\\projects\\burger-gril\\src\\hooks\\use-autoLogin.tsx",["422","423","424","425","426","427","428","429"],"import { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport firebase from '../firebase/firebaseConfig';\nimport { RootState } from '../redux';\nimport { getAuthUser, logOut } from '../redux/actions/authActions';\n\nexport default function useAutoLogin() {\n  const userFromLocalStorage = localStorage.getItem('currentUser');\n  const dispatch = useDispatch();\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\n  // const [token, setToken] = useState<any>(userFromLocalStorage? userFromLocalStorage: null);\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n      ? JSON.parse(localStorage.getItem('token'))\n      : null;\n    if (token && !loading) {\n      dispatch(getAuthUser(token));\n    }\n  }, []);\n\n}\n","F:\\projects\\burger-gril\\src\\auth\\PrivateRoute.tsx",[],"F:\\projects\\burger-gril\\src\\auth\\PrivateAlereadyAuthRoute.tsx",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\authConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\popupMessageReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\popupMessageConstants.ts",[],"F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm-style.ts",["430"],"import styled from 'styled-components';\r\nimport * as GoIcons from 'react-icons/go';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as FcIcons from 'react-icons/fc';\r\nimport AuthFormBackground from '../../images/reviews-background.jpg';\r\n\r\n\r\n\r\nexport const AuthFormSection = styled.section`\r\npadding-top:100px;\r\n// background:lightgrey;\r\n// height:100vh;\r\npadding-bottom:220px;\r\nbackground:url(${AuthFormBackground});\r\nbackground-position: center;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n\r\n`;\r\nexport const AuthFormContainer = styled.div`\r\n  max-width:1160px;\r\n  margin:0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nexport const Form =\r\n  styled.form\r\n    `\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color:white;\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }  \r\n  // margin-bottom:40px;\r\n  -webkit-animation-name: zoomIn;\r\n  animation-name: zoomIn;\r\n  -webkit-animation-duration: 1s;\r\n  animation-duration: 1s;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n  }\r\n  @-webkit-keyframes zoomIn {\r\n  0% {\r\n  opacity: 0;\r\n  -webkit-transform: scale3d(.3, .3, .3);\r\n  transform: scale3d(.3, .3, .3);\r\n  }\r\n  50% {\r\n  opacity: 1;\r\n  }\r\n  }\r\n  @keyframes zoomIn {\r\n  0% {\r\n  opacity: 0;\r\n  -webkit-transform: scale3d(.3, .3, .3);\r\n  transform: scale3d(.3, .3, .3);\r\n  }\r\n  50% {\r\n  opacity: 1;\r\n  }\r\n`;\r\nexport const MainForm = styled.div`\r\ndisplay: flex;\r\n\r\nflex-direction: column;\r\nalign-items: center;\r\nbackground:white;\r\npadding:20px 80px;\r\nborder-top-left-radius:30px;\r\nborder-bottom-left-radius:30px;\r\nflex:0.3;\r\nheight:650px;\r\n@media screen and (max-width: 768px) {\r\n  height:450px;\r\n  width:250px;\r\n  border-top-left-radius:0;\r\nborder-bottom-left-radius:0;\r\norder:1;\r\n}  \r\n\r\n`;\r\nexport const SideForm = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nbackground:#98DCD3;\r\nflex-direction: column;\r\npadding:20px 80px;\r\nborder-top-right-radius:30px;\r\nborder-bottom-right-radius:30px;\r\nflex:0.1;\r\nheight:650px;\r\n@media screen and (max-width: 768px) {\r\n  height:450px;\r\n  width:250px;\r\n  flex:1;\r\n  border-top-right-radius:0;\r\nborder-bottom-right-radius:0;\r\n}  \r\n\r\n`;\r\n\r\nexport const AuthFormTitle = styled.h1<{ isSideForm: boolean }>`\r\ncolor: ${({ isSideForm }) => (isSideForm ? 'white' : '#96DBE2')};\r\n  font-size: 3rem;\r\n  cursor:pointer;\r\n  margin-top:30px;\r\n  text-align:center;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.2rem;\r\n  }  \r\n`;\r\nexport const IconsWrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin-top:30px;\r\n\r\n   \r\n`;\r\nexport const FacebookIcon = styled(FaIcons.FaFacebookF)`\r\n  font-size: 2.3rem;\r\n  cursor:pointer;\r\n  background:white;\r\n  color:blue;\r\n  border-radius:50%;\r\n  border:1px solid lightgrey;\r\n  padding:5px;\r\n  margin-right:20px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.2rem;\r\n    \r\n  }\r\n`;\r\nexport const GoogleIcon = styled(FcIcons.FcGoogle)`\r\n  font-size: 2.3rem;\r\n  cursor:pointer;\r\n  border-radius:50%;\r\n  border:1px solid lightgrey;\r\n  padding:5px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.2rem;\r\n    \r\n  }\r\n`;\r\nexport const SubTitle = styled.p`\r\n  font-size: 1.1rem;\r\n  margin-top:30px;\r\n  color:grey;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1rem;\r\n    \r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  font-size: 1.3rem;\r\n  background-color:#EFEFEF;\r\n  border:none;\r\n  outline:none;\r\n  padding:10px;\r\n  margin-top:30px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n    \r\n  }\r\n`;\r\nexport const SubmitButton = styled.button`\r\n  font-size: 1.3rem;\r\n  background-color:rgb(150,219,226,0.7);\r\n  border:none;\r\n  color:white;\r\n  outline:none;\r\n  border-radius:50%;\r\n  cursor: pointer;\r\n  padding:15px; \r\n  margin-top:30px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n  }\r\n  :hover{  \r\n    background-color:rgb(150,219,226);\r\n  }\r\n`;\r\nexport const SwitchButton = styled.button`\r\n  font-size: 1.3rem;\r\n  background-color:rgb(227,157,36,0.8);\r\n  border:2px solid white;\r\n  color:white;\r\n  outline:none;\r\n  border-radius:50%;\r\n  cursor: pointer;\r\n  padding:15px ;\r\n  margin-top:30px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n  }\r\n  :hover{  \r\n    background-color:rgb(227,157,36);\r\n  }\r\n`;\r\n","F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage.tsx",[],"F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage-style.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\popupMessageAction.ts",[],"F:\\projects\\burger-gril\\src\\pages\\bookTable.tsx",[],"F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation.tsx",[],"F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation-style.ts",["431","432","433","434","435","436"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport Background from '../../images/hero2.jpg';\r\nimport TitleBackground from '../../images/burger-title-background.jpg';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\n\r\nexport const TableContainer = styled.div`\r\n  margin:3% ;\r\n  // background:red;\r\n  // padding:100px;\r\n  `;\r\nexport const TableWrapper = styled.div<\r\n{ tableEmpty: boolean } >`\r\n  // margin: 3% 3%;\r\n  background-color: rgba(245, 246, 250, 0.4);\r\n  padding: 15px;\r\n  border-radius: 25px;\r\n  min-width: 80px;\r\n  :hover{\r\n    cursor: ${({ tableEmpty }) => (tableEmpty ? \"pointer\" : \"default\")};\r\n  }\r\n`;\r\nexport const TableRow = styled.div`\r\n  margin-bottom: 8px;\r\n  text-align:center;\r\n`;\r\nexport const Chair = styled.span<\r\n{ tableEmpty: boolean } >`\r\n    background-color: ${({ tableEmpty }) => (tableEmpty ? \"white\" : \"#e74c3c\")};\r\n    border: solid 2px black;\r\n    border-radius: 50%;\r\n    padding: 1px 10px;\r\n    margin: 3px;\r\n`;\r\nexport const TableName = styled.p`\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    padding-top: 15px;\r\n    font-family: Roboto, sans-serif;\r\n`;\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation.tsx",["437","438","439","440","441","442","443","444","445"],"import React, { useEffect, useState } from 'react';\nimport { signInUserWithGoogle, logOut, signInUserWithFacebook, loginUser, signUpUser } from '../../redux/actions/authActions';\nimport { BookReservationSection, BookReservationContainer, BookReservationTitle, Form, InputsWrapper, DatePickerInput, Input, FormSelect, FormSelectOption, TablesContainer, ChairSymbolWrapper, ChairSymbolLabel, ChairSymbol } from './Book-Reservation-style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport TableToDisplay from '../table-reservation/Table-Reservation';\nimport { ReservationData, TableData } from '../../redux/types/reservationTypes';\nimport { CLEAR_RESERVATION_DATA } from '../../redux/constants/reservationConstants';\nimport { bookTable, getTables } from './../../redux/actions/reservationActions';\nimport Loader from '../loader/Loader';\nimport Reservation from '../reservation/Reservation';\nimport PhoneConformation from '../phone-conformation/PhoneConformation';\nimport ReservationSummary from '../reservation-summary/ReservationSummary';\n\n\nconst BookReservation = () => {\n  const dispatch = useDispatch();\n  const { reservationData }: { reservationData: ReservationData } = useSelector((state: RootState) => state.reservationAvailability);\n  let { tables, loading }: { tables: TableData[], loading: boolean } = useSelector((state: RootState) => state.getTables);\n  const { reservationData: ReservationDataAfterBookingCompleted }: { loading: boolean, reservationData: ReservationData } = useSelector((state: RootState) => state.bookTable);\n\n  const [tableSelected, setTableSelected] = useState<any>(null);\n  const [date, setDate] = useState<any>(reservationData?.date || new Date());\n  const [tablesToDisplay, seTablesToDisplay] = useState<TableData[]>(tables);\n  const [time, setTime] = useState<any>(reservationData?.time || 12);\n  const [partySize, setPartySize] = useState<number>(+reservationData?.partySize || 1);\n  const [location, setLocation] = useState<string>(\"Any Location\");\n  const locations = [\"Any Location\", \"Patio\", \"Inside\", \"Bar\"];\n  useEffect(() => {\n    if (tables) {\n      if (location === 'Any Location') {\n        seTablesToDisplay(tables.filter((table) => {\n          return +table.capacity === partySize\n        }))\n      } else {\n        seTablesToDisplay(tables.filter((table) => {\n          return +table.capacity === +partySize && table.location === location\n        }))\n      }\n    }\n  }, [tables])\n\n  useEffect(() => {\n    const dateToCheckTablesAvailabilityInDb = date.getDate().toString() + \" \" + (date.getMonth() + 1).toString() + \" \" + date.getFullYear();\n    const timeToCheckTablesAvailabilityInDb = time;\n    dispatch(getTables(dateToCheckTablesAvailabilityInDb, timeToCheckTablesAvailabilityInDb))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date, time])\n\n  useEffect(() => {\n    if (reservationData) {\n      setDate(reservationData.date);\n      setTime(reservationData.time);\n      setPartySize(reservationData.partySize);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reservationData])\n\n\n\n  const onTableSelected = (table) => {\n    setTableSelected(table);\n  }\n\n\n  const handleDate = (date: any) => {\n    setDate(date);\n    if (location === 'Any Location') {\n      seTablesToDisplay(tables.filter((table) => {\n        return +table.capacity === partySize\n      }))\n    } else {\n      seTablesToDisplay(tables.filter((table) => {\n        return +table.capacity === +partySize && table.location === location\n      }))\n    }\n  }\n  return (\n    <>\n      {loading && <Loader />}\n      {!reservationData && !ReservationDataAfterBookingCompleted && <BookReservationSection>\n        <BookReservationContainer>\n          <BookReservationTitle>Please Fill Some Deatils before booking a table</BookReservationTitle>\n          <Reservation fromBookTablePage={true} />\n        </BookReservationContainer>\n      </BookReservationSection>}\n      {ReservationDataAfterBookingCompleted && <BookReservationSection>\n        <BookReservationContainer>\n          <ReservationSummary reservationData={ReservationDataAfterBookingCompleted} />\n        </BookReservationContainer>\n      </BookReservationSection>}\n      {tablesToDisplay && reservationData && <BookReservationSection>\n        <BookReservationContainer>\n          <BookReservationTitle>Book A Table</BookReservationTitle>\n          {!tableSelected && <Form>\n            <InputsWrapper>\n              <DatePickerInput\n                dateFormat=\"dd/MM/yyyy\"\n                selected={date} onChange={handleDate} />\n              <FormSelect\n                value={time}\n                onChange={e => setTime(e.target.value)}\n              >\n                <FormSelectOption disabled>Select a time</FormSelectOption>\n                <FormSelectOption value='12'>12:00</FormSelectOption>\n                <FormSelectOption value='13'>13:00</FormSelectOption>\n                <FormSelectOption value='14'>14:00</FormSelectOption>\n                <FormSelectOption value='15'>15:00</FormSelectOption>\n                <FormSelectOption value='16'>16:00</FormSelectOption>\n                <FormSelectOption value='17'>17:00</FormSelectOption>\n                <FormSelectOption value='18'>18:00</FormSelectOption>\n                <FormSelectOption value='19'>19:00</FormSelectOption>\n                <FormSelectOption value='20'>20:00</FormSelectOption>\n                <FormSelectOption value='21'>21:00</FormSelectOption>\n                <FormSelectOption value='22'>22:00</FormSelectOption>\n              </FormSelect>\n\n              <FormSelect value={location} onChange={(e) => {\n                setLocation(e.target.value);\n                if (e.target.value === 'Any Location') {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === partySize\n                  }))\n                  console.log(tablesToDisplay)\n                } else {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === partySize && table.location === e.target.value\n                  }))\n                }\n              }}>\n                {locations.map((location, index) => <FormSelectOption value={location}\n                  key={index}\n                >\n                  {location}\n                </FormSelectOption>)}\n              </FormSelect>\n\n\n\n\n              <FormSelect value={partySize} onChange={(e) => {\n                setPartySize(+e.target.value);\n                if (location === 'Any Location') {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === +e.target.value\n                  }))\n                } else {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === +e.target.value && table.location === location\n                  }))\n                }\n\n\n              }}>\n                <FormSelectOption disabled>Please select party size</FormSelectOption>\n                <FormSelectOption value={1}>Party of 1</FormSelectOption>\n                <FormSelectOption value={2}>Party of 2</FormSelectOption>\n                <FormSelectOption value={3}>Party of 3</FormSelectOption>\n                <FormSelectOption value={4}>Party of 4</FormSelectOption>\n                <FormSelectOption value={5}>Party of 5</FormSelectOption>\n                <FormSelectOption value={6}>Party of 6</FormSelectOption>\n                <FormSelectOption value={7}>Party of 7</FormSelectOption>\n                <FormSelectOption value={8}>Party of 8</FormSelectOption>\n                <FormSelectOption value={9}>Party of 9</FormSelectOption>\n                <FormSelectOption value={10}>Party of 10</FormSelectOption>\n                <FormSelectOption value={11}>Party of 11</FormSelectOption>\n                <FormSelectOption value={12}>Party of 12</FormSelectOption>\n\n              </FormSelect>\n\n            </InputsWrapper>\n\n            <TablesContainer>\n              <ChairSymbolWrapper>\n                <ChairSymbol tableEmpty={true}></ChairSymbol>\n                <ChairSymbolLabel> Available</ChairSymbolLabel>\n                <ChairSymbol tableEmpty={false}></ChairSymbol>\n                <ChairSymbolLabel> Unavailable</ChairSymbolLabel>\n              </ChairSymbolWrapper>\n              {tablesToDisplay && tablesToDisplay.map((table, index) =>\n                <TableToDisplay onTableSelected={onTableSelected} key={index} table={table}></TableToDisplay>\n              )}\n            </TablesContainer>\n          </Form>}\n          {tableSelected && <>\n            <PhoneConformation date={date} partySize={partySize} time={time} table={tableSelected} phoneNumber={reservationData.phoneNumber} />\n\n          </>}\n        </BookReservationContainer>\n      </BookReservationSection>}\n    </>);\n};\n\nexport default BookReservation;\n","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation-style.ts",["446","447","448"],"import styled from 'styled-components';\r\nimport * as GoIcons from 'react-icons/go';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as FcIcons from 'react-icons/fc';\r\nimport BookReservationBackground from '../../images/bestsellers-background.jpg';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n// export const TopNavbarContainer = styled.div<\r\n//   { scrollNav: boolean } >`\r\n//   background: ${({ scrollNav }) => (scrollNav ? 'rgb(41,41,41)' : 'transparent')};\r\n//   height: 80px;\r\n//   display: flex;\r\n//   transition: 1.3s all ease;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   max-width: 1160px;\r\n//   margin: 0 auto;\r\n//   @media screen and (max-width: 768px) {\r\n//     height: 120px;\r\n//     // padding-top:20px;\r\n//   }\r\n// `;\r\n\r\nexport const BookReservationSection = styled.section`\r\npadding-top:100px;\r\npadding-bottom:50px;\r\n// background:lightgrey;\r\nmin-height:100vh;\r\n// padding-bottom:220px;\r\nbackground:url(${BookReservationBackground});\r\nbackground-position: center;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\n\r\n`;\r\nexport const BookReservationContainer = styled.div`\r\n  max-width:1360px;\r\n  margin:0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // background:rgb(255,255,255,0.6);\r\n  // margin-top:200px;\r\n  padding:50px;\r\n`;\r\nexport const BookReservationTitle = styled.h1`\r\ncolor:white;\r\nfont-family: 'Imbue', serif;\r\nfont-size:4.3rem;\r\nmargin-bottom:20px;\r\nmargin-right: 20px;\r\ntext-align: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size:3.3rem;\r\n  }\r\n`;\r\n\r\nexport const Form =\r\n  styled.form\r\n    `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // padding:200px;\r\n`;\r\nexport const InputsWrapper =\r\n  styled.div\r\n    `\r\n    display: flex;\r\n    // flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;\r\nexport const DatePickerInput = styled(DatePicker)`\r\n  cursor: pointer;\r\n  width: 200px; \r\n  height: 50px;\r\n  padding: 10px;\r\n  color:white;\r\n  background-color: rgb(231,76,20);\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 468px) {\r\n    width: 200px;\r\n    margin-right: 0px;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  cursor: pointer;\r\n  width: 200px; \r\n  height: 50px;\r\n  padding: 10px;\r\n  color:white;\r\n  background-color: rgb(231,76,20);\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 468px) {\r\n    width: 200px;\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  background-color: rgb(231,76,20);\r\n  padding: 10px;\r\n  color:white;\r\n  cursor: pointer;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 468px) {\r\n    width: 200px;\r\n    margin-right: 0px;\r\n\r\n  }\r\n}\r\n`;\r\nexport const FormSelectOption = styled.option`\r\n  background-color: white;\r\n  color:black;\r\n  cursor: pointer;\r\n}\r\n`;\r\nexport const TablesContainer =\r\n  styled.div\r\n    `\r\n    display: flex;\r\n    width:100%;\r\n    // min-width:880px;\r\n    justify-content: center;\r\n    background:rgb(231,76,20,0.8);\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    position:relative;\r\n`;\r\nexport const ChairSymbolWrapper = styled.div`\r\n  display:flex;\r\n  // flex-direction: column;\r\n  // justify-content: center;\r\n  align-items: center;\r\n  width:100%;\r\n\r\n`;\r\nexport const ChairSymbolLabel = styled.label`\r\n  color:white;\r\n  // margin-left:10px;\r\n  padding: 5px;\r\n\r\n`;\r\nexport const ChairSymbol = styled.span<\r\n  { tableEmpty: boolean } >`\r\n    background-color: ${({ tableEmpty }) => (tableEmpty ? \"white\" : \"#e74c3c\")};\r\n    border: solid 2px black;\r\n    border-radius: 50%;\r\n    padding: 15px;\r\n    margin: 13px;\r\n    position:relative;\r\n    // bottom:100px;\r\n`;","F:\\projects\\burger-gril\\src\\redux\\reducers\\reservationReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\reservationConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\reservationActions.ts",["449","450"],"import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport staticFireBase from 'firebase';\r\nimport { popupMessage } from './popupMessageAction';\r\nimport { ReservationData, TableData } from './../types/reservationTypes';\r\nimport { ReservationAction } from '../types/reservationTypes';\r\nimport { SET_RESERVATION_DATA, CLEAR_RESERVATION_DATA, GET_TABLES_REQUEST, GET_TABLES_SUCCESS, GET_TABLES_FAIL, BOOK_TABLE_FAIL, BOOK_TABLE_SUCCESS } from './../constants/reservationConstants';\r\nimport { BOOK_TABLE_REQUEST } from '../constants/reservationConstants';\r\nimport { User } from './../types/authTypes';\r\nimport axios from 'axios';\r\nimport { ServerBaseUrl } from '../constants/endPoints';\r\n\r\nexport const bookTable = ({ date, table, time, partySize, email, name }: { date: string, time: string, table: TableData, partySize: number, email: string, name: string }): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: BOOK_TABLE_REQUEST\r\n      })\r\n      const {\r\n        userLogin\r\n      } = getState();\r\n\r\n      const { user }: { user: User } = userLogin;\r\n      let userId;\r\n      if (user && user.id) {\r\n        userId = user.id;\r\n      }\r\n      const isDateAndTimeAlreadyInDb = await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).get();\r\n      if (isDateAndTimeAlreadyInDb.exists) {\r\n        const tables = Object.values(isDateAndTimeAlreadyInDb.data())\r\n        const findTable = tables.find(t => t.name === table.name);\r\n        findTable.isAvailable = false;\r\n        const tablesToSaveInDb = Object.assign({}, tables);\r\n        await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).set(tablesToSaveInDb);\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      } else {\r\n        const tablesSnapshot = await firebase.firestore().collection('tables').get();\r\n        const tables = tablesSnapshot.docs.map(contentObj => ({ ...contentObj.data() })) as TableData[];\r\n        const findTable = tables.find(t => t.name === table.name);\r\n        findTable.isAvailable = false;\r\n        const tablesToSaveInDb = Object.assign({}, tables);\r\n        await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).set(tablesToSaveInDb);\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      }\r\n\r\n      const reservationData = { date, time, partySize, email, name, table }\r\n      const isReservationAlreadyExists = await firebase.firestore().collection('/reservations').doc(userId && userId).get();\r\n      if (isReservationAlreadyExists.exists) {\r\n        //convert into array the pervious reservations\r\n        const reservations = Object.values(isReservationAlreadyExists.data())\r\n        // push the latest reservation\r\n        reservations.push({ ...reservationData })\r\n\r\n        //convert into object all the reservations, firebase not accepting arrays\r\n        const reservationsToSaveInDb = Object.assign({}, reservations);\r\n\r\n        await firebase.firestore().collection('/reservations').doc(userId ? userId : date + \" \" + time + \" \" + table.name).set(reservationsToSaveInDb);\r\n      } else {\r\n        \r\n        await firebase.firestore().collection('/reservations').doc(userId ? userId : date + \" \" + time + table.name).set({ 0: reservationData });\r\n      }\r\n\r\n\r\n\r\n      dispatch({\r\n        type: BOOK_TABLE_SUCCESS,\r\n        payload: reservationData\r\n      });\r\n    \r\n      const { data } = await axios.post(`${ServerBaseUrl}/email/send-reservation-mail`, {\r\n        email: reservationData.email,\r\n        name: reservationData.name,\r\n        date: reservationData.date,\r\n        time: reservationData.time,\r\n        partySize:reservationData.partySize,  \r\n        table: reservationData.table,\r\n      });\r\n      \r\n      dispatch(popupMessage({ type: 'success', content: \"Table Booked!\" }))\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: BOOK_TABLE_FAIL,\r\n        payload: err.message\r\n      });\r\n      dispatch(popupMessage({ type: 'error', content: \"Failed to Book a table\" }))\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getTables = (date, time): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: GET_TABLES_REQUEST,\r\n      });\r\n\r\n\r\n      const isDateAndTimeAlreadyInDb = await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).get();\r\n      if (isDateAndTimeAlreadyInDb.exists) {\r\n        const tables = Object.values(isDateAndTimeAlreadyInDb.data())\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      } else {\r\n        const tablesSnapshot = await firebase.firestore().collection('tables').get();\r\n        const tables = tablesSnapshot.docs.map(contentObj => ({ ...contentObj.data() })) as TableData[]\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      }\r\n     \r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_TABLES_FAIL,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const setReservationData = (data: ReservationData): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n\r\n    dispatch({\r\n      type: SET_RESERVATION_DATA,\r\n      payload: data\r\n    })\r\n  }\r\n}\r\nexport const clearReservationData = (data: ReservationData): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n\r\n    dispatch({\r\n      type: CLEAR_RESERVATION_DATA\r\n    })\r\n\r\n  }\r\n}\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\loader\\Loader.tsx",[],"F:\\projects\\burger-gril\\src\\components\\loader\\Loader-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation.tsx",["451","452","453"],"import React, {useEffect, useState } from 'react';\r\nimport firebaseForCaptcha from 'firebase';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { Captcha, Title, Input, Button, Error } from './PhoneConformation-style'\r\nimport { bookTable } from '../../redux/actions/reservationActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ReservationData } from '../../redux/types/reservationTypes';\r\nimport { RootState } from '../../redux';\r\nimport Loader from '../loader/Loader';\r\nimport { useHistory } from 'react-router';\r\nimport convertPhoneNumber from '../../helpers/convertPhoneNumber';\r\nimport { setTimeout } from 'timers';\r\nimport { CLEAR_RESERVATION_DATA } from '../../redux/constants/reservationConstants';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    MyNamespace: any,\r\n    recaptchaVerifier: any,\r\n    // confirmationResult: any\r\n  }\r\n}\r\nfunction PhoneConformation({ phoneNumber, date, table, partySize, time }) {\r\n  const history= useHistory();\r\n  const dispatch = useDispatch();\r\n  const { reservationData }: { reservationData: ReservationData } = useSelector((state: RootState) => state.reservationAvailability);\r\n  const { loading,reservationData:ReservationDataAfterBookingCompleted }: { loading: boolean,reservationData:ReservationData } = useSelector((state: RootState) => state.bookTable);\r\n  const convertedPhoneNumber = convertPhoneNumber(phoneNumber);\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState('');\r\n// if (ReservationDataAfterBookingCompleted) {\r\n//   history.push('/');\r\n// }\r\n\r\n  useEffect(() => {  \r\n      window.recaptchaVerifier = new firebaseForCaptcha.auth.RecaptchaVerifier('recaptcha-container');\r\n      const appVerifier = window.recaptchaVerifier;\r\n      console.log(convertedPhoneNumber)\r\n      firebase.auth().signInWithPhoneNumber(convertedPhoneNumber, appVerifier)\r\n        .then((confirmationResult) => {\r\n          setConfirmationResult(confirmationResult)\r\n        }).catch((error) => {\r\n          console.log(error)\r\n          setError('Failed to send sms Please try a again later')\r\n        });\r\n      \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const sendCode = () => {\r\n    if (confirmationResult) {\r\n      setProcessing(true);\r\n      confirmationResult.confirm(code).then((result) => {\r\n        const dateToSend = date.getDate().toString() + \" \" + (date.getMonth() + 1).toString() + \" \" + date.getFullYear();\r\n        dispatch(bookTable({ date: dateToSend, partySize, time, table, email: reservationData.email, name: reservationData.name }))\r\n       \r\n      }).catch((error) => {\r\n        console.log(error)\r\n        setProcessing(false);\r\n        setError('wrong code entered!')\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!confirmationResult && !ReservationDataAfterBookingCompleted && <>\r\n        <Title>Please Prove you are not a robot </Title>\r\n        <Captcha id=\"recaptcha-container\"></Captcha>\r\n      </>}\r\n      {confirmationResult && !ReservationDataAfterBookingCompleted && <>\r\n        {loading && <Loader />}\r\n        <Title>Verification Sms message was sent to your phone, please enter the code you received.</Title>\r\n        <Input placeholder=\"Enter Verification Code\" type=\"text\" onChange={e => {\r\n          setError('');\r\n          setCode(e.target.value)\r\n        }} />  \r\n        {error && !ReservationDataAfterBookingCompleted && <Error>{error}</Error>}\r\n        <Button disabled={!processing && code ? false : true} onClick={() => sendCode()} id=\"confirm-code\">\r\n          Book!\r\n    </Button>\r\n      </>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PhoneConformation;\r\n","F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary.tsx",["454","455","456","457"],"import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { ReservationSummaryTitle, ReservationSummarySubTitle, ReservationSummarySummary, ReservationSummarySummaryDeatils, } from './ReservationSummary-style';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CLEAR_RESERVATION_DATA } from '../../redux/constants/reservationConstants';\r\n\r\n\r\nconst ReservationSummary = ({ reservationData }) => {\r\nconst dispatch = useDispatch();\r\nuseEffect(() => {\r\n  return () => {\r\n    dispatch({type:CLEAR_RESERVATION_DATA})\r\n\r\n  }\r\n}, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <ReservationSummaryTitle>Your Booking has Been completed!</ReservationSummaryTitle>\r\n      <ReservationSummarySummary>\r\n        <ReservationSummarySubTitle>Thank you {reservationData.name}</ReservationSummarySubTitle>\r\n        <ReservationSummarySubTitle>an email with your booking confirmation has been sent to your email address</ReservationSummarySubTitle>\r\n        {/* var n = str.replace(\"Microsoft\", \"W3Schools\"); */}\r\n\r\n        <ReservationSummarySummaryDeatils>Date: {reservationData.date.split(\" \").join(\"/\")} </ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>Time: {reservationData.time}:00</ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>Guests:{reservationData.partySize}</ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>{reservationData.table.name}, {reservationData.table.location}</ReservationSummarySummaryDeatils>\r\n      </ReservationSummarySummary> \r\n    </>);\r\n};\r\n\r\nexport default ReservationSummary;\r\n","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary-style.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\endPoints.ts",[],"F:\\projects\\burger-gril\\src\\helpers\\convertPhoneNumber.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar-style.tsx",["458"],"import styled from 'styled-components';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\n\r\n\r\nexport const TopNavbar = styled.div`\r\n  // background:#292929;\r\n  height: 80px;\r\n  width: 100%;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  top:0;\r\n  @media screen and (max-width: 768px) {\r\n    height: 120px;\r\n    // padding-top:20px;\r\n  }\r\n  `;\r\nexport const TopNavbarContainer = styled.div<\r\n  { scrollNav: boolean } >`\r\n  background: ${({ scrollNav }) => (scrollNav ? 'rgb(41,41,41)' : 'transparent')};\r\n  height: 80px;\r\n  display: flex;\r\n  transition: 1.3s all ease;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 1160px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 768px) {\r\n    height: 120px;\r\n    // padding-top:20px;\r\n  }\r\n`;\r\n\r\nexport const HamburgerWrapper = styled.div`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  background: none;\r\n  justify-self: start;\r\n  display: none;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const HamburgerMenu = styled(FaIcons.FaBars)`\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\nexport const LogoWrapper = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  margin-left: 16px;\r\n  width: 50px;\r\n  // padding-top: 10px;\r\n  @media screen and (max-width: 768px) {\r\n    margin-right: 75px;\r\n  }\r\n  \r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n`;\r\nexport const LinksWrapper = styled.div`\r\n  display: flex;\r\n  margin-right:10px;\r\n`;\r\n\r\nexport const NavbarItem = styled.span`\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: start;\r\n  padding: 8px 0px 8px 16px;\r\n  list-style: none;\r\n  height: 80px;\r\n  color:white;\r\n  a{\r\n    text-decoration: none;\r\n    // color: #f5f5f5;\r\n    color: white;\r\n    font-size: 18px;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    // padding: 0 16px;\r\n    border-radius: 4px;\r\n    transition: all .2s ease-in-out; \r\n  }\r\n  a:hover{\r\n    color:lightblue ;\r\n  }\r\n\r\n  div{\r\n    text-decoration: none;\r\n    // color: #f5f5f5;\r\n    color: white;\r\n    font-size: 18px;\r\n    width: 70%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    // padding: 0 16px;\r\n    border-radius: 4px;\r\n    transition: all .2s ease-in-out; \r\n  }\r\n\r\n  div:hover{\r\n    color:lightblue;\r\n  }\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    display:none\r\n  }\r\n  span {\r\n    margin-left: 10px;\r\n  } \r\n\r\n  }\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\navbar\\NavbarData.tsx",["459"],"F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart.tsx",["460","461","462","463","464","465","466","467","468"],"import React, { useState, useEffect } from 'react'\r\nimport { CloseIcon, CartWrapper, CartLogo, NumberOfCartItems, CartUl, TopArrowTriangle, CartItemRow, CartTitle, CartItemImage, CartItemDescriptionAndPriceWrapper, CartItemDescription, CartItemPrice, CartItemAdditionalDiscount, CartItemTotalPrice, ViewCartLink } from './NavbarCart-style';\r\nimport { User } from '../../redux/types/authTypes';\r\nimport * as FiIcons from 'react-icons/fi';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/index';\r\nimport { CartItem } from '../../redux/types/cartTypes';\r\nimport { removeItemFromCart } from '../../redux/actions/cartActions';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { getCartTotalForLoggedUser } from '../../helpers/getCartTotal';\r\nimport { getCartTotal } from './../../helpers/getCartTotal';\r\n\r\nconst NavbarCart = ({ showCartItems }: { showCartItems: boolean }) => {\r\n  const dispatch = useDispatch();\r\n  const [pro, setPro] = useState([])\r\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\r\n  const { cartItems }: { cartItems: CartItem[] } = useSelector((state: RootState) => state.cart);\r\n\r\n\r\n\r\n  return (\r\n    <CartWrapper showCartItems={showCartItems} showScrollBar={cartItems && cartItems.length >= 7}>\r\n      <TopArrowTriangle showCartItems={showCartItems}></TopArrowTriangle>\r\n      <CartLogo />\r\n      <NumberOfCartItems> {cartItems.length}</NumberOfCartItems>\r\n      <CartUl>\r\n        <CartItemRow onClick={() => {\r\n        }}><CartTitle>Shopping Cart</CartTitle>\r\n        </CartItemRow>\r\n        <hr />\r\n        {cartItems && cartItems.map((cartItem, index) => (\r\n          <CartItemRow key={index}><CartItemImage src={cartItem.image} />\r\n            <CartItemDescriptionAndPriceWrapper>\r\n              <CartItemDescription>{cartItem.title}</CartItemDescription>\r\n              <CartItemPrice>${cartItem.price}</CartItemPrice>\r\n              \r\n            </CartItemDescriptionAndPriceWrapper>\r\n            <CloseIcon onClick={() => {\r\n              dispatch(removeItemFromCart(cartItem.id))\r\n            }} />\r\n          </CartItemRow>\r\n        ))}\r\n        <hr />\r\n        <CartItemRow>\r\n          {/* calculate 5% discount if logged user or calculate cart sum */}\r\n          <CartItemTotalPrice>{cartItems ? '$' : '0'}{user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)}\r\n            <br />\r\n            {user && <CartItemAdditionalDiscount>(5% discount for Registered User)</CartItemAdditionalDiscount>}\r\n          </CartItemTotalPrice>\r\n          <ViewCartLink to=\"cart\">View Cart</ViewCartLink>\r\n        </CartItemRow>\r\n      </CartUl>\r\n\r\n    </CartWrapper>\r\n  )\r\n\r\n}\r\n\r\nexport default NavbarCart\r\n","F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart-style.tsx",["469"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\n\r\n\r\nexport const CartWrapper = styled.div<{ showCartItems: boolean,showScrollBar:boolean }>`\r\n    position: relative ;\r\n    ul{\r\n      display: ${({ showCartItems }) => (showCartItems ? 'block' : 'none')};\r\n      position: absolute;\r\n      background-color: #f1f1f1;\r\n      min-width: 300px;\r\n      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n      z-index: 1;\r\n      top:115%;\r\n      right:-20%;\r\n      max-height:600px;\r\n      overflow:hidden;\r\n      overflow-y: ${({ showScrollBar }) => (showScrollBar ? 'auto' : 'hidden')};\r\n      \r\n    }\r\n`;\r\n\r\n\r\nexport const CartLogo = styled(IoIcons.IoIosCart)`\r\n font-size:3rem;\r\n margin-right:5px;\r\n`;\r\nexport const NumberOfCartItems = styled.div`\r\n  width: 36px!important;\r\n  height: 36px !important;\r\n  padding: 8px;\r\n  background: rgb(247,195,105);\r\n  border-radius: 50% !important;\r\n  // border: 2px solid #666;\r\n  color:black !important;\r\n  // text-align: center !important;\r\n  // font: 32px Arial, sans-serif;\r\n`;\r\nexport const CartUl= styled.ul`\r\n    position: relative;\r\n`;\r\n\r\nexport const TopArrowTriangle = styled.div<{ showCartItems: boolean }>`\r\n-webkit-clip-path: polygon(50% 69%, 11% 100%, 88% 100%);\r\nclip-path: polygon(50% 69%, 11% 100%, 88% 100%);\r\nheight:125px;\r\nwidth:125px;\r\nbackground:#f1f1f1;\r\nposition: absolute;\r\ntop:10px;\r\ndisplay: ${({ showCartItems }) => (showCartItems ? 'block' : 'none !important')}; \r\n`;\r\n\r\nexport const CartItemRow = styled.span`\r\ncolor: black;\r\npadding: 12px;\r\ntext-decoration: none;\r\ndisplay: flex;\r\nalign-items: center;\r\n`;\r\nexport const CartTitle = styled.h3`\r\ncolor: black;\r\npadding: 12px;\r\ntext-decoration: none;\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\n`;\r\nexport const CartItemImage = styled.img`\r\nwidth:50px;\r\nheight:50px;\r\n// object-fit:contain;\r\nmargin-right:10px;\r\n`;\r\nexport const CartItemDescriptionAndPriceWrapper = styled.div`\r\ndisplay:flex;\r\n// align-items: center;\r\nflex-direction: column;\r\njustify-content: center;\r\n`;\r\nexport const CartItemDescription = styled.span`\r\nfont-size:14px;\r\ncolor:black;\r\nwidth:100%;\r\nline-height:1.5;\r\n\r\n`;\r\nexport const CartItemPrice = styled.span`\r\nfont-size:20px;\r\ncolor:black;\r\nwidth:100%;\r\nfont-family: 'Imbue', serif;\r\n`;\r\nexport const CartItemAdditionalDiscount = styled.small`\r\nfont-size:17px;\r\ncolor:black;\r\nwidth:100%;\r\nfont-family: 'Imbue', serif;\r\nposition: absolute;\r\nleft:3px;\r\n`;\r\n\r\nexport const CloseIcon = styled(AiIcons.AiOutlineClose)`\r\n  color: black;\r\n  cursor: pointer;  \r\n`;\r\n\r\n\r\nexport const CartItemTotalPrice = styled.span`\r\nfont-size:24px;\r\ncolor:black;\r\nwidth:100%;\r\n`;\r\nexport const ViewCartLink = styled(Link)`\r\n// font-size:14px;\r\ncolor:black !important;\r\npadding:20px;\r\nwidth:200px !important;\r\nbackground:#F7C369;\r\nopacity:0.8;\r\ntext-align: center !important;\r\n:hover{\r\n  background:#F7C369;\r\n  opacity:1;\r\n}\r\n`;\r\n\r\n","F:\\projects\\burger-gril\\src\\redux\\reducers\\cartReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\cartConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\cartActions.ts",["470","471","472","473","474"],"import { ThunkAction } from 'redux-thunk';\r\nimport { RESET_ERROR, USER_LOGOUT } from '../constants/authConstants';\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport staticFireBase from 'firebase';\r\nimport { popupMessage } from './popupMessageAction';\r\nimport { ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART } from '../constants/cartConstants';\r\nimport { CartAction, CartItem } from '../types/cartTypes';\r\n\r\n\r\nexport const addItemToCart = (cartItem: CartItem): ThunkAction<void, RootState, null, CartAction> => {\r\n  return dispatch => {\r\n    dispatch({  \r\n      type: ADD_ITEM_TO_CART,\r\n      payload: cartItem\r\n    });\r\n  }\r\n}\r\n\r\nexport const removeItemFromCart = (cartId: string): ThunkAction<void, RootState, null, CartAction> => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: REMOVE_ITEM_FROM_CART,\r\n      payload: cartId\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\redux\\actions\\productsActions.ts",["475"],"import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport staticFireBase from 'firebase';\r\nimport { GET_BESTSELLERS_REQUEST, GET_PRODUCTS_REQUEST } from '../constants/productsConstants';\r\nimport { ProductsAction, MenuItem } from '../types/productsType';\r\nimport { GET_BESTSELLERS_SUCCESS, GET_BESTSELLERS_FAIL, GET_PRODUCTS_SUCCESS, SET_SELECTED_ITEM_FOR_POPUP, REMOVE_SELECTED_ITEM_FROM_POPUP } from './../constants/productsConstants';\r\n\r\n\r\nexport const selectItemForPopup = (menuItem: MenuItem): ThunkAction<void, RootState, null, ProductsAction> => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_SELECTED_ITEM_FOR_POPUP,\r\n      payload: menuItem\r\n    });\r\n  }\r\n}\r\nexport const removeItemFromPopup = (): ThunkAction<void, RootState, null, ProductsAction> => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: REMOVE_SELECTED_ITEM_FROM_POPUP,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const getBestSellersProducts = (): ThunkAction<void, RootState, null, ProductsAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: GET_BESTSELLERS_REQUEST,\r\n      });\r\n      const products = await firebase.firestore().collection('/menuItems').where('bestSeller', '==', true).get();\r\n\r\n      dispatch({\r\n        type: GET_BESTSELLERS_SUCCESS,\r\n        payload: products.docs.map(product => product.data() as MenuItem)\r\n      })\r\n    }\r\n    catch (error) {\r\n      dispatch({\r\n        type: GET_BESTSELLERS_FAIL,\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\nexport const getAllProducts = (): ThunkAction<void, RootState, null, ProductsAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: GET_PRODUCTS_REQUEST,\r\n      });\r\n      const products = await firebase.firestore().collection('/menuItems').get();\r\n      dispatch({\r\n        type: GET_PRODUCTS_SUCCESS,\r\n        payload: products.docs.map(product => product.data() as MenuItem)\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_BESTSELLERS_FAIL,\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n","F:\\projects\\burger-gril\\src\\redux\\reducers\\productsReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\productsConstants.ts",[],"F:\\projects\\burger-gril\\src\\pages\\menu.tsx",[],"F:\\projects\\burger-gril\\src\\components\\menu\\Menu.tsx",["476","477","478","479"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MenuHero, MenuSectionWrapper, MenuSection, MenuTitle, MenuSubTitle, MenuItemCard, MenuItemImageBox, MenuItemImage, DescriptionContainer, MenuItemTitle, MenuItemPrice, MenuItemDescription, CategoriesContainer, Category, MenuItemsContainer, ButtonsContainer, AddToCartButton, RightArrow, VIcon, SummaryLink } from './Menu-style';\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { RootState } from '../../redux';\r\nimport { MenuItem } from '../../redux/types/productsType';\r\nimport { getAllProducts, getBestSellersProducts, selectItemForPopup } from './../../redux/actions/productsActions';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst Menu = () => {\r\n  const dispatch = useDispatch();\r\n  const { menuItems, loading, error }: { menuItems: MenuItem[], loading: boolean, error: string } = useSelector((state: RootState) => state.allProducts);\r\n  const [currentCategory, setCurrentCategory] = useState('meals');\r\n  const [showVIcon, setShowVIcon] = useState({ index: null, showVIcon: false });\r\n\r\n  return (\r\n    <>\r\n      <MenuHero>\r\n        <MenuTitle>Menu</MenuTitle>\r\n        <MenuSubTitle>Our Delicious Menu</MenuSubTitle>\r\n      </MenuHero>\r\n      <MenuSectionWrapper>\r\n        <MenuSection>\r\n          <CategoriesContainer>\r\n            <Category onClick={() => {\r\n              setCurrentCategory(\"meals\")\r\n              setShowVIcon({ index: null, showVIcon: false })\r\n\r\n            }} currentCategory={currentCategory === \"meals\"}>Meals</Category>\r\n            <Category onClick={() => {\r\n              setCurrentCategory(\"burgers\")\r\n              setShowVIcon({ index: null, showVIcon: false })\r\n\r\n            }} currentCategory={currentCategory === \"burgers\"}>Burgers</Category>\r\n            <Category onClick={() => {\r\n              setCurrentCategory(\"sideDishes\")\r\n              setShowVIcon({ index: null, showVIcon: false })\r\n\r\n            }} currentCategory={currentCategory === \"sideDishes\"}>Side Dishes</Category>\r\n            <Category onClick={() => {\r\n              setCurrentCategory(\"drinks\")\r\n              setShowVIcon({ index: null, showVIcon: false })\r\n\r\n            }} currentCategory={currentCategory === \"drinks\"}>Drinks</Category>\r\n            <Category onClick={() => {\r\n              setCurrentCategory(\"desserts\")\r\n              setShowVIcon({ index: null, showVIcon: false })\r\n\r\n            }} currentCategory={currentCategory === \"desserts\"}>Desserts</Category>\r\n          </CategoriesContainer>\r\n          <MenuItemsContainer>\r\n            {loading && <Loader />}\r\n            {menuItems && menuItems.map((menuItem, index) => {\r\n              if (menuItem.type === currentCategory) {\r\n                return <MenuItemCard key={menuItem.id}>\r\n                  <MenuItemImageBox><MenuItemImage src={menuItem.image} alt={menuItem.title} /></MenuItemImageBox>\r\n\r\n                  <DescriptionContainer><MenuItemTitle>\r\n                    {menuItem.title}\r\n                  </MenuItemTitle>\r\n                    <br />\r\n                    <MenuItemDescription>\r\n                      {menuItem.description}\r\n                    </MenuItemDescription>\r\n                    <br />\r\n                    <ButtonsContainer>\r\n                      <AddToCartButton onClick={() => {\r\n                        if (menuItem.type === 'meals' || menuItem.type === 'burgers') {\r\n                          dispatch(selectItemForPopup(menuItem));\r\n                        } else {\r\n                          dispatch(addItemToCart(menuItem));\r\n                          setShowVIcon({ index: index, showVIcon: true })\r\n                        }\r\n                      }}></AddToCartButton>\r\n                      {showVIcon.showVIcon && showVIcon.index === index && <VIcon></VIcon>}\r\n                      <MenuItemPrice>\r\n                        ${menuItem.price}\r\n                      </MenuItemPrice>\r\n                    </ButtonsContainer>\r\n                  </DescriptionContainer>\r\n                </MenuItemCard>\r\n              }\r\n              return null\r\n\r\n            })}\r\n          </MenuItemsContainer>\r\n          <SummaryLink to=\"/cart\">Cart Summary <RightArrow></RightArrow></SummaryLink>\r\n\r\n        </MenuSection>\r\n      </MenuSectionWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","F:\\projects\\burger-gril\\src\\components\\menu\\Menu-style.ts",["480","481"],"import styled from 'styled-components';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport BestSellersBackground from '../../images/bestsellers-background.jpg';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\nimport ReviewsBackground from '../../images/menu-hero.jpg';\r\n\r\nexport const MenuHero = styled.div`\r\n  background-image: url(${ReviewsBackground});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height:400px;\r\n  padding: 70px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  @media screen and (max-width: 768px) {\r\n    height:380px;\r\n    }\r\n`;\r\nexport const MenuTitle = styled.h1`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 5rem;\r\n  display: inline-block;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:white;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.8rem;\r\n  }\r\n`;\r\nexport const MenuSubTitle = styled.h3`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 4rem;\r\n  display: inline-block;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:white;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\nexport const MenuSectionWrapper = styled.div`\r\n  background:rgb(236,236,236);\r\n`;\r\nexport const MenuSection = styled.div`\r\n  max-width:1360px;\r\n  margin:0 auto;\r\n  display: flex;\r\n  // position:relative;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background:rgb(236,236,236);\r\n\r\n`;\r\nexport const CategoriesContainer = styled.div`\r\nmargin: 30px 0;\r\ndisplay:flex;\r\nflex-wrap: wrap;\r\nalign-items: center;\r\njustify-content:space-between;\r\n`;\r\nexport const Category = styled.div<{ currentCategory: boolean }>`\r\nfont-family: 'Imbue', serif;\r\nfont-size: 2rem;\r\nborder-bottom: ${({ currentCategory }) => (currentCategory ? '3px solid rgb(222, 141, 87, 0.7)' : 'none')};\r\nmargin: 0 10px;\r\ncolor:black;\r\n@media screen and (max-width: 768px) {\r\n  font-size: 1.7rem;\r\n}\r\n@media screen and (max-width: 468px) {\r\n  font-size: 1.2rem;\r\n}\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuItemsContainer = styled.div`\r\nmax-width:1360px;\r\nmargin:0 auto;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n// position:relative;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\n\r\n\r\nexport const MenuItemCard =\r\n  styled.div\r\n    `\r\n  display:flex;\r\n  margin:20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align:center;\r\n  -webkit-animation-name: fadeIn;\r\n  animation-name: fadeIn;\r\n  -webkit-animation-duration: 1s;\r\n  animation-duration: 1s;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n  }\r\n  @-webkit-keyframes fadeIn {\r\n  0% {opacity: 0;}\r\n  100% {opacity: 1;}\r\n  }\r\n  @keyframes fadeIn {\r\n  0% {opacity: 0;}\r\n  100% {opacity: 1;}\r\n`;\r\nexport const MenuItemImageBox = styled.div`\r\n\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  width: 250px;\r\n  height: 250px;\r\n  :hover img {\r\n    transform: scale(1.1);\r\n\r\n}\r\n@media screen and (max-width: 768px) {\r\n  width: 250px;\r\n  height: 250px;\r\n  }\r\n`;\r\nexport const MenuItemImage = styled.img`\r\n  transition: all 0.3s;\r\n  display: block;\r\n  width: 100%;\r\n  margin:0 auto;\r\n  height:100%;\r\n  transform: scale(1);\r\n`;\r\nexport const DescriptionContainer = styled.div`\r\n  width: 250px;\r\n  height: 300px; \r\n  background:white;\r\n  padding:20px;\r\n  display:flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n`;\r\nexport const MenuItemTitle = styled.h1`\r\n      // margin-left:40px;\r\n      // margin-top:40px;\r\n      font-family: 'Imbue', serif;\r\n      text-align:center;\r\n      border-bottom:1px solid black;\r\n`;\r\nexport const MenuItemDescription = styled.p`\r\n      // margin-left:40px;\r\n      font-family: 'Indie Flower', cursive;\r\nfont-size:1.2rem;\r\n      // margin-top:40px;\r\n`;\r\n\r\nexport const MenuItemPrice = styled.p`\r\n      // margin-left:40px;\r\n      // margin-top:40px;\r\n      font-weight:bold;\r\n\r\n`;\r\nexport const ButtonsContainer = styled.div`\r\ndisplay:flex;\r\nposition:absolute;\r\nbottom:20px;\r\nalign-items:center;\r\njustify-content: space-between;\r\nwidth:80%;\r\n`;\r\n\r\nexport const AddToCartButton = styled(HiIcons.HiPlusCircle)`\r\ncolor:#F9C56A;\r\n// border:none;\r\ncursor:pointer;\r\nfont-size:45px;\r\nopacity:0.9;\r\n:hover{\r\n  opacity:1;\r\n}\r\n`;\r\nexport const RightArrow = styled(HiIcons.HiOutlineChevronRight)`\r\n// color:#F9C56A;\r\n// // border:none;\r\n// cursor:pointer;\r\n// font-size:45px;\r\n// opacity:0.7;\r\n// :hover{\r\n//   opacity:1;\r\n// }\r\n`;\r\nexport const VIcon = styled(AiIcons.AiFillCheckCircle)`\r\n  width: 50px;\r\n  height: 50px;\r\n  color:green;\r\n  cursor: pointer;\r\n  \r\n  -webkit-animation-name: fadeIn;\r\n  animation-name: fadeIn;\r\n  -webkit-animation-duration: 1s;\r\n  animation-duration: 1s;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n  }\r\n  @-webkit-keyframes fadeIn {\r\n  0% {opacity: 0;}\r\n  100% {opacity: 1;}\r\n  }\r\n  @keyframes fadeIn {\r\n  0% {opacity: 0;}\r\n  100% {opacity: 1;}\r\n`;\r\n\r\nexport const SummaryLink = styled(LinkRouter)`\r\n  color: white;\r\n  background: #F9C56A;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity:0.8;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  animation: pulse 2s infinite 3s cubic-bezier(0.25, 0, 0, 1);\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background: white;\r\n    // color: #1f4141;\r\n    animation: none;\r\n    opacity:1;\r\n\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    to {\r\n      box-shadow: 0 0 0 18px rgba(255, 255, 255, 0);\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\redux\\types\\productsType.ts",["482"],"F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup-style.ts",["483"],"import styled from 'styled-components';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\n\r\nexport const Overlay = styled.div`\r\nposition: fixed; \r\ndisplay: flex; \r\nalign-items: center;\r\njustify-content: center;\r\nwidth: 100%; \r\nheight: 100%; \r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nbackground-color: rgba(0,0,0,0.5); \r\nz-index: 20000; /* Specify a stack order in case you're using a different order for other elements */\r\n`\r\n","F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup.tsx",["484","485"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux';\r\nimport { MenuItem } from '../../redux/types/productsType';\r\nimport { Overlay } from './MenuItemPopup-style';\r\n\r\nimport BurgerPopup from '../burger-popup/BurgerPopup';\r\nimport MealPopup from '../meal-popup/MealPopup';\r\n\r\n\r\nconst MenuItemPopup = () => {\r\n  const { menuItem }: { menuItem: MenuItem } = useSelector((state: RootState) => state.productPopup);\r\n  return (<>\r\n    {menuItem.id &&  \r\n      <Overlay>  \r\n        {menuItem.type === 'burgers' && <BurgerPopup menuItem={menuItem}>\r\n        </BurgerPopup>}\r\n        {menuItem.type === 'meals' &&  <MealPopup menuItem={menuItem} children={''}/>}\r\n      </Overlay>}\r\n  </>)\r\n}\r\n\r\nexport default MenuItemPopup\r\n","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup.tsx",["486","487"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux';\r\nimport { MenuItem } from '../../redux/types/productsType';\r\nimport {Popup, PopupTopRow, ItemTitle, VIcon, CloseIcon, PopupRow, PopupLabel, PopupOptionsContainer, PopupOption,AddToCartButton } from './BurgerPopup-style';\r\nimport { removeItemFromPopup, } from '../../redux/actions/productsActions';\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\n\r\n  \r\nconst BurgerPopup = ({ menuItem,children }: { menuItem: MenuItem;children:any }) => {\r\n  const dispatch = useDispatch();\r\n  const [burgerSize, setBurgerSize] = useState('Classic')\r\n  const [cookingLevel, setCookingLevel] = useState('MW')\r\n  const [changes, setChanges] = useState({\r\n    noOnion: false,\r\n    noLettuce: false,\r\n    noTomato: false,\r\n    noPickle: false,\r\n    noVegetables: false,  \r\n    vegetablesOnTheSide: false\r\n});\r\n  return (\r\n    <Popup>\r\n      <PopupTopRow>\r\n        <ItemTitle>{menuItem.title}</ItemTitle>\r\n        <CloseIcon onClick={() => {\r\n          dispatch(removeItemFromPopup())\r\n        }} />\r\n      </PopupTopRow>\r\n      <PopupRow>\r\n        <PopupLabel>Burger Size:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={burgerSize === 'Classic'} onClick={() => {\r\n            setBurgerSize('Classic')\r\n          }}>Classic (200 gr) {burgerSize === 'Classic' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={burgerSize === 'Large'} onClick={() => {\r\n            setBurgerSize('Large')\r\n          }}>Large (300 gr) $2 {burgerSize === 'Large' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={burgerSize === 'Gigantic'} onClick={() => {\r\n            setBurgerSize('Gigantic')\r\n          }}>Gigantic (400 gr) $3 {burgerSize === 'Gigantic' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <PopupRow>\r\n        <PopupLabel>Cooking Level:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={cookingLevel === 'M'} onClick={() => {\r\n            setCookingLevel('M')\r\n          }}>M {cookingLevel === 'M' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={cookingLevel === 'MW'} onClick={() => {\r\n            setCookingLevel('MW')\r\n          }}>MW {cookingLevel === 'MW' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n   \r\n          <PopupOption isSelected={cookingLevel === 'WD'} onClick={() => {\r\n            setCookingLevel('WD')\r\n          }}>WD {cookingLevel === 'WD' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <PopupRow>\r\n        <PopupLabel>Changes:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={changes.noOnion} onClick={() => {\r\n            setChanges({...changes, noOnion: !changes.noOnion})\r\n          }}>Without Onion {changes.noOnion && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noLettuce} onClick={() => {\r\n            setChanges({...changes, noLettuce: !changes.noLettuce})\r\n          }}>Without Lettuce {changes.noLettuce && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noPickle} onClick={() => {\r\n            setChanges({...changes, noPickle: !changes.noPickle})\r\n          }}>Without Pickle{changes.noPickle && <VIcon></VIcon>}\r\n          </PopupOption>\r\n          <PopupOption isSelected={changes.noTomato} onClick={() => {\r\n            setChanges({...changes, noTomato: !changes.noTomato})\r\n          }}>Without Tomato {changes.noTomato && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noVegetables} onClick={() => {\r\n            setChanges({...changes, noVegetables: !changes.noVegetables})\r\n          }}>Without Vegetables {changes.noVegetables && <VIcon></VIcon>}\r\n          </PopupOption>\r\n \r\n          <PopupOption isSelected={changes.vegetablesOnTheSide} onClick={() => {\r\n            setChanges({...changes, vegetablesOnTheSide: !changes.vegetablesOnTheSide})\r\n          }}>Vegetables On The Side {changes.vegetablesOnTheSide && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <AddToCartButton onClick={() =>{\r\n        dispatch(addItemToCart({...menuItem,burgerSize,cookingLevel,changes, price: burgerSize === 'Large' ? menuItem.price + 2 : burgerSize === 'Gigantic' ? menuItem.price +3 : menuItem.price}))\r\n        dispatch(removeItemFromPopup())\r\n      }}>ADD TO CART</AddToCartButton>\r\n    </Popup>)\r\n}\r\n\r\nexport default BurgerPopup\r\n    ","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup-style.tsx",[],"F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup.tsx",["488","489"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux';\r\nimport { MenuItem } from '../../redux/types/productsType';\r\nimport { Popup, PopupTopRow, ItemTitle, VIcon, CloseIcon, PopupRow, PopupLabel, PopupOptionsContainer, PopupOption, AddToCartButton } from './MealPopup-style';\r\nimport { removeItemFromPopup, } from '../../redux/actions/productsActions';\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst MealPopup = ({ menuItem, children }: { menuItem: MenuItem; children: any }) => {\r\n  const dispatch = useDispatch();\r\n  const { menuItems, loading, error }: { menuItems: MenuItem[], loading: boolean, error: string } = useSelector((state: RootState) => state.allProducts);\r\n\r\n  const [burgerSize, setBurgerSize] = useState('Classic');\r\n  const [cookingLevel, setCookingLevel] = useState('MW');\r\n  const [sideDish, setSideDish] = useState('French Fries');\r\n  const [drink, setDrink] = useState('Coca Cola');\r\n  const [changes, setChanges] = useState({\r\n    noOnion: false,\r\n    noLettuce: false,\r\n    noTomato: false,\r\n    noPickle: false,\r\n    noVegetables: false,\r\n    vegetablesOnTheSide: false\r\n  });\r\n  return (\r\n    <Popup>\r\n      <PopupTopRow>\r\n        <ItemTitle>{menuItem.title}</ItemTitle>\r\n        <CloseIcon onClick={() => {\r\n          dispatch(removeItemFromPopup())\r\n        }} />\r\n      </PopupTopRow>\r\n      <PopupRow>\r\n        <PopupLabel>Burger Size:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={burgerSize === 'Classic'} onClick={() => {\r\n            setBurgerSize('Classic')\r\n          }}>Classic (200 gr) {burgerSize === 'Classic' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={burgerSize === 'Large'} onClick={() => {\r\n            setBurgerSize('Large')\r\n          }}>Large (300 gr) $2 {burgerSize === 'Large' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={burgerSize === 'Gigantic'} onClick={() => {\r\n            setBurgerSize('Gigantic')\r\n          }}>Gigantic (400 gr) $3 {burgerSize === 'Gigantic' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <PopupRow>\r\n        <PopupLabel>Cooking Level:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={cookingLevel === 'M'} onClick={() => {\r\n            setCookingLevel('M')\r\n          }}>M {cookingLevel === 'M' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={cookingLevel === 'MW'} onClick={() => {\r\n            setCookingLevel('MW')\r\n          }}>MW {cookingLevel === 'MW' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={cookingLevel === 'WD'} onClick={() => {\r\n            setCookingLevel('WD')\r\n          }}>WD {cookingLevel === 'WD' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <PopupRow>\r\n        <PopupLabel>Changes:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={changes.noOnion} onClick={() => {\r\n            setChanges({ ...changes, noOnion: !changes.noOnion })\r\n          }}>Without Onion {changes.noOnion && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noLettuce} onClick={() => {\r\n            setChanges({ ...changes, noLettuce: !changes.noLettuce })\r\n          }}>Without Lettuce {changes.noLettuce && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noPickle} onClick={() => {\r\n            setChanges({ ...changes, noPickle: !changes.noPickle })\r\n          }}>Without Pickle{changes.noPickle && <VIcon></VIcon>}\r\n          </PopupOption>\r\n          <PopupOption isSelected={changes.noTomato} onClick={() => {\r\n            setChanges({ ...changes, noTomato: !changes.noTomato })\r\n          }}>Without Tomato {changes.noTomato && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.noVegetables} onClick={() => {\r\n            setChanges({ ...changes, noVegetables: !changes.noVegetables })\r\n          }}>Without Vegetables {changes.noVegetables && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={changes.vegetablesOnTheSide} onClick={() => {\r\n            setChanges({ ...changes, vegetablesOnTheSide: !changes.vegetablesOnTheSide })\r\n          }}>Vegetables On The Side {changes.vegetablesOnTheSide && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n\r\n\r\n\r\n      <PopupRow>\r\n        <PopupLabel>On The Side:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          <PopupOption isSelected={sideDish === 'French Fries'} onClick={() => {\r\n            setSideDish('French Fries')\r\n          }}>French Fries {sideDish === 'French Fries' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={sideDish === 'Holy Guacamole'} onClick={() => {\r\n            setSideDish('Holy Guacamole')\r\n          }}>Holy Guacamole {sideDish === 'Holy Guacamole' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={sideDish === 'Potatos'} onClick={() => {\r\n            setSideDish('Potatos')\r\n          }}>Potatos {sideDish === 'Potatos' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n\r\n          <PopupOption isSelected={sideDish === 'Onion Rings'} onClick={() => {\r\n            setSideDish('Onion Rings')\r\n          }}>Onion Rings {sideDish === 'Onion Rings' && <VIcon></VIcon>}\r\n          </PopupOption>\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n\r\n      <PopupRow>\r\n        <PopupLabel>Drink:</PopupLabel>\r\n        <PopupOptionsContainer>\r\n          {menuItems.map(menuItem =>( menuItem.type === 'drinks' && <PopupOption key ={menuItem.id}isSelected={drink === menuItem.title} onClick={() => {\r\n            setDrink(menuItem.title)\r\n          }}>{menuItem.title} {drink === menuItem.title && <VIcon></VIcon>}\r\n          </PopupOption>))}\r\n        </PopupOptionsContainer>\r\n      </PopupRow>\r\n      <AddToCartButton onClick={() => {\r\n        dispatch(addItemToCart({ ...menuItem, burgerSize, cookingLevel, changes, drink,sideDish, price: burgerSize === 'Large' ? menuItem.price + 2 : burgerSize === 'Gigantic' ? menuItem.price + 3 : menuItem.price }))\r\n        dispatch(removeItemFromPopup())\r\n      }}>ADD TO CART</AddToCartButton>\r\n    </Popup>)\r\n}\r\n\r\nexport default MealPopup\r\n","F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup-style.tsx",[],"F:\\projects\\burger-gril\\src\\pages\\cartSummary.tsx",[],"F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary.tsx",["490","491","492","493","494","495","496","497","498"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CartSummaryHero, CartSummarySectionWrapper, CartSummarySection, CartSummaryTableAndTotalSummary, TotalSummary, TotalSummaryTitle, TotalSummaryRow, TotalSummaryCell, CartSummaryTitle, CartSummarySubTitle, CartIsEmptyTitle, CartSummaryTable, CartSummaryTableHeader, CartSummaryTableRow, CartSummaryTableHeaderCell, CartSummaryTableBody, CartSummaryTableBodyCell, CartSummaryItemImage, CartSummaryItemDescription, CloseIcon, LinksContainer, CheckoutLink, BackToOrderLink } from './CartSummary-style';\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { RootState } from '../../redux';\r\nimport { MenuItem } from '../../redux/types/productsType';\r\nimport { getAllProducts, getBestSellersProducts, selectItemForPopup } from '../../redux/actions/productsActions';\r\nimport { removeItemFromCart } from '../../redux/actions/cartActions';\r\nimport Loader from '../loader/Loader';\r\nimport { CartItem } from '../../redux/types/cartTypes';\r\nimport { getCartTotalForLoggedUser } from '../../helpers/getCartTotal';\r\nimport { getCartTotal } from './../../helpers/getCartTotal';\r\n\r\nconst CartSummary = () => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems }: { cartItems: CartItem[] } = useSelector((state: RootState) => state.cart);\r\n  const { user } = useSelector((state: RootState) => state.userLogin);\r\n\r\n  const showBurgerChanges = (cartItem: CartItem) => {\r\n    return Object.entries(cartItem.changes).map(([key, value]) => {\r\n      if (value) {\r\n        if (key.startsWith('no')) {\r\n          return <CartSummaryItemDescription key={key}>\r\n            * {key.split('no').join('Without ')}\r\n          </CartSummaryItemDescription>\r\n        }\r\n        if (key.startsWith('vegetablesOnTheSide')) {\r\n          return <CartSummaryItemDescription  key={key}>\r\n            * Vegetables On The Side\r\n          </CartSummaryItemDescription>\r\n        }\r\n        return key\r\n      }\r\n      return null\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CartSummaryHero>\r\n        <CartSummaryTitle>Cart Summary</CartSummaryTitle>\r\n        <CartSummarySubTitle>Proceed to Checkout or Update your cart</CartSummarySubTitle>\r\n      </CartSummaryHero>\r\n      <CartSummarySectionWrapper>\r\n        <CartSummarySection>\r\n          {cartItems.length === 0 && <CartIsEmptyTitle>Your cart is empty</CartIsEmptyTitle>}\r\n          {cartItems.length > 0 && <CartSummaryTableAndTotalSummary>\r\n            <TotalSummary>\r\n              {/* <TotalSummaryTitle>CART TOTALS</TotalSummaryTitle> */}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Cart Subtotal</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n              {user && <TotalSummaryRow> <TotalSummaryCell>Membership Discount </TotalSummaryCell>\r\n                <TotalSummaryCell>5%</TotalSummaryCell> </TotalSummaryRow>}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Order Total</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n\r\n            </TotalSummary>\r\n            <CartSummaryTable cellSpacing=\"0\" cellPadding=\"0\">\r\n              <CartSummaryTableHeader>\r\n                <CartSummaryTableRow>\r\n                  <CartSummaryTableHeaderCell></CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell></CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell>PRODUCT</CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell>PRICE</CartSummaryTableHeaderCell>\r\n                </CartSummaryTableRow>\r\n              </CartSummaryTableHeader>\r\n              <CartSummaryTableBody>\r\n                {cartItems && cartItems.map((cartItem, index) => (\r\n                  <CartSummaryTableRow key={index}>\r\n                    <CartSummaryTableBodyCell onClick={() => {\r\n                      dispatch(removeItemFromCart(cartItem.id))\r\n                    }}><CloseIcon></CloseIcon></CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell><CartSummaryItemImage src={cartItem.image} alt={cartItem.title} /></CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell>{cartItem.title}\r\n                      {cartItem.burgerSize && <CartSummaryItemDescription>\r\n                        {cartItem.burgerSize === 'Classic' && '* Classic burger (200 gr)'}\r\n                        {cartItem.burgerSize === 'Large' && '* Large burger (300 gr) + $2'}\r\n                        {cartItem.burgerSize === 'Gigantic' && '* Gigantic burger (400 gr) + $3'}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.drink && <CartSummaryItemDescription>\r\n                        + {cartItem.drink}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.sideDish && <CartSummaryItemDescription>\r\n                        + {cartItem.sideDish}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.changes &&\r\n                        showBurgerChanges(cartItem)\r\n                      }\r\n                    </CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell>${cartItem.price}</CartSummaryTableBodyCell>\r\n                  </CartSummaryTableRow>\r\n                ))}\r\n\r\n              </CartSummaryTableBody>\r\n            </CartSummaryTable>\r\n          </CartSummaryTableAndTotalSummary>}\r\n          <LinksContainer isCartEmpty={cartItems.length === 0 }>\r\n            {cartItems.length > 0 && <CheckoutLink to=\"/checkout\">TO CHECKOUT</CheckoutLink>}\r\n            {cartItems.length > 0 && <BackToOrderLink to=\"/order\">BACK TO MENU</BackToOrderLink>}\r\n            {cartItems.length === 0 && <CheckoutLink to=\"/order\">BACK TO MENU</CheckoutLink>}\r\n          </LinksContainer>\r\n        </CartSummarySection>\r\n      </CartSummarySectionWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartSummary;\r\n","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary-style.ts",["499","500"],"import styled from 'styled-components';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\nimport CartSummaryBackground from '../../images/cart-summary-hero.jpg';\r\n\r\nexport const CartSummaryHero = styled.div`\r\n  background-image: url(${CartSummaryBackground});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height:400px;\r\n  padding: 70px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  @media screen and (max-width: 768px) {\r\n    height:350px;\r\n    }\r\n`; \r\nexport const CartSummaryTitle = styled.h1`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 5rem;\r\n  display: inline-block;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n  margin-bottom: 20px;\r\n  color:white;\r\n  position:relative;\r\n  top:80px;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 3.8rem;\r\n  }\r\n`;\r\nexport const CartSummarySubTitle = styled.h3`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 3.5rem;\r\n  display: inline-block;\r\n  text-align: center;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:white;\r\n    position:relative;\r\n    top:80px;\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nexport const CartIsEmptyTitle = styled.h2`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 3.5rem;\r\n  display: inline-block;\r\n  text-align:center;\r\n  width:300px;\r\n  margin:20px auto;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:black;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\nexport const CartSummarySectionWrapper = styled.div`\r\n  // background:rgb(236,236,236);\r\n  height:100vh;\r\n`;\r\nexport const CartSummarySection = styled.div`\r\n  max-width:1360px;\r\n  margin:0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height:100vh;\r\n\r\n`;\r\n\r\nexport const CartSummaryTableAndTotalSummary = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content:center;\r\nalign-items:center;\r\n`;\r\n\r\nexport const TotalSummary = styled.div`\r\ndisplay: flex;\r\nflex:0.5;\r\nflex-direction: column;\r\nmargin-top: 20px;\r\nmargin-left:20px;\r\nmargin-bottom:20px;\r\n// background:white;\r\n// padding:10px;\r\n@media screen and (max-width: 1030px) {\r\n  margin-left:10px;\r\n  order:1;\r\n}\r\n`;\r\nexport const TotalSummaryTitle = styled.h1`\r\ntext-align: center;\r\nmargin-bottom:10px;\r\n\r\n`;\r\nexport const TotalSummaryRow = styled.div`\r\ndisplay:flex;\r\n`;\r\nexport const TotalSummaryCell = styled.div`\r\nborder:1px solid grey;\r\npadding: 20px;\r\nwidth:250px;\r\nfont-weight:bold;\r\nbackground:white;\r\n\r\n@media screen and (max-width: 600px) {\r\n  width:140px;\r\n}\r\n`;\r\n\r\nexport const CartSummaryTable = styled.table`\r\n  max-width:800px;\r\n  margin:20px auto;\r\n  background:white;\r\n  border:0.5px solid lightgrey;\r\n  flex:0.5;\r\n\r\n`;\r\n\r\n\r\nexport const CartSummaryTableHeader = styled.thead`\r\n  background:black;  \r\n`;\r\n\r\nexport const CartSummaryTableRow = styled.tr`\r\n\r\n`;\r\n\r\nexport const CartSummaryTableHeaderCell = styled.th`\r\n\r\n  font-size:1.3rem;\r\n  color:white;\r\n  padding:20px;\r\n  @media screen and (max-width: 768px) {\r\n    padding:10px;\r\n    font-size:1.2rem;\r\n    padding:10px;\r\n\r\n  }\r\n\r\n`;\r\nexport const CartSummaryTableBody = styled.tbody`\r\n\r\n`;\r\nexport const CartSummaryTableBodyCell = styled.td`\r\n  padding:20px;\r\n  border:0.5px solid lightgrey;\r\n  font-size:1.4rem;\r\n  text-align: center;\r\n  @media screen and (max-width: 768px) {\r\n    padding:10px;\r\n    font-size:1rem;\r\n    padding:0px;\r\n\r\n  }\r\n`;\r\n\r\nexport const CartSummaryItemImage = styled.img`\r\nwidth:50px;\r\nheight:50px;\r\nborder-radius:50px;\r\n`;\r\nexport const CartSummaryItemDescription = styled.p`\r\nfont-size:1rem;\r\ncolor:grey;\r\npadding:5px;\r\n@media screen and (max-width: 768px) {\r\n  font-size:0.9rem;\r\n}\r\n`;\r\n\r\nexport const CloseIcon = styled(AiIcons.AiOutlineClose)`\r\n  color: black;\r\n  cursor: pointer;  \r\n`;\r\nexport const LinksContainer = styled.div<{isCartEmpty: boolean}>`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\npadding-bottom: 50px;\r\nposition:relative;\r\nleft: ${({ isCartEmpty }) => (isCartEmpty ? '0' : '350px')};\r\nmax-width:500px;\r\nmargin:0 auto;\r\n@media screen and (max-width: 1068px) {\r\n  left:0;\r\n}\r\n\r\n`\r\n\r\n\r\nexport const CheckoutLink = styled(LinkRouter)`\r\n  color: white;\r\n  background: #F9C56A;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  // max-width:200px;\r\n  // margin: 20px auto;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  // margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity:0.9;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background: white;\r\n    // color: #1f4141;\r\n    animation: none;\r\n    opacity:1;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const BackToOrderLink = styled(LinkRouter)`\r\n  color: white;\r\n  background: grey;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  // max-width:200px;\r\n  // margin: 20px auto;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  // margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity:0.8;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background: white;\r\n    // color: #1f4141;\r\n    opacity:1;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\pages\\checkout.tsx",[],"F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout.tsx",["501","502"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { CheckoutHero, CheckoutSectionWrapper, CheckoutSection, HeroTitle, CheckoutTitle, CheckoutSubTitle, CartIsEmptyTitle, OrderForm, FullNameWrapper, NameWrapper, OrderFormLabel, OrderFormSelect, OrderFormInput, NameInput, SmallDescription, TotalSummary, TotalSummaryTitle, TotalSummaryRow, TotalSummaryCell, PaypalWrapper, LinksContainer, CheckoutLink, SaveOrderDetailsButton } from './Checkout-style';\r\nimport { RootState } from '../../redux';\r\nimport Loader from '../loader/Loader';\r\nimport { CartItem } from '../../redux/types/cartTypes';\r\nimport { ServerBaseUrl } from '../../redux/constants/endPoints';\r\nimport { getCartTotal, getCartTotalForLoggedUser } from '../../helpers/getCartTotal';\r\nimport { Order } from '../../redux/types/orderTypes';\r\nimport { User } from '../../redux/types/authTypes';\r\nimport { createOrder } from '../../redux/actions/orderActions';\r\nimport { CREATE_ORDER_FAIL, CLEAR_ORDER } from '../../redux/constants/orderConstants';\r\nimport { OrderState } from '../../redux/reducers/orderReducer';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    paypal: any,\r\n  }\r\n}\r\n\r\nconst Checkout = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { cartItems }: { cartItems: CartItem[] } = useSelector((state: RootState) => state.cart);\r\n  const { order, loading, error }: OrderState = useSelector((state: RootState) => state.creatOrder);\r\n  const { user }: { user: User } = useSelector((state: RootState) => state.userLogin);\r\n  const [orderMethod, setOrderMethod] = useState('Delivery');\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [floor, setFloor] = useState(0);\r\n  const [apartmentNumber, setApartmentNumber] = useState(0);\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [orderNotes, setOrderNotes] = useState('');\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(ServerBaseUrl + '/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if (!window.paypal) {\r\n      addPayPalScript()\r\n    } else {\r\n      setSdkReady(true)\r\n    }\r\n    return ()=>{\r\n      dispatch({type:CLEAR_ORDER});\r\n    }\r\n  }, [])\r\n\r\n  const validateForm = (e) => {\r\n    e.preventDefault();\r\n    setIsFormValid(true)\r\n  }  \r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    if (paymentResult.status === \"COMPLETED\") {\r\n      const order: Order = {\r\n        id: paymentResult.id,\r\n        create_time: paymentResult.create_time,\r\n        orderItems: cartItems,\r\n        userId: user?.id? user?.id:'Anonymous' ,\r\n        amount: user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems),\r\n        orderMethod,\r\n        firstName,\r\n        lastName,\r\n        city,\r\n        address,\r\n        floor: floor,\r\n        apartmentNumber: apartmentNumber,\r\n        email,\r\n        phoneNumber,\r\n        orderNotes: orderNotes\r\n      }\r\n      dispatch(createOrder(order))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const errorPaymentHandler = (paymentResult) => {\r\n    dispatch({ type: CREATE_ORDER_FAIL, payload: 'payment failed' })\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CheckoutHero>\r\n        <HeroTitle>Checkout</HeroTitle>\r\n        {/* <CheckoutSubTitle>Proceed to Checkout or Update your cart</CheckoutSubTitle> */}\r\n      </CheckoutHero>\r\n      <CheckoutSectionWrapper>\r\n        {!order?.id && <CheckoutSection>\r\n          {cartItems.length === 0 && <CartIsEmptyTitle>Your cart is empty</CartIsEmptyTitle>}\r\n          {cartItems.length > 0 && <>\r\n            <CheckoutTitle>Order Deatils</CheckoutTitle>\r\n            <SmallDescription>* All fields are required.</SmallDescription>\r\n            {!isFormValid && <OrderForm onSubmit={validateForm}>\r\n              <OrderFormLabel>Delivery/Pickup:</OrderFormLabel>\r\n              <OrderFormSelect onChange={(e) => {\r\n                setOrderMethod(e.target.value)\r\n              }} value={orderMethod} required>\r\n                <option value=\"Delivery\">Delivery</option>\r\n                <option value=\"Pickup\">Pickup</option>\r\n              </OrderFormSelect>\r\n              {orderMethod === \"Pickup\" && <SmallDescription>* The order is ready within 30 minutes of completing the payment process.</SmallDescription>}\r\n              {orderMethod === \"Delivery\" && <SmallDescription>* The delivery will reach your door within 30 minutes of completing the payment process.</SmallDescription>}\r\n              <FullNameWrapper>\r\n                <NameWrapper>\r\n                  <OrderFormLabel>First Name:</OrderFormLabel>\r\n                  <NameInput onChange={(e) => setFirstName(e.target.value)} type=\"text\" required></NameInput>\r\n                </NameWrapper>\r\n                <NameWrapper>\r\n                  <OrderFormLabel>Last Name:</OrderFormLabel>\r\n                  <NameInput type=\"text\" onChange={(e) => setLastName(e.target.value)} required></NameInput>\r\n                </NameWrapper>\r\n              </FullNameWrapper>\r\n              <OrderFormLabel>City:</OrderFormLabel>\r\n              <OrderFormInput type=\"text\" onChange={(e) => setCity(e.target.value)} required></OrderFormInput>\r\n              <OrderFormLabel>Address:</OrderFormLabel>\r\n              <OrderFormInput type=\"text\" onChange={(e) => setAddress(e.target.value)} required></OrderFormInput>\r\n              <OrderFormLabel>Floor:</OrderFormLabel>\r\n              <OrderFormInput min=\"0\" onChange={(e) => setFloor(+e.target.value)} type=\"number\"></OrderFormInput>\r\n              <OrderFormLabel>Apartment Number:</OrderFormLabel>\r\n              <OrderFormInput min=\"0\" onChange={(e) => setApartmentNumber(+e.target.value)} type=\"number\"></OrderFormInput>\r\n              <OrderFormLabel>Email:</OrderFormLabel>\r\n              <OrderFormInput type=\"email\" onChange={(e) => setEmail(e.target.value)} required></OrderFormInput>\r\n              <OrderFormLabel>Phone:</OrderFormLabel>\r\n              <OrderFormInput type=\"tel\" onChange={(e) => setPhoneNumber(e.target.value)} required></   OrderFormInput>\r\n              <OrderFormLabel>Order Notes:</OrderFormLabel>\r\n              <OrderFormInput type=\"text\" onChange={(e) => setOrderNotes(e.target.value)}></OrderFormInput>\r\n              <SaveOrderDetailsButton>Save Deatils</SaveOrderDetailsButton>\r\n              <br />\r\n              <br />\r\n            </OrderForm>}\r\n            <TotalSummary>\r\n              <TotalSummaryTitle>CART TOTALS</TotalSummaryTitle>\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Cart Subtotal</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' + getCartTotal(cartItems) : '0'}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n              {user && <TotalSummaryRow> <TotalSummaryCell>Membership Discount </TotalSummaryCell>\r\n                <TotalSummaryCell>5%</TotalSummaryCell> </TotalSummaryRow>}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Order Total</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n            </TotalSummary>\r\n            {loading && <Loader />}\r\n            {!sdkReady ? <Loader /> : isFormValid && !loading ? <PaypalWrapper><PayPalButton amount={user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)} onSuccess={successPaymentHandler}\r\n              catchError={errorPaymentHandler}\r\n              onError={errorPaymentHandler}\r\n            /></PaypalWrapper> : null\r\n            }\r\n\r\n\r\n          </>}\r\n\r\n          <LinksContainer>\r\n            {cartItems.length === 0 && <CheckoutLink to=\"/order\">BACK TO MENU</CheckoutLink>}\r\n          </LinksContainer>\r\n\r\n        </CheckoutSection>}\r\n        {order?.id && <CheckoutSection> <CheckoutTitle> Order Completed!</CheckoutTitle>\r\n            <CheckoutSubTitle>An email with your order details has been sent to your mail.</CheckoutSubTitle>\r\n            \r\n          </CheckoutSection>}\r\n      </CheckoutSectionWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout-style.ts",["503","504","505"],"import styled from 'styled-components';\r\nimport * as HiIcons from 'react-icons/hi';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link as LinkScroll } from 'react-scroll';\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\nimport CheckoutBackground from '../../images/checkout-hero.jpg';\r\n\r\nexport const CheckoutHero = styled.div`\r\n  background-image: url(${CheckoutBackground});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height:400px;\r\n  padding: 70px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  @media screen and (max-width: 768px) {\r\n    height:350px;\r\n    }\r\n`; \r\nexport const HeroTitle = styled.h1`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 6rem;\r\n  display: inline-block;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n  margin-bottom: 20px;\r\n  color:white;\r\n  position:relative;\r\n  top:80px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const CheckoutTitle = styled.h2`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 3.5rem;\r\n  display: inline-block;\r\n  text-align:center;\r\n  width:300px;\r\n  margin:20px auto;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:black;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\nexport const CheckoutSubTitle = styled.h2`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 2.5rem;\r\n  display: inline-block;\r\n  text-align:center;\r\n  width:300px;\r\n  margin:20px auto;\r\n  color:black;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const CartIsEmptyTitle = styled.h2`\r\n  font-family: 'Imbue', serif;\r\n  font-size: 3.5rem;\r\n  display: inline-block;\r\n  text-align:center;\r\n  width:300px;\r\n  margin:20px auto;\r\n  border-bottom: 3px solid rgb(222, 141, 87, 0.7);\r\n    margin-bottom: 20px;\r\n    color:black;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\nexport const CheckoutSectionWrapper = styled.div`\r\n  // background:rgb(236,236,236);\r\n  height:100vh;\r\n`;\r\nexport const CheckoutSection = styled.div`\r\n  max-width:1360px;\r\n  margin:0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // height:100vh;\r\n\r\n`;\r\nexport const OrderForm = styled.form`\r\n  // max-width:1360px; \r\n  // margin:0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // border:1px solid lightgrey;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const FullNameWrapper= styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const NameWrapper= styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const OrderFormLabel = styled.label`\r\nfont-size:1rem;\r\n// color:grey;\r\nfont-weight:bold;\r\n`;\r\nexport const OrderFormSelect = styled.select`\r\npadding:10px;\r\nbackground: rgb(243,241,237);\r\nborder:none;\r\noutline: none;\r\nfont-size: 1rem;\r\nwidth:30%;\r\nmargin:20px auto;\r\n@media screen and (max-width: 768px) {\r\n  width:90%;\r\n}\r\n`;\r\n\r\nexport const OrderFormInput = styled.input`\r\npadding:10px;\r\nbackground: rgb(243,241,237);\r\nborder:none;\r\noutline: none;\r\nfont-size: 1rem;\r\nwidth:30%;\r\nmargin:20px auto;\r\n@media screen and (max-width: 768px) {\r\n  width:90%;\r\n}\r\n\r\n`;\r\nexport const NameInput = styled.input`\r\npadding:10px;\r\nbackground: rgb(243,241,237);\r\nborder:none;\r\noutline: none;\r\nfont-size: 1rem;\r\nwidth:90%;   \r\nmargin:20px auto;\r\n`;\r\n  \r\n\r\nexport const SmallDescription = styled.small`\r\n// padding:10px;\r\n// background: rgb(243,241,237);\r\n// border:none;\r\n// outline: none;\r\n// font-size: 1.3rem;\r\ntext-align: center;\r\nwidth:50%;\r\nmargin-bottom:20px;\r\nalign-self: center;\r\n`;\r\n\r\nexport const TotalSummary = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-self: center;\r\nmargin-left:10px;\r\nmargin-bottom:20px;\r\n\r\n`;\r\n\r\nexport const TotalSummaryTitle = styled.h1`\r\ntext-align: center;\r\nmargin-bottom:10px;\r\n`;\r\nexport const TotalSummaryRow = styled.div`\r\ndisplay:flex;\r\n`;\r\nexport const TotalSummaryCell = styled.div`\r\nborder:1px solid grey;\r\npadding: 20px;\r\nwidth:200px;\r\n@media screen and (max-width: 600px) {\r\n  width:140px;\r\n  padding: 10px;\r\n\r\n}\r\n`;\r\n\r\nexport const PaypalWrapper = styled.div`\r\n// padding:10px;\r\n// background: rgb(243,241,237);\r\nborder:none;\r\noutline: none;\r\n// font-size: 1rem;\r\nwidth:30%;\r\nmargin:20px auto;\r\n@media screen and (max-width: 768px) {\r\n  width:90%;\r\n}\r\n`\r\n\r\nexport const LinksContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\npadding-bottom: 50px;\r\n\r\n`\r\n\r\nexport const CheckoutLink = styled(LinkRouter)`\r\n  color: white;\r\n  background: #F9C56A;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  // max-width:200px;\r\n  // margin: 20px auto;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  // margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity:0.9;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background: white;\r\n    // color: #1f4141;\r\n    animation: none;\r\n    opacity:1;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const SaveOrderDetailsButton = styled.button`\r\n  color: white;\r\n  background: grey;\r\n  font-family: 'Imbue', serif;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  // max-width:200px;\r\n  // margin: 20px auto;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  border: 2px solid white;\r\n  padding: 20px 20px;\r\n  // margin: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity:0.8;\r\n  box-shadow: 0 2px 5px 0 rgba(3, 6, 26, 0.15);\r\n  transition: 0.5s all ease-in-out;\r\n  box-shadow: 0 0 0 0 white;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background: white;\r\n    // color: #1f4141;\r\n    opacity:1;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n`;\r\n\r\n\r\n","F:\\projects\\burger-gril\\src\\helpers\\getCartTotal.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\orderActions.ts",["506","507"],"F:\\projects\\burger-gril\\src\\redux\\constants\\orderConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\orderReducer.ts",[],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":27},{"ruleId":"512","severity":1,"message":"516","line":8,"column":8,"nodeType":"514","messageId":"515","endLine":8,"endColumn":20},{"ruleId":"512","severity":1,"message":"517","line":23,"column":11,"nodeType":"514","messageId":"515","endLine":23,"endColumn":16},{"ruleId":"512","severity":1,"message":"518","line":23,"column":24,"nodeType":"514","messageId":"515","endLine":23,"endColumn":31},{"ruleId":"512","severity":1,"message":"519","line":1,"column":76,"nodeType":"514","messageId":"515","endLine":1,"endColumn":87},{"ruleId":"508","replacedBy":"520"},{"ruleId":"510","replacedBy":"521"},{"ruleId":"512","severity":1,"message":"522","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"523","line":1,"column":21,"nodeType":"514","messageId":"515","endLine":1,"endColumn":29},{"ruleId":"512","severity":1,"message":"524","line":1,"column":31,"nodeType":"514","messageId":"515","endLine":1,"endColumn":40},{"ruleId":"512","severity":1,"message":"525","line":15,"column":9,"nodeType":"514","messageId":"515","endLine":15,"endColumn":17},{"ruleId":"512","severity":1,"message":"517","line":19,"column":11,"nodeType":"514","messageId":"515","endLine":19,"endColumn":16},{"ruleId":"512","severity":1,"message":"518","line":19,"column":24,"nodeType":"514","messageId":"515","endLine":19,"endColumn":31},{"ruleId":"512","severity":1,"message":"526","line":3,"column":13,"nodeType":"514","messageId":"515","endLine":3,"endColumn":20},{"ruleId":"512","severity":1,"message":"527","line":19,"column":7,"nodeType":"514","messageId":"515","endLine":19,"endColumn":27},{"ruleId":"512","severity":1,"message":"528","line":3,"column":272,"nodeType":"514","messageId":"515","endLine":3,"endColumn":287},{"ruleId":"512","severity":1,"message":"517","line":12,"column":31,"nodeType":"514","messageId":"515","endLine":12,"endColumn":36},{"ruleId":"512","severity":1,"message":"529","line":5,"column":18,"nodeType":"514","messageId":"515","endLine":5,"endColumn":28},{"ruleId":"508","replacedBy":"530"},{"ruleId":"510","replacedBy":"531"},{"ruleId":"512","severity":1,"message":"532","line":7,"column":23,"nodeType":"514","messageId":"515","endLine":7,"endColumn":34},{"ruleId":"512","severity":1,"message":"533","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"529","line":3,"column":18,"nodeType":"514","messageId":"515","endLine":3,"endColumn":28},{"ruleId":"512","severity":1,"message":"534","line":6,"column":13,"nodeType":"514","messageId":"515","endLine":6,"endColumn":20},{"ruleId":"512","severity":1,"message":"523","line":1,"column":21,"nodeType":"514","messageId":"515","endLine":1,"endColumn":29},{"ruleId":"512","severity":1,"message":"524","line":1,"column":31,"nodeType":"514","messageId":"515","endLine":1,"endColumn":40},{"ruleId":"512","severity":1,"message":"535","line":1,"column":42,"nodeType":"514","messageId":"515","endLine":1,"endColumn":51},{"ruleId":"512","severity":1,"message":"535","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"536","line":2,"column":32,"nodeType":"514","messageId":"515","endLine":2,"endColumn":38},{"ruleId":"512","severity":1,"message":"517","line":14,"column":11,"nodeType":"514","messageId":"515","endLine":14,"endColumn":16},{"ruleId":"512","severity":1,"message":"537","line":14,"column":18,"nodeType":"514","messageId":"515","endLine":14,"endColumn":22},{"ruleId":"512","severity":1,"message":"518","line":14,"column":24,"nodeType":"514","messageId":"515","endLine":14,"endColumn":31},{"ruleId":"512","severity":1,"message":"523","line":1,"column":10,"nodeType":"514","messageId":"515","endLine":1,"endColumn":18},{"ruleId":"512","severity":1,"message":"513","line":1,"column":31,"nodeType":"514","messageId":"515","endLine":1,"endColumn":41},{"ruleId":"512","severity":1,"message":"538","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":16},{"ruleId":"512","severity":1,"message":"536","line":5,"column":23,"nodeType":"514","messageId":"515","endLine":5,"endColumn":29},{"ruleId":"512","severity":1,"message":"539","line":8,"column":9,"nodeType":"514","messageId":"515","endLine":8,"endColumn":29},{"ruleId":"512","severity":1,"message":"517","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":16},{"ruleId":"512","severity":1,"message":"537","line":10,"column":18,"nodeType":"514","messageId":"515","endLine":10,"endColumn":22},{"ruleId":"540","severity":1,"message":"541","line":19,"column":6,"nodeType":"542","endLine":19,"endColumn":8,"suggestions":"543"},{"ruleId":"512","severity":1,"message":"544","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"533","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"522","line":3,"column":13,"nodeType":"514","messageId":"515","endLine":3,"endColumn":20},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":18},{"ruleId":"512","severity":1,"message":"546","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":23},{"ruleId":"512","severity":1,"message":"529","line":6,"column":18,"nodeType":"514","messageId":"515","endLine":6,"endColumn":28},{"ruleId":"512","severity":1,"message":"547","line":7,"column":18,"nodeType":"514","messageId":"515","endLine":7,"endColumn":28},{"ruleId":"512","severity":1,"message":"548","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":30},{"ruleId":"512","severity":1,"message":"536","line":2,"column":32,"nodeType":"514","messageId":"515","endLine":2,"endColumn":38},{"ruleId":"512","severity":1,"message":"549","line":2,"column":40,"nodeType":"514","messageId":"515","endLine":2,"endColumn":62},{"ruleId":"512","severity":1,"message":"550","line":2,"column":64,"nodeType":"514","messageId":"515","endLine":2,"endColumn":73},{"ruleId":"512","severity":1,"message":"551","line":2,"column":75,"nodeType":"514","messageId":"515","endLine":2,"endColumn":85},{"ruleId":"512","severity":1,"message":"552","line":3,"column":120,"nodeType":"514","messageId":"515","endLine":3,"endColumn":125},{"ruleId":"512","severity":1,"message":"553","line":8,"column":10,"nodeType":"514","messageId":"515","endLine":8,"endColumn":32},{"ruleId":"512","severity":1,"message":"554","line":9,"column":10,"nodeType":"514","messageId":"515","endLine":9,"endColumn":19},{"ruleId":"540","severity":1,"message":"555","line":41,"column":6,"nodeType":"542","endLine":41,"endColumn":14,"suggestions":"556"},{"ruleId":"512","severity":1,"message":"544","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"522","line":3,"column":13,"nodeType":"514","messageId":"515","endLine":3,"endColumn":20},{"ruleId":"512","severity":1,"message":"557","line":4,"column":13,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"558","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":22},{"ruleId":"512","severity":1,"message":"559","line":77,"column":15,"nodeType":"514","messageId":"515","endLine":77,"endColumn":19},{"ruleId":"512","severity":1,"message":"560","line":12,"column":10,"nodeType":"514","messageId":"515","endLine":12,"endColumn":20},{"ruleId":"512","severity":1,"message":"553","line":13,"column":10,"nodeType":"514","messageId":"515","endLine":13,"endColumn":32},{"ruleId":"512","severity":1,"message":"561","line":23,"column":9,"nodeType":"514","messageId":"515","endLine":23,"endColumn":16},{"ruleId":"512","severity":1,"message":"523","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"562","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":14},{"ruleId":"512","severity":1,"message":"532","line":4,"column":23,"nodeType":"514","messageId":"515","endLine":4,"endColumn":34},{"ruleId":"540","severity":1,"message":"563","line":15,"column":4,"nodeType":"542","endLine":15,"endColumn":6,"suggestions":"564"},{"ruleId":"512","severity":1,"message":"526","line":4,"column":13,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"522","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"535","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"565","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":14},{"ruleId":"512","severity":1,"message":"566","line":4,"column":13,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"567","line":5,"column":13,"nodeType":"514","messageId":"515","endLine":5,"endColumn":20},{"ruleId":"512","severity":1,"message":"538","line":10,"column":8,"nodeType":"514","messageId":"515","endLine":10,"endColumn":16},{"ruleId":"512","severity":1,"message":"568","line":16,"column":10,"nodeType":"514","messageId":"515","endLine":16,"endColumn":13},{"ruleId":"512","severity":1,"message":"569","line":16,"column":15,"nodeType":"514","messageId":"515","endLine":16,"endColumn":21},{"ruleId":"512","severity":1,"message":"517","line":17,"column":11,"nodeType":"514","messageId":"515","endLine":17,"endColumn":16},{"ruleId":"512","severity":1,"message":"518","line":17,"column":24,"nodeType":"514","messageId":"515","endLine":17,"endColumn":31},{"ruleId":"512","severity":1,"message":"522","line":3,"column":13,"nodeType":"514","messageId":"515","endLine":3,"endColumn":20},{"ruleId":"512","severity":1,"message":"519","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":21},{"ruleId":"512","severity":1,"message":"570","line":2,"column":23,"nodeType":"514","messageId":"515","endLine":2,"endColumn":34},{"ruleId":"512","severity":1,"message":"538","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"558","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"571","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":22},{"ruleId":"512","severity":1,"message":"558","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":22},{"ruleId":"512","severity":1,"message":"535","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"572","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":24},{"ruleId":"512","severity":1,"message":"573","line":7,"column":26,"nodeType":"514","messageId":"515","endLine":7,"endColumn":48},{"ruleId":"512","severity":1,"message":"517","line":12,"column":31,"nodeType":"514","messageId":"515","endLine":12,"endColumn":36},{"ruleId":"512","severity":1,"message":"574","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":29},{"ruleId":"512","severity":1,"message":"529","line":5,"column":18,"nodeType":"514","messageId":"515","endLine":5,"endColumn":28},{"ruleId":"575","severity":1,"message":"576","line":41,"column":11,"nodeType":"514","messageId":"577","endLine":41,"endColumn":44},{"ruleId":"512","severity":1,"message":"533","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"523","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"578","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":21},{"ruleId":"512","severity":1,"message":"532","line":2,"column":23,"nodeType":"514","messageId":"515","endLine":2,"endColumn":34},{"ruleId":"512","severity":1,"message":"579","line":3,"column":10,"nodeType":"514","messageId":"515","endLine":3,"endColumn":19},{"ruleId":"512","severity":1,"message":"518","line":12,"column":22,"nodeType":"514","messageId":"515","endLine":12,"endColumn":29},{"ruleId":"512","severity":1,"message":"517","line":12,"column":31,"nodeType":"514","messageId":"515","endLine":12,"endColumn":36},{"ruleId":"512","severity":1,"message":"535","line":1,"column":17,"nodeType":"514","messageId":"515","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"523","line":1,"column":28,"nodeType":"514","messageId":"515","endLine":1,"endColumn":36},{"ruleId":"512","severity":1,"message":"580","line":3,"column":121,"nodeType":"514","messageId":"515","endLine":3,"endColumn":138},{"ruleId":"512","severity":1,"message":"581","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":23},{"ruleId":"512","severity":1,"message":"582","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":18},{"ruleId":"512","severity":1,"message":"572","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":24},{"ruleId":"512","severity":1,"message":"573","line":7,"column":26,"nodeType":"514","messageId":"515","endLine":7,"endColumn":48},{"ruleId":"512","severity":1,"message":"583","line":7,"column":50,"nodeType":"514","messageId":"515","endLine":7,"endColumn":68},{"ruleId":"512","severity":1,"message":"584","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":14},{"ruleId":"512","severity":1,"message":"567","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"529","line":4,"column":18,"nodeType":"514","messageId":"515","endLine":4,"endColumn":28},{"ruleId":"512","severity":1,"message":"517","line":28,"column":27,"nodeType":"514","messageId":"515","endLine":28,"endColumn":32},{"ruleId":"540","severity":1,"message":"563","line":64,"column":6,"nodeType":"542","endLine":64,"endColumn":8,"suggestions":"585"},{"ruleId":"512","severity":1,"message":"567","line":2,"column":13,"nodeType":"514","messageId":"515","endLine":2,"endColumn":20},{"ruleId":"512","severity":1,"message":"533","line":3,"column":13,"nodeType":"514","messageId":"515","endLine":3,"endColumn":20},{"ruleId":"512","severity":1,"message":"529","line":4,"column":18,"nodeType":"514","messageId":"515","endLine":4,"endColumn":28},{"ruleId":"512","severity":1,"message":"558","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":22},{"ruleId":"512","severity":1,"message":"559","line":25,"column":15,"nodeType":"514","messageId":"515","endLine":25,"endColumn":19},"no-native-reassign",["586"],"no-negated-in-lhs",["587"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'RESET_ERROR' is defined but never used.",["586"],["587"],"'FaIcons' is defined but never used.","'useState' is defined but never used.","'FormEvent' is defined but never used.","'dispatch' is assigned a value but never used.","'IoIcons' is defined but never used.","'revalWithLongerDelay' is assigned a value but never used.","'AddToCartButton' is defined but never used.","'LinkScroll' is defined but never used.",["586"],["587"],"'useSelector' is defined but never used.","'AiIcons' is defined but never used.","'BsIcons' is defined but never used.","'useEffect' is defined but never used.","'logOut' is defined but never used.","'user' is assigned a value but never used.","'firebase' is defined but never used.","'userFromLocalStorage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["588"],"'GoIcons' is defined but never used.","'Background' is defined but never used.","'TitleBackground' is defined but never used.","'LinkRouter' is defined but never used.","'signInUserWithGoogle' is defined but never used.","'signInUserWithFacebook' is defined but never used.","'loginUser' is defined but never used.","'signUpUser' is defined but never used.","'Input' is defined but never used.","'CLEAR_RESERVATION_DATA' is defined but never used.","'bookTable' is defined but never used.","React Hook useEffect has missing dependencies: 'location' and 'partySize'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'seTablesToDisplay' needs the current value of 'location'.",["589"],"'FcIcons' is defined but never used.","'staticFireBase' is defined but never used.","'data' is assigned a value but never used.","'setTimeout' is defined but never used.","'history' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["590"],"'User' is defined but never used.","'FiIcons' is defined but never used.","'HiIcons' is defined but never used.","'pro' is assigned a value but never used.","'setPro' is assigned a value but never used.","'USER_LOGOUT' is defined but never used.","'popupMessage' is defined but never used.","'getAllProducts' is defined but never used.","'getBestSellersProducts' is defined but never used.","'BestSellersBackground' is defined but never used.","@typescript-eslint/no-redeclare","'REMOVE_SELECTED_ITEM_FROM_OVERLAY' is already defined.","redeclared","'useDispatch' is defined but never used.","'RootState' is defined but never used.","'TotalSummaryTitle' is defined but never used.","'addItemToCart' is defined but never used.","'MenuItem' is defined but never used.","'selectItemForPopup' is defined but never used.","'Loader' is defined but never used.",["591"],"no-global-assign","no-unsafe-negation",{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"596","fix":"598"},"Update the dependencies array to be: [dispatch, loading]",{"range":"599","text":"600"},"Update the dependencies array to be: [location, partySize, tables]",{"range":"601","text":"602"},"Update the dependencies array to be: [dispatch]",{"range":"603","text":"604"},{"range":"605","text":"604"},[805,807],"[dispatch, loading]",[2474,2482],"[location, partySize, tables]",[571,573],"[dispatch]",[2888,2890]]