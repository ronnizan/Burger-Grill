[{"F:\\projects\\burger-gril\\src\\index.tsx":"1","F:\\projects\\burger-gril\\src\\App.tsx":"2","F:\\projects\\burger-gril\\src\\firebase\\firebaseConfig.tsx":"3","F:\\projects\\burger-gril\\src\\global-styles.tsx":"4","F:\\projects\\burger-gril\\src\\redux\\reducers\\authReducer.ts":"5","F:\\projects\\burger-gril\\src\\redux\\index.ts":"6","F:\\projects\\burger-gril\\src\\redux\\types\\authTypes.ts":"7","F:\\projects\\burger-gril\\src\\redux\\actions\\authActions.ts":"8","F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar.tsx":"9","F:\\projects\\burger-gril\\src\\components\\sidebar\\SidebarData.tsx":"10","F:\\projects\\burger-gril\\src\\pages\\home.tsx":"11","F:\\projects\\burger-gril\\src\\pages\\index.tsx":"12","F:\\projects\\burger-gril\\src\\components\\hero\\Hero.tsx":"13","F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar-style.tsx":"14","F:\\projects\\burger-gril\\src\\helpers\\scrollReveal.tsx":"15","F:\\projects\\burger-gril\\src\\components\\hero\\Hero-style.ts":"16","F:\\projects\\burger-gril\\src\\components\\about\\About.tsx":"17","F:\\projects\\burger-gril\\src\\components\\about\\About-style.ts":"18","F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers.tsx":"19","F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers-style.ts":"20","F:\\projects\\burger-gril\\src\\components\\best-sellers\\SliderData.ts":"21","F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews.tsx":"22","F:\\projects\\burger-gril\\src\\components\\reviews\\ReviewsData.ts":"23","F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation.tsx":"24","F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation-style.ts":"25","F:\\projects\\burger-gril\\src\\components\\footer\\Footer.tsx":"26","F:\\projects\\burger-gril\\src\\components\\footer\\Footer-style.ts":"27","F:\\projects\\burger-gril\\src\\pages\\auth.tsx":"28","F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm.tsx":"29","F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews-style.ts":"30","F:\\projects\\burger-gril\\src\\hooks\\use-autoLogin.tsx":"31","F:\\projects\\burger-gril\\src\\auth\\PrivateRoute.tsx":"32","F:\\projects\\burger-gril\\src\\auth\\PrivateAlereadyAuthRoute.tsx":"33","F:\\projects\\burger-gril\\src\\redux\\constants\\authConstants.ts":"34","F:\\projects\\burger-gril\\src\\redux\\reducers\\popupMessageReducer.ts":"35","F:\\projects\\burger-gril\\src\\redux\\constants\\popupMessageConstants.ts":"36","F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm-style.ts":"37","F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage.tsx":"38","F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage-style.ts":"39","F:\\projects\\burger-gril\\src\\redux\\actions\\popupMessageAction.ts":"40","F:\\projects\\burger-gril\\src\\pages\\bookTable.tsx":"41","F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation.tsx":"42","F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation-style.ts":"43","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation.tsx":"44","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation-style.ts":"45","F:\\projects\\burger-gril\\src\\redux\\reducers\\reservationReducer.ts":"46","F:\\projects\\burger-gril\\src\\redux\\constants\\reservationConstants.ts":"47","F:\\projects\\burger-gril\\src\\redux\\actions\\reservationActions.ts":"48","F:\\projects\\burger-gril\\src\\components\\loader\\Loader.tsx":"49","F:\\projects\\burger-gril\\src\\components\\loader\\Loader-style.ts":"50","F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation.tsx":"51","F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation-style.ts":"52","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary.tsx":"53","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary-style.ts":"54","F:\\projects\\burger-gril\\src\\redux\\constants\\endPoints.ts":"55","F:\\projects\\burger-gril\\src\\helpers\\convertPhoneNumber.tsx":"56","F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar.tsx":"57","F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar-style.tsx":"58","F:\\projects\\burger-gril\\src\\components\\navbar\\NavbarData.tsx":"59","F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart.tsx":"60","F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart-style.tsx":"61","F:\\projects\\burger-gril\\src\\redux\\reducers\\cartReducer.ts":"62","F:\\projects\\burger-gril\\src\\redux\\constants\\cartConstants.ts":"63","F:\\projects\\burger-gril\\src\\redux\\actions\\cartActions.ts":"64","F:\\projects\\burger-gril\\src\\redux\\actions\\productsActions.ts":"65","F:\\projects\\burger-gril\\src\\redux\\reducers\\productsReducer.ts":"66","F:\\projects\\burger-gril\\src\\redux\\constants\\productsConstants.ts":"67","F:\\projects\\burger-gril\\src\\pages\\menu.tsx":"68","F:\\projects\\burger-gril\\src\\components\\menu\\Menu.tsx":"69","F:\\projects\\burger-gril\\src\\components\\menu\\Menu-style.ts":"70","F:\\projects\\burger-gril\\src\\redux\\types\\productsType.ts":"71","F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup-style.ts":"72","F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup.tsx":"73","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup.tsx":"74","F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup.tsx":"75","F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup-style.tsx":"76","F:\\projects\\burger-gril\\src\\pages\\cartSummary.tsx":"77","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary.tsx":"78","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary-style.ts":"79","F:\\projects\\burger-gril\\src\\pages\\checkout.tsx":"80","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout.tsx":"81","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout-style.ts":"82","F:\\projects\\burger-gril\\src\\helpers\\getCartTotal.ts":"83","F:\\projects\\burger-gril\\src\\redux\\actions\\orderActions.ts":"84","F:\\projects\\burger-gril\\src\\redux\\constants\\orderConstants.ts":"85","F:\\projects\\burger-gril\\src\\redux\\reducers\\orderReducer.ts":"86","F:\\projects\\burger-gril\\src\\pages\\profile.tsx":"87","F:\\projects\\burger-gril\\src\\components\\profile\\Profile.tsx":"88","F:\\projects\\burger-gril\\src\\components\\profile\\Profile-style.ts":"89","F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup-style.tsx":"90","F:\\projects\\burger-gril\\src\\components\\chatbot\\Chatbot.tsx":"91","F:\\projects\\burger-gril\\src\\redux\\reducers\\chatbotReducer.ts":"92","F:\\projects\\burger-gril\\src\\components\\chatbot\\Chatbot-style.ts":"93","F:\\projects\\burger-gril\\src\\redux\\actions\\chatbotActions.ts":"94","F:\\projects\\burger-gril\\src\\redux\\constants\\chatbotConstants.ts":"95","F:\\projects\\burger-gril\\src\\helpers\\genrateUid.ts":"96"},{"size":391,"mtime":1615071909451,"results":"97","hashOfConfig":"98"},{"size":2056,"mtime":1615071891759,"results":"99","hashOfConfig":"98"},{"size":538,"mtime":1611761100918,"results":"100","hashOfConfig":"98"},{"size":440,"mtime":1615071901719,"results":"101","hashOfConfig":"98"},{"size":2276,"mtime":1615071745876,"results":"102","hashOfConfig":"98"},{"size":1631,"mtime":1615071882388,"results":"103","hashOfConfig":"98"},{"size":1353,"mtime":1612625254615,"results":"104","hashOfConfig":"98"},{"size":8501,"mtime":1615071627973,"results":"105","hashOfConfig":"98"},{"size":2613,"mtime":1615071424734,"results":"106","hashOfConfig":"98"},{"size":515,"mtime":1615071430792,"results":"107","hashOfConfig":"98"},{"size":919,"mtime":1615071596476,"results":"108","hashOfConfig":"98"},{"size":370,"mtime":1615071601241,"results":"109","hashOfConfig":"98"},{"size":1473,"mtime":1615071200325,"results":"110","hashOfConfig":"98"},{"size":1978,"mtime":1615071419582,"results":"111","hashOfConfig":"98"},{"size":1170,"mtime":1615071516934,"results":"112","hashOfConfig":"98"},{"size":3986,"mtime":1615071195511,"results":"113","hashOfConfig":"98"},{"size":1664,"mtime":1615071035786,"results":"114","hashOfConfig":"98"},{"size":2709,"mtime":1615071019087,"results":"115","hashOfConfig":"98"},{"size":3936,"mtime":1615071078394,"results":"116","hashOfConfig":"98"},{"size":6194,"mtime":1615071072930,"results":"117","hashOfConfig":"98"},{"size":1379,"mtime":1613472436805,"results":"118","hashOfConfig":"98"},{"size":2190,"mtime":1615071407281,"results":"119","hashOfConfig":"98"},{"size":1518,"mtime":1615071411764,"results":"120","hashOfConfig":"98"},{"size":4528,"mtime":1615071377671,"results":"121","hashOfConfig":"98"},{"size":3226,"mtime":1615071370180,"results":"122","hashOfConfig":"98"},{"size":298,"mtime":1615071188624,"results":"123","hashOfConfig":"98"},{"size":365,"mtime":1615071184063,"results":"124","hashOfConfig":"98"},{"size":200,"mtime":1615071578550,"results":"125","hashOfConfig":"98"},{"size":4090,"mtime":1615071052828,"results":"126","hashOfConfig":"98"},{"size":2645,"mtime":1615071402067,"results":"127","hashOfConfig":"98"},{"size":815,"mtime":1615071528819,"results":"128","hashOfConfig":"98"},{"size":532,"mtime":1612623321983,"results":"129","hashOfConfig":"98"},{"size":551,"mtime":1612624207861,"results":"130","hashOfConfig":"98"},{"size":648,"mtime":1615071695775,"results":"131","hashOfConfig":"98"},{"size":471,"mtime":1615071797224,"results":"132","hashOfConfig":"98"},{"size":90,"mtime":1615071721042,"results":"133","hashOfConfig":"98"},{"size":4573,"mtime":1615071046312,"results":"134","hashOfConfig":"98"},{"size":935,"mtime":1615071348549,"results":"135","hashOfConfig":"98"},{"size":2266,"mtime":1615071342890,"results":"136","hashOfConfig":"98"},{"size":595,"mtime":1615071650493,"results":"137","hashOfConfig":"98"},{"size":235,"mtime":1615071582542,"results":"138","hashOfConfig":"98"},{"size":1201,"mtime":1615071447401,"results":"139","hashOfConfig":"98"},{"size":867,"mtime":1615071442508,"results":"140","hashOfConfig":"98"},{"size":8701,"mtime":1615071099636,"results":"141","hashOfConfig":"98"},{"size":2996,"mtime":1615071094959,"results":"142","hashOfConfig":"98"},{"size":3133,"mtime":1615071822764,"results":"143","hashOfConfig":"98"},{"size":723,"mtime":1615071729016,"results":"144","hashOfConfig":"98"},{"size":7060,"mtime":1615071674204,"results":"145","hashOfConfig":"98"},{"size":231,"mtime":1615071212757,"results":"146","hashOfConfig":"98"},{"size":464,"mtime":1615071207870,"results":"147","hashOfConfig":"98"},{"size":3426,"mtime":1615071321051,"results":"148","hashOfConfig":"98"},{"size":1221,"mtime":1615071315374,"results":"149","hashOfConfig":"98"},{"size":1509,"mtime":1615071390425,"results":"150","hashOfConfig":"98"},{"size":974,"mtime":1615071386000,"results":"151","hashOfConfig":"98"},{"size":329,"mtime":1615071709180,"results":"152","hashOfConfig":"98"},{"size":839,"mtime":1615071496460,"results":"153","hashOfConfig":"98"},{"size":2994,"mtime":1615071289046,"results":"154","hashOfConfig":"98"},{"size":2327,"mtime":1615071284050,"results":"155","hashOfConfig":"98"},{"size":516,"mtime":1615071293660,"results":"156","hashOfConfig":"98"},{"size":2494,"mtime":1615071306822,"results":"157","hashOfConfig":"98"},{"size":2942,"mtime":1615071301875,"results":"158","hashOfConfig":"98"},{"size":1688,"mtime":1615071777082,"results":"159","hashOfConfig":"98"},{"size":368,"mtime":1615071700195,"results":"160","hashOfConfig":"98"},{"size":2450,"mtime":1615071634139,"results":"161","hashOfConfig":"98"},{"size":2069,"mtime":1615071657467,"results":"162","hashOfConfig":"98"},{"size":2226,"mtime":1615071803757,"results":"163","hashOfConfig":"98"},{"size":538,"mtime":1615071724705,"results":"164","hashOfConfig":"98"},{"size":208,"mtime":1615071605859,"results":"165","hashOfConfig":"98"},{"size":4313,"mtime":1615071258968,"results":"166","hashOfConfig":"98"},{"size":5641,"mtime":1615071253453,"results":"167","hashOfConfig":"98"},{"size":1429,"mtime":1613596436929,"results":"168","hashOfConfig":"98"},{"size":320,"mtime":1615071266583,"results":"169","hashOfConfig":"98"},{"size":870,"mtime":1615071272556,"results":"170","hashOfConfig":"98"},{"size":4664,"mtime":1615071115744,"results":"171","hashOfConfig":"98"},{"size":6956,"mtime":1615071231032,"results":"172","hashOfConfig":"98"},{"size":3138,"mtime":1615071224940,"results":"173","hashOfConfig":"98"},{"size":253,"mtime":1615071586970,"results":"174","hashOfConfig":"98"},{"size":5844,"mtime":1615071132561,"results":"175","hashOfConfig":"98"},{"size":5765,"mtime":1615071127319,"results":"176","hashOfConfig":"98"},{"size":234,"mtime":1615071591876,"results":"177","hashOfConfig":"98"},{"size":8962,"mtime":1615151615733,"results":"178","hashOfConfig":"98"},{"size":5769,"mtime":1615071152712,"results":"179","hashOfConfig":"98"},{"size":459,"mtime":1615071502010,"results":"180","hashOfConfig":"98"},{"size":3624,"mtime":1615196843448,"results":"181","hashOfConfig":"98"},{"size":445,"mtime":1615071717092,"results":"182","hashOfConfig":"98"},{"size":1997,"mtime":1615071791791,"results":"183","hashOfConfig":"98"},{"size":226,"mtime":1615071611883,"results":"184","hashOfConfig":"98"},{"size":4932,"mtime":1615150330265,"results":"185","hashOfConfig":"98"},{"size":3161,"mtime":1615071356573,"results":"186","hashOfConfig":"98"},{"size":2755,"mtime":1615071108296,"results":"187","hashOfConfig":"98"},{"size":8683,"mtime":1615199282834,"results":"188","hashOfConfig":"98"},{"size":1466,"mtime":1615194701294,"results":"189","hashOfConfig":"98"},{"size":5288,"mtime":1615197077539,"results":"190","hashOfConfig":"98"},{"size":10397,"mtime":1615199197853,"results":"191","hashOfConfig":"98"},{"size":403,"mtime":1615194402846,"results":"192","hashOfConfig":"98"},{"size":254,"mtime":1615117433333,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"bv91hs",{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"196"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"196"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"196"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"196"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"196"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"196"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"196"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"196"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"196"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"F:\\projects\\burger-gril\\src\\index.tsx",[],["400","401"],"F:\\projects\\burger-gril\\src\\App.tsx",["402"],"import React, {  useEffect, useState } from 'react';\r\nimport useAutoLogin from './hooks/use-autoLogin';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport { HomePage, AuthPage, BookTablePage, MenuPage,CartSummaryPage,CheckoutPage,ProfilePage } from './pages';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './redux';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport PrivateAlreadyAuthRoute from './auth/PrivateAlereadyAuthRoute';\r\nimport PopupMessage from './components/popup-message/PopupMessage';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport MenuItemPopup from './components/menu-item-popup/MenuItemPopup';\r\nimport { getAllProducts } from './redux/actions/productsActions';\r\nimport Chatbot from './components/chatbot/Chatbot';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useAutoLogin();\r\n  useEffect(() => {\r\n    dispatch(getAllProducts())\r\n  })\r\n  const { user } = useSelector((state: RootState) => state.userLogin);\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const toggleSidebar = () => setShowSidebar(!showSidebar);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar user={user} toggleSidebar={toggleSidebar} />\r\n        <Sidebar showSidebar={showSidebar} toggleSidebar={toggleSidebar} user={user} />\r\n        <PopupMessage />\r\n        <MenuItemPopup />\r\n        <Chatbot user={user}/>\r\n        <Switch>\r\n          <Route path='/' exact component={HomePage} />\r\n          <PrivateAlreadyAuthRoute path='/auth' component={AuthPage} exact />\r\n          <Route path='/book-table' component={BookTablePage} exact/>\r\n          <Route path='/order' component={MenuPage} exact/>\r\n          <Route path='/cart' component={CartSummaryPage} exact/>\r\n          <Route path='/checkout' component={CheckoutPage} exact/>\r\n          <PrivateRoute path='/profile' component={ProfilePage} exact/>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\projects\\burger-gril\\src\\firebase\\firebaseConfig.tsx",[],"F:\\projects\\burger-gril\\src\\global-styles.tsx",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\authReducer.ts",["403"],"import { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, RESET_ERROR, USER_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, SET_USER, DELETE_USER_SUCCESS } from '../constants/authConstants';\nimport { AuthAction } from '../types/authTypes';\nimport { User } from './../types/authTypes';\nimport { DELETE_USER_REQUEST, DELETE_USER_FAIL } from './../constants/authConstants';\n\n\nexport const userRegisterReducer = (state = { error: '', successMessage: null, loading: false }, action: AuthAction) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true\n      }\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false, successMessage: action.payload\n      }\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case USER_LOGOUT:\n      return {\n        error: '', successMessage: null, loading: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport const userLoginReducer = (state: { error: string, user: User, loading: boolean } = { error: '', user: null, loading: false }, action: AuthAction) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      }\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false, user: action.payload\n      }\n    case SET_USER:\n      return {\n        loading: false, user: action.payload\n      }\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      }\n    case USER_LOGOUT:\n      return {\n        error: '', user: null, loading: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport const userDeleteReducer = (state: { error: string, successMsg: string, loading: boolean } = { error: '', successMsg: '', loading: false }, action: AuthAction) => {\n  switch (action.type) {\n    case DELETE_USER_REQUEST:\n      return {\n        loading: true\n      }\n    case DELETE_USER_SUCCESS:\n      return {\n        loading: false, successMsg: action.payload\n      }\n    case DELETE_USER_FAIL:\n      return {\n        error: '', successMsg: '', loading: false\n      }\n    case USER_LOGOUT:\n      return {\n        error: '', successMsg: '', loading: false\n      }\n    default:\n      return state;\n  }\n}\n\n\n","F:\\projects\\burger-gril\\src\\redux\\index.ts",[],"F:\\projects\\burger-gril\\src\\redux\\types\\authTypes.ts",[],["404","405"],"F:\\projects\\burger-gril\\src\\redux\\actions\\authActions.ts",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar.tsx",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\SidebarData.tsx",[],"F:\\projects\\burger-gril\\src\\pages\\home.tsx",[],"F:\\projects\\burger-gril\\src\\pages\\index.tsx",[],"F:\\projects\\burger-gril\\src\\components\\hero\\Hero.tsx",[],"F:\\projects\\burger-gril\\src\\components\\sidebar\\Sidebar-style.tsx",[],"F:\\projects\\burger-gril\\src\\helpers\\scrollReveal.tsx",["406"],"\r\nimport ScrollReveal from 'scrollreveal';\r\n\r\nexport default function activateScrollReveal (){\r\n  let reval = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 100,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalWithDelay = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 1200,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalWithLongerDelay = {\r\n    // distance: '50%',\r\n    origin: 'right',\r\n    delay: 2200,\r\n    duration: 5000,\r\n    easing: 'ease',\r\n  };\r\n  let revalFromRight = {\r\n    distance: '15%',\r\n    origin: 'right',\r\n    // delay: 1200,\r\n    duration: 3000,\r\n    easing: 'ease',  \r\n  };\r\n  let revalFromLeft = {\r\n    distance: '15%',\r\n    origin: 'left',\r\n    // delay: 1200,\r\n    duration: 3000,\r\n    easing: 'ease',  \r\n  };\r\n\r\n  ScrollReveal().reveal('.title', reval)\r\n  ScrollReveal().reveal('.best-sellers', reval)\r\n  ScrollReveal().reveal('.description-text', revalWithDelay)\r\n  ScrollReveal().reveal('.menu-btn', revalWithDelay)\r\n  ScrollReveal().reveal('.button', revalWithDelay)\r\n  ScrollReveal().reveal('.about-description', revalFromRight)\r\n  ScrollReveal().reveal('.about-image', revalFromLeft)\r\n}","F:\\projects\\burger-gril\\src\\components\\hero\\Hero-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\about\\About.tsx",[],"F:\\projects\\burger-gril\\src\\components\\about\\About-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers.tsx",[],"F:\\projects\\burger-gril\\src\\components\\best-sellers\\BestSellers-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\best-sellers\\SliderData.ts",[],["407","408"],"F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews.tsx",[],"F:\\projects\\burger-gril\\src\\components\\reviews\\ReviewsData.ts",[],"F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation.tsx",[],"F:\\projects\\burger-gril\\src\\components\\reservation\\Reservation-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\footer\\Footer.tsx",[],"F:\\projects\\burger-gril\\src\\components\\footer\\Footer-style.ts",[],"F:\\projects\\burger-gril\\src\\pages\\auth.tsx",[],"F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm.tsx",[],"F:\\projects\\burger-gril\\src\\components\\reviews\\Reviews-style.ts",[],"F:\\projects\\burger-gril\\src\\hooks\\use-autoLogin.tsx",["409","410","411","412","413","414","415","416"],"import { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport firebase from '../firebase/firebaseConfig';\nimport { RootState } from '../redux';\nimport { getAuthUser, logOut } from '../redux/actions/authActions';\n\nexport default function useAutoLogin() {\n  const userFromLocalStorage = localStorage.getItem('currentUser');\n  const dispatch = useDispatch();\n  const { error, user, loading } = useSelector((state: RootState) => state.userLogin);\n  // const [token, setToken] = useState<any>(userFromLocalStorage? userFromLocalStorage: null);\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n      ? JSON.parse(localStorage.getItem('token'))\n      : null;\n    if (token && !loading) {\n      dispatch(getAuthUser(token));\n    }\n  }, []);\n\n}\n  ","F:\\projects\\burger-gril\\src\\auth\\PrivateRoute.tsx",[],"F:\\projects\\burger-gril\\src\\auth\\PrivateAlereadyAuthRoute.tsx",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\authConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\popupMessageReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\popupMessageConstants.ts",[],"F:\\projects\\burger-gril\\src\\components\\auth-form\\AuthForm-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage.tsx",[],"F:\\projects\\burger-gril\\src\\components\\popup-message\\PopupMessage-style.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\popupMessageAction.ts",[],"F:\\projects\\burger-gril\\src\\pages\\bookTable.tsx",[],"F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation.tsx",[],"F:\\projects\\burger-gril\\src\\components\\table-reservation\\Table-Reservation-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation.tsx",["417"],"import React, { useEffect, useState } from 'react';\nimport { BookReservationSection, BookReservationContainer, BookReservationTitle, Form, InputsWrapper, DatePickerInput, FormSelect, FormSelectOption, TablesContainer, ChairSymbolWrapper, ChairSymbolLabel, ChairSymbol } from './Book-Reservation-style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport TableToDisplay from '../table-reservation/Table-Reservation';\nimport { ReservationData, TableData } from '../../redux/types/reservationTypes';\nimport { getTables } from './../../redux/actions/reservationActions';\nimport Loader from '../loader/Loader';\nimport Reservation from '../reservation/Reservation';\nimport PhoneConformation from '../phone-conformation/PhoneConformation';\nimport ReservationSummary from '../reservation-summary/ReservationSummary';\n\n\nconst BookReservation = () => {\n  const dispatch = useDispatch();\n  const { reservationData }: { reservationData: ReservationData } = useSelector((state: RootState) => state.reservationAvailability);\n  let { tables, loading }: { tables: TableData[], loading: boolean } = useSelector((state: RootState) => state.getTables);\n  const { reservationData: ReservationDataAfterBookingCompleted }: { loading: boolean, reservationData: ReservationData } = useSelector((state: RootState) => state.bookTable);\n\n  const [tableSelected, setTableSelected] = useState<any>(null);\n  const [date, setDate] = useState<any>(reservationData?.date || new Date());\n  const [tablesToDisplay, seTablesToDisplay] = useState<TableData[]>(tables);\n  const [time, setTime] = useState<any>(reservationData?.time || 12);\n  const [partySize, setPartySize] = useState<number>(+reservationData?.partySize || 1);\n  const [location, setLocation] = useState<string>(\"Any Location\");\n  const locations = [\"Any Location\", \"Patio\", \"Inside\", \"Bar\"];\n  useEffect(() => {\n    if (tables) {\n      if (location === 'Any Location') {\n        seTablesToDisplay(tables.filter((table) => {\n          return +table.capacity === partySize\n        }))\n      } else {\n        seTablesToDisplay(tables.filter((table) => {\n          return +table.capacity === +partySize && table.location === location\n        }))\n      }\n    }\n  }, [tables])\n\n  useEffect(() => {\n    const dateToCheckTablesAvailabilityInDb = date.getDate().toString() + \" \" + (date.getMonth() + 1).toString() + \" \" + date.getFullYear();\n    const timeToCheckTablesAvailabilityInDb = time;\n    dispatch(getTables(dateToCheckTablesAvailabilityInDb, timeToCheckTablesAvailabilityInDb))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date, time])\n\n  useEffect(() => {\n    if (reservationData) {\n      setDate(reservationData.date);\n      setTime(reservationData.time);\n      setPartySize(reservationData.partySize);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reservationData])\n\n\n\n  const onTableSelected = (table) => {\n    setTableSelected(table);\n  }\n\n\n  const handleDate = (date: any) => {\n    setDate(date);\n    if (location === 'Any Location') {\n      seTablesToDisplay(tables.filter((table) => {\n        return +table.capacity === partySize\n      }))\n    } else {\n      seTablesToDisplay(tables.filter((table) => {\n        return +table.capacity === +partySize && table.location === location\n      }))\n    }\n  }\n  return (\n    <>\n      {loading && <Loader />}\n      {!reservationData && !ReservationDataAfterBookingCompleted && <BookReservationSection>\n        <BookReservationContainer>\n          <BookReservationTitle>Please Fill Some Deatils before booking a table</BookReservationTitle>\n          <Reservation fromBookTablePage={true} />\n        </BookReservationContainer>\n      </BookReservationSection>}\n      {ReservationDataAfterBookingCompleted && <BookReservationSection>\n        <BookReservationContainer>\n          <ReservationSummary reservationData={ReservationDataAfterBookingCompleted} />\n        </BookReservationContainer>\n      </BookReservationSection>}\n      {tablesToDisplay && reservationData && <BookReservationSection>\n        <BookReservationContainer>\n          <BookReservationTitle>Book A Table</BookReservationTitle>\n          {!tableSelected && <Form>\n            <InputsWrapper>\n              <DatePickerInput\n                dateFormat=\"dd/MM/yyyy\"\n                selected={date} onChange={handleDate} />\n              <FormSelect\n                value={time}\n                onChange={e => setTime(e.target.value)}\n              >\n                <FormSelectOption disabled>Select a time</FormSelectOption>\n                <FormSelectOption value='12'>12:00</FormSelectOption>\n                <FormSelectOption value='13'>13:00</FormSelectOption>\n                <FormSelectOption value='14'>14:00</FormSelectOption>\n                <FormSelectOption value='15'>15:00</FormSelectOption>\n                <FormSelectOption value='16'>16:00</FormSelectOption>\n                <FormSelectOption value='17'>17:00</FormSelectOption>\n                <FormSelectOption value='18'>18:00</FormSelectOption>\n                <FormSelectOption value='19'>19:00</FormSelectOption>\n                <FormSelectOption value='20'>20:00</FormSelectOption>\n                <FormSelectOption value='21'>21:00</FormSelectOption>\n                <FormSelectOption value='22'>22:00</FormSelectOption>\n              </FormSelect>\n\n              <FormSelect value={location} onChange={(e) => {\n                setLocation(e.target.value);\n                if (e.target.value === 'Any Location') {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === partySize\n                  }))\n                  console.log(tablesToDisplay)\n                } else {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === partySize && table.location === e.target.value\n                  }))\n                }\n              }}>\n                {locations.map((location, index) => <FormSelectOption value={location}\n                  key={index}\n                >\n                  {location}\n                </FormSelectOption>)}\n              </FormSelect>\n\n\n\n\n              <FormSelect value={partySize} onChange={(e) => {\n                setPartySize(+e.target.value);\n                if (location === 'Any Location') {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === +e.target.value\n                  }))\n                } else {\n                  seTablesToDisplay(tables.filter((table) => {\n                    return +table.capacity === +e.target.value && table.location === location\n                  }))\n                }\n\n\n              }}>\n                <FormSelectOption disabled>Please select party size</FormSelectOption>\n                <FormSelectOption value={1}>Party of 1</FormSelectOption>\n                <FormSelectOption value={2}>Party of 2</FormSelectOption>\n                <FormSelectOption value={3}>Party of 3</FormSelectOption>\n                <FormSelectOption value={4}>Party of 4</FormSelectOption>\n                <FormSelectOption value={5}>Party of 5</FormSelectOption>\n                <FormSelectOption value={6}>Party of 6</FormSelectOption>\n                <FormSelectOption value={7}>Party of 7</FormSelectOption>\n                <FormSelectOption value={8}>Party of 8</FormSelectOption>\n                <FormSelectOption value={9}>Party of 9</FormSelectOption>\n                <FormSelectOption value={10}>Party of 10</FormSelectOption>\n                <FormSelectOption value={11}>Party of 11</FormSelectOption>\n                <FormSelectOption value={12}>Party of 12</FormSelectOption>\n\n              </FormSelect>\n\n            </InputsWrapper>\n\n            <TablesContainer>\n              <ChairSymbolWrapper>\n                <ChairSymbol tableEmpty={true}></ChairSymbol>\n                <ChairSymbolLabel> Available</ChairSymbolLabel>\n                <ChairSymbol tableEmpty={false}></ChairSymbol>\n                <ChairSymbolLabel> Unavailable</ChairSymbolLabel>\n              </ChairSymbolWrapper>\n              {tablesToDisplay && tablesToDisplay.map((table, index) =>\n                <TableToDisplay onTableSelected={onTableSelected} key={index} table={table}></TableToDisplay>\n              )}\n            </TablesContainer>\n          </Form>}\n          {tableSelected && <>\n            <PhoneConformation date={date} partySize={partySize} time={time} table={tableSelected} phoneNumber={reservationData.phoneNumber} />\n\n          </>}\n        </BookReservationContainer>\n      </BookReservationSection>}\n    </>);\n};\n\nexport default BookReservation;\n","F:\\projects\\burger-gril\\src\\components\\book-reservation\\Book-Reservation-style.ts",["418"],"import styled from 'styled-components';\r\nimport BookReservationBackground from '../../images/bestsellers-background.jpg';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nexport const BookReservationSection = styled.section`\r\n  padding-top: 100px;\r\n  padding-bottom: 50px;\r\n  min-height: 100vh;\r\n  background: url('https://icecube-eu-291.icedrive.io/thumbnail?p=mPmkoccDLCa5E0PGZVqA%2Ftj8PV%2FTgGGNqK1dyY1PPZJbiVAZoZ%2Fo4NY7zSkihTTC%2BU%2BMO0BV5ClaP%2FROEHC1MV9vMmdtOUdLnk6aWMLPSkR%2BYzGNbajKpLGTEVvEQX3D&w=1280&h=1280&m=cropped');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\nexport const BookReservationContainer = styled.div`\r\n  max-width: 1360px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 50px;\r\n`;\r\nexport const BookReservationTitle = styled.h1`\r\n  color: white;\r\n  font-family: 'Imbue', serif;\r\n  font-size: 4.3rem;\r\n  margin-bottom: 20px;\r\n  margin-right: 20px;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 3.3rem;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const InputsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const DatePickerInput = styled(DatePicker)`\r\n  cursor: pointer;\r\n  width: 200px;\r\n  height: 50px;\r\n  padding: 10px;\r\n  color: white;\r\n  background-color: rgb(231, 76, 20);\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 468px) {\r\n    width: 200px;\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\n\r\nexport const FormSelect = styled.select`\r\n  background-color: rgb(231,76,20);\r\n  padding: 10px;\r\n  color:white;\r\n  cursor: pointer;\r\n  width: 200px;\r\n  height: 50px;\r\n  margin-right: 20px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 468px) {\r\n    width: 200px;\r\n    margin-right: 0px;\r\n\r\n  }\r\n}\r\n`;\r\nexport const FormSelectOption = styled.option`\r\n  background-color: white;\r\n  color:black;\r\n  cursor: pointer;\r\n}\r\n`;\r\nexport const TablesContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  background: rgb(231, 76, 20, 0.8);\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n`;\r\nexport const ChairSymbolWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nexport const ChairSymbolLabel = styled.label`\r\n  color: white;\r\n  padding: 5px;\r\n`;\r\nexport const ChairSymbol =\r\n  styled.span <\r\n  { tableEmpty: boolean } >\r\n  `\r\n    background-color: ${({ tableEmpty }) => (tableEmpty ? 'white' : '#e74c3c')};\r\n    border: solid 2px black;\r\n    border-radius: 50%;\r\n    padding: 15px;\r\n    margin: 13px;\r\n    position:relative;\r\n`;\r\n","F:\\projects\\burger-gril\\src\\redux\\reducers\\reservationReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\reservationConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\reservationActions.ts",["419"],"import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { popupMessage } from './popupMessageAction';\r\nimport { ReservationData, TableData } from './../types/reservationTypes';\r\nimport { ReservationAction } from '../types/reservationTypes';\r\nimport { SET_RESERVATION_DATA, CLEAR_RESERVATION_DATA, GET_TABLES_REQUEST, GET_TABLES_SUCCESS, GET_TABLES_FAIL, BOOK_TABLE_FAIL, BOOK_TABLE_SUCCESS, GET_RESERVATIONS_FOR_USER_REQUEST, GET_RESERVATIONS_FOR_USER_FAIL } from './../constants/reservationConstants';\r\nimport { BOOK_TABLE_REQUEST, GET_RESERVATIONS_FOR_USER_SUCCESS } from '../constants/reservationConstants';\r\nimport { User } from './../types/authTypes';\r\nimport axios from 'axios';\r\nimport { ServerBaseUrlProd } from '../constants/endPoints';\r\n\r\nexport const getReservationsForUser = (): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_RESERVATIONS_FOR_USER_REQUEST\r\n      })\r\n      const {\r\n        userLogin\r\n      } = getState();\r\n\r\n      const { user }: { user: User } = userLogin;\r\n      let userId;\r\n      if (user && user.id) {\r\n        userId = user.id;\r\n      }\r\n      \r\n      const isReservationAlreadyExists = await firebase.firestore().collection('/reservations').doc(userId && userId).get();\r\n      if (isReservationAlreadyExists.exists) {\r\n        //convert into array the reservations\r\n        const reservations = Object.values(isReservationAlreadyExists.data())\r\n        //convert into object all the reservations, firebase not accepting arrays\r\n        dispatch({\r\n          type: GET_RESERVATIONS_FOR_USER_SUCCESS,\r\n          payload:reservations\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: GET_RESERVATIONS_FOR_USER_SUCCESS,\r\n          payload:[]\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_RESERVATIONS_FOR_USER_FAIL,\r\n        payload: err.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const bookTable = ({ date, table, time, partySize, email, name }: { date: string, time: string, table: TableData, partySize: number, email: string, name: string }): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: BOOK_TABLE_REQUEST\r\n      })\r\n      const {\r\n        userLogin\r\n      } = getState();\r\n\r\n      const { user }: { user: User } = userLogin;\r\n      let userId;\r\n      if (user && user.id) {\r\n        userId = user.id;\r\n      }\r\n      const isDateAndTimeAlreadyInDb = await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).get();\r\n      if (isDateAndTimeAlreadyInDb.exists) {\r\n        const tables = Object.values(isDateAndTimeAlreadyInDb.data())\r\n        const findTable = tables.find(t => t.name === table.name);\r\n        findTable.isAvailable = false;\r\n        const tablesToSaveInDb = Object.assign({}, tables);\r\n        await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).set(tablesToSaveInDb);\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      } else {\r\n        const tablesSnapshot = await firebase.firestore().collection('tables').get();\r\n        const tables = tablesSnapshot.docs.map(contentObj => ({ ...contentObj.data() })) as TableData[];\r\n        const findTable = tables.find(t => t.name === table.name);\r\n        findTable.isAvailable = false;\r\n        const tablesToSaveInDb = Object.assign({}, tables);\r\n        await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).set(tablesToSaveInDb);\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      }\r\n\r\n      const reservationData = { date, time, partySize, email, name, table }\r\n      const isReservationAlreadyExists = await firebase.firestore().collection('/reservations').doc(userId && userId).get();\r\n      if (isReservationAlreadyExists.exists) {\r\n        //convert into array the pervious reservations\r\n        const reservations = Object.values(isReservationAlreadyExists.data())\r\n        // push the latest reservation\r\n        reservations.push({ ...reservationData })\r\n\r\n        //convert into object all the reservations, firebase not accepting arrays\r\n        const reservationsToSaveInDb = Object.assign({}, reservations);\r\n\r\n        await firebase.firestore().collection('/reservations').doc(userId ? userId : date + \" \" + time + \" \" + table.name).set(reservationsToSaveInDb);\r\n      } else {\r\n        \r\n        await firebase.firestore().collection('/reservations').doc(userId ? userId : date + \" \" + time + table.name).set({ 0: reservationData });\r\n      }\r\n      dispatch({\r\n        type: BOOK_TABLE_SUCCESS,\r\n        payload: reservationData\r\n      });\r\n    \r\n      const { data } = await axios.post(`${ServerBaseUrlProd}/email/send-reservation-mail`, {\r\n        email: reservationData.email,\r\n        name: reservationData.name,\r\n        date: reservationData.date,\r\n        time: reservationData.time,\r\n        partySize:reservationData.partySize,  \r\n        table: reservationData.table,\r\n      });\r\n      \r\n      dispatch(popupMessage({ type: 'success', content: \"Table Booked!\" }))\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: BOOK_TABLE_FAIL,\r\n        payload: err.message\r\n      });\r\n      dispatch(popupMessage({ type: 'error', content: \"Failed to Book a table\" }))\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getTables = (date, time): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: GET_TABLES_REQUEST,\r\n      });\r\n\r\n\r\n      const isDateAndTimeAlreadyInDb = await firebase.firestore().collection('/tableBookingByDate').doc(date + \" \" + time).get();\r\n      if (isDateAndTimeAlreadyInDb.exists) {\r\n        const tables = Object.values(isDateAndTimeAlreadyInDb.data())\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      } else {\r\n        const tablesSnapshot = await firebase.firestore().collection('tables').get();\r\n        const tables = tablesSnapshot.docs.map(contentObj => ({ ...contentObj.data() })) as TableData[]\r\n        dispatch({\r\n          type: GET_TABLES_SUCCESS,\r\n          payload: tables\r\n        });\r\n      }\r\n     \r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_TABLES_FAIL,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const setReservationData = (data: ReservationData): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n\r\n    dispatch({\r\n      type: SET_RESERVATION_DATA,\r\n      payload: data\r\n    })\r\n  }\r\n}\r\nexport const clearReservationData = (data: ReservationData): ThunkAction<void, RootState, null, ReservationAction> => {\r\n  return async dispatch => {\r\n\r\n    dispatch({\r\n      type: CLEAR_RESERVATION_DATA\r\n    })\r\n\r\n  }\r\n}\r\n\r\n","F:\\projects\\burger-gril\\src\\components\\loader\\Loader.tsx",[],"F:\\projects\\burger-gril\\src\\components\\loader\\Loader-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation.tsx",[],"F:\\projects\\burger-gril\\src\\components\\phone-conformation\\PhoneConformation-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary.tsx",["420"],"import React, { useEffect } from 'react';\r\nimport { ReservationSummaryTitle, ReservationSummarySubTitle, ReservationSummarySummary, ReservationSummarySummaryDeatils, } from './ReservationSummary-style';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CLEAR_RESERVATION_DATA } from '../../redux/constants/reservationConstants';\r\n\r\n\r\nconst ReservationSummary = ({ reservationData }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: CLEAR_RESERVATION_DATA })\r\n\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ReservationSummaryTitle>Your Booking has Been completed!</ReservationSummaryTitle>\r\n      <ReservationSummarySummary>\r\n        <ReservationSummarySubTitle>Thank you {reservationData.name}</ReservationSummarySubTitle>\r\n        <ReservationSummarySubTitle>an email with your booking confirmation has been sent to your email address</ReservationSummarySubTitle>\r\n        <ReservationSummarySummaryDeatils>Date: {reservationData.date.split(\" \").join(\"/\")} </ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>Time: {reservationData.time}:00</ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>Guests:{reservationData.partySize}</ReservationSummarySummaryDeatils>\r\n        <ReservationSummarySummaryDeatils>{reservationData.table.name}, {reservationData.table.location}</ReservationSummarySummaryDeatils>\r\n      </ReservationSummarySummary>\r\n    </>);\r\n};\r\n\r\nexport default ReservationSummary;\r\n","F:\\projects\\burger-gril\\src\\components\\reservation-summary\\ReservationSummary-style.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\endPoints.ts",[],"F:\\projects\\burger-gril\\src\\helpers\\convertPhoneNumber.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar\\Navbar-style.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar\\NavbarData.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart.tsx",[],"F:\\projects\\burger-gril\\src\\components\\navbar-cart\\NavbarCart-style.tsx",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\cartReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\cartConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\cartActions.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\productsActions.ts",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\productsReducer.ts",[],"F:\\projects\\burger-gril\\src\\redux\\constants\\productsConstants.ts",[],"F:\\projects\\burger-gril\\src\\pages\\menu.tsx",[],"F:\\projects\\burger-gril\\src\\components\\menu\\Menu.tsx",[],"F:\\projects\\burger-gril\\src\\components\\menu\\Menu-style.ts",[],"F:\\projects\\burger-gril\\src\\redux\\types\\productsType.ts",["421"],"F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\menu-item-popup\\MenuItemPopup.tsx",[],"F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup.tsx",[],"F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup.tsx",[],"F:\\projects\\burger-gril\\src\\components\\meal-popup\\MealPopup-style.tsx",[],"F:\\projects\\burger-gril\\src\\pages\\cartSummary.tsx",[],"F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary.tsx",["422"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CartSummaryHero, CartSummarySectionWrapper, CartSummarySection, CartSummaryTableAndTotalSummary, TotalSummary, TotalSummaryTitle, TotalSummaryRow, TotalSummaryCell, CartSummaryTitle, CartSummarySubTitle, CartIsEmptyTitle, CartSummaryTable, CartSummaryTableHeader, CartSummaryTableRow, CartSummaryTableHeaderCell, CartSummaryTableBody, CartSummaryTableBodyCell, CartSummaryItemImage, CartSummaryItemDescription, CloseIcon, LinksContainer, CheckoutLink, BackToOrderLink } from './CartSummary-style';\r\nimport { RootState } from '../../redux';\r\nimport { removeItemFromCart } from '../../redux/actions/cartActions';\r\nimport { CartItem } from '../../redux/types/cartTypes';\r\nimport { getCartTotalForLoggedUser } from '../../helpers/getCartTotal';\r\nimport { getCartTotal } from './../../helpers/getCartTotal';\r\n\r\nconst CartSummary = () => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems }: { cartItems: CartItem[] } = useSelector((state: RootState) => state.cart);\r\n  const { user } = useSelector((state: RootState) => state.userLogin);\r\n\r\n  const showBurgerChanges = (cartItem: CartItem) => {\r\n    return Object.entries(cartItem.changes).map(([key, value]) => {\r\n      if (value) {\r\n        if (key.startsWith('no')) {\r\n          return <CartSummaryItemDescription key={key}>\r\n            * {key.split('no').join('Without ')}\r\n          </CartSummaryItemDescription>\r\n        }\r\n        if (key.startsWith('vegetablesOnTheSide')) {\r\n          return <CartSummaryItemDescription key={key}>\r\n            * Vegetables On The Side\r\n          </CartSummaryItemDescription>\r\n        }\r\n        return key\r\n      }\r\n      return null\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CartSummaryHero>\r\n        <CartSummaryTitle>Cart Summary</CartSummaryTitle>\r\n        <CartSummarySubTitle>Proceed to Checkout or Update your cart</CartSummarySubTitle>\r\n      </CartSummaryHero>\r\n      <CartSummarySectionWrapper>\r\n        <CartSummarySection>\r\n          {cartItems.length === 0 && <CartIsEmptyTitle>Your cart is empty</CartIsEmptyTitle>}\r\n          {cartItems.length > 0 && <CartSummaryTableAndTotalSummary>\r\n            <TotalSummary>\r\n              {/* <TotalSummaryTitle>CART TOTALS</TotalSummaryTitle> */}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Cart Subtotal</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n              {user && <TotalSummaryRow> <TotalSummaryCell>Membership Discount </TotalSummaryCell>\r\n                <TotalSummaryCell>5%</TotalSummaryCell> </TotalSummaryRow>}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Order Total</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n\r\n            </TotalSummary>\r\n            <CartSummaryTable cellSpacing=\"0\" cellPadding=\"0\">\r\n              <CartSummaryTableHeader>\r\n                <CartSummaryTableRow>\r\n                  <CartSummaryTableHeaderCell></CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell></CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell>PRODUCT</CartSummaryTableHeaderCell>\r\n                  <CartSummaryTableHeaderCell>PRICE</CartSummaryTableHeaderCell>\r\n                </CartSummaryTableRow>\r\n              </CartSummaryTableHeader>\r\n              <CartSummaryTableBody>\r\n                {cartItems && cartItems.map((cartItem, index) => (\r\n                  <CartSummaryTableRow key={index}>\r\n                    <CartSummaryTableBodyCell onClick={() => {\r\n                      dispatch(removeItemFromCart(cartItem.id))\r\n                    }}><CloseIcon></CloseIcon></CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell><CartSummaryItemImage src={cartItem.image} alt={cartItem.title} /></CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell>{cartItem.title}\r\n                      {cartItem.burgerSize && <CartSummaryItemDescription>\r\n                        {cartItem.burgerSize === 'Classic' && '* Classic burger (200 gr)'}\r\n                        {cartItem.burgerSize === 'Large' && '* Large burger (300 gr) + $2'}\r\n                        {cartItem.burgerSize === 'Gigantic' && '* Gigantic burger (400 gr) + $3'}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.drink && <CartSummaryItemDescription>\r\n                        + {cartItem.drink}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.sideDish && <CartSummaryItemDescription>\r\n                        + {cartItem.sideDish}\r\n                      </CartSummaryItemDescription>}\r\n                      {cartItem.changes &&\r\n                        showBurgerChanges(cartItem)\r\n                      }\r\n                    </CartSummaryTableBodyCell>\r\n                    <CartSummaryTableBodyCell>${cartItem.price}</CartSummaryTableBodyCell>\r\n                  </CartSummaryTableRow>\r\n                ))}\r\n\r\n              </CartSummaryTableBody>\r\n            </CartSummaryTable>\r\n          </CartSummaryTableAndTotalSummary>}\r\n          <LinksContainer isCartEmpty={cartItems.length === 0}>\r\n            {cartItems.length > 0 && <CheckoutLink to=\"/checkout\">TO CHECKOUT</CheckoutLink>}\r\n            {cartItems.length > 0 && <BackToOrderLink to=\"/order\">BACK TO MENU</BackToOrderLink>}\r\n            {cartItems.length === 0 && <CheckoutLink to=\"/order\">BACK TO MENU</CheckoutLink>}\r\n          </LinksContainer>\r\n        </CartSummarySection>\r\n      </CartSummarySectionWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartSummary;\r\n","F:\\projects\\burger-gril\\src\\components\\cart-summary\\CartSummary-style.ts",[],"F:\\projects\\burger-gril\\src\\pages\\checkout.tsx",[],"F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout.tsx",["423"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { CheckoutHero, CheckoutSectionWrapper, CheckoutSection, HeroTitle, CheckoutTitle, CheckoutSubTitle, CartIsEmptyTitle, OrderForm, FullNameWrapper, NameWrapper, OrderFormLabel, OrderFormSelect, OrderFormInput, NameInput, SmallDescription, TotalSummary, TotalSummaryTitle, TotalSummaryRow, TotalSummaryCell, PaypalWrapper, LinksContainer, CheckoutLink, SaveOrderDetailsButton } from './Checkout-style';\r\nimport { RootState } from '../../redux';\r\nimport Loader from '../loader/Loader';\r\nimport { CartItem } from '../../redux/types/cartTypes';\r\nimport { ServerBaseUrlProd } from '../../redux/constants/endPoints';\r\nimport { getCartTotal, getCartTotalForLoggedUser } from '../../helpers/getCartTotal';\r\nimport { Order } from '../../redux/types/orderTypes';\r\nimport { User } from '../../redux/types/authTypes';\r\nimport { createOrder } from '../../redux/actions/orderActions';\r\nimport { CREATE_ORDER_FAIL, CLEAR_ORDER } from '../../redux/constants/orderConstants';\r\nimport { OrderState } from '../../redux/reducers/orderReducer';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    paypal: any,\r\n  }\r\n}\r\n\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems }: { cartItems: CartItem[] } = useSelector((state: RootState) => state.cart);\r\n  const { order, loading, error }: OrderState = useSelector((state: RootState) => state.creatOrder);\r\n  const { user }: { user: User } = useSelector((state: RootState) => state.userLogin);\r\n  const [orderMethod, setOrderMethod] = useState('Delivery');\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [floor, setFloor] = useState(0);\r\n  const [apartmentNumber, setApartmentNumber] = useState(0);\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [orderNotes, setOrderNotes] = useState('');\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(ServerBaseUrlProd + '/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if (!window.paypal) {\r\n      addPayPalScript()\r\n    } else {\r\n      setSdkReady(true)\r\n    }\r\n    return () => {\r\n      dispatch({ type: CLEAR_ORDER });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const validateForm = (e) => {\r\n    e.preventDefault();\r\n    setIsFormValid(true)\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    if (paymentResult.status === \"COMPLETED\") {\r\n      const order: Order = {\r\n        id: paymentResult.id,\r\n        create_time: new Date().toLocaleString(),\r\n        orderItems: cartItems,\r\n        userId: user?.id ? user?.id : 'Anonymous',\r\n        amount: user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems),\r\n        orderMethod,\r\n        firstName,\r\n        lastName,\r\n        city,\r\n        address,\r\n        floor: floor,\r\n        apartmentNumber: apartmentNumber,\r\n        email,\r\n        phoneNumber,\r\n        orderNotes: orderNotes\r\n      }\r\n      dispatch(createOrder(order))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const errorPaymentHandler = (paymentResult) => {\r\n    dispatch({ type: CREATE_ORDER_FAIL, payload: 'payment failed' })\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CheckoutHero>\r\n        <HeroTitle>Checkout</HeroTitle>\r\n        {/* <CheckoutSubTitle>Proceed to Checkout or Update your cart</CheckoutSubTitle> */}\r\n      </CheckoutHero>\r\n      <CheckoutSectionWrapper>\r\n        {!order?.id && <CheckoutSection>\r\n          {cartItems.length === 0 && <CartIsEmptyTitle>Your cart is empty</CartIsEmptyTitle>}\r\n          {cartItems.length > 0 && <>\r\n            <CheckoutTitle>Order Deatils</CheckoutTitle>\r\n            <SmallDescription>* All fields are required.</SmallDescription>\r\n            {!isFormValid && <OrderForm onSubmit={validateForm}>\r\n              <OrderFormLabel>Delivery/Pickup:</OrderFormLabel>\r\n              <OrderFormSelect onChange={(e) => {\r\n                setOrderMethod(e.target.value)\r\n              }} value={orderMethod} required>\r\n                <option value=\"Delivery\">Delivery</option>\r\n                <option value=\"Pickup\">Pickup</option>\r\n              </OrderFormSelect>\r\n              {orderMethod === \"Pickup\" && <SmallDescription>* The order is ready within 30 minutes of completing the payment process.</SmallDescription>}\r\n              {orderMethod === \"Delivery\" && <SmallDescription>* The delivery will reach your door within 30 minutes of completing the payment process.</SmallDescription>}\r\n              <FullNameWrapper>\r\n                <NameWrapper>\r\n                  <OrderFormLabel>First Name:</OrderFormLabel>\r\n                  <NameInput onChange={(e) => setFirstName(e.target.value)} type=\"text\" required></NameInput>\r\n                </NameWrapper>\r\n                <NameWrapper>\r\n                  <OrderFormLabel>Last Name:</OrderFormLabel>\r\n                  <NameInput type=\"text\" onChange={(e) => setLastName(e.target.value)} required></NameInput>\r\n                </NameWrapper>\r\n              </FullNameWrapper>\r\n              {orderMethod === \"Delivery\" && <> <OrderFormLabel>City:</OrderFormLabel>\r\n                <OrderFormInput type=\"text\" onChange={(e) => setCity(e.target.value)} required></OrderFormInput></>}\r\n              {orderMethod === \"Delivery\" && <><OrderFormLabel>Address:</OrderFormLabel>\r\n                <OrderFormInput type=\"text\" onChange={(e) => setAddress(e.target.value)} required></OrderFormInput></>}\r\n              {orderMethod === \"Delivery\" && <><OrderFormLabel>Floor:</OrderFormLabel>\r\n                <OrderFormInput min=\"0\" onChange={(e) => setFloor(+e.target.value)} type=\"number\"></OrderFormInput></>}\r\n              {orderMethod === \"Delivery\" && <><OrderFormLabel>Apartment Number:</OrderFormLabel>\r\n                <OrderFormInput min=\"0\" onChange={(e) => setApartmentNumber(+e.target.value)} type=\"number\"></OrderFormInput></>}\r\n              <OrderFormLabel>Email:</OrderFormLabel>\r\n              <OrderFormInput type=\"email\" onChange={(e) => setEmail(e.target.value)} required></OrderFormInput>\r\n              <OrderFormLabel>Phone:</OrderFormLabel>\r\n              <OrderFormInput type=\"tel\" onChange={(e) => setPhoneNumber(e.target.value)} required></   OrderFormInput>\r\n              <OrderFormLabel>Order Comment:</OrderFormLabel>\r\n              <OrderFormInput type=\"text\" onChange={(e) => setOrderNotes(e.target.value)}></OrderFormInput>\r\n              <SaveOrderDetailsButton>Save Deatils</SaveOrderDetailsButton>\r\n              <br />\r\n              <br />\r\n            </OrderForm>}\r\n            <TotalSummary>\r\n              <TotalSummaryTitle>CART TOTALS</TotalSummaryTitle>\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Cart Subtotal</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' + getCartTotal(cartItems) : '0'}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n              {user && <TotalSummaryRow> <TotalSummaryCell>Membership Discount </TotalSummaryCell>\r\n                <TotalSummaryCell>5%</TotalSummaryCell> </TotalSummaryRow>}\r\n              <TotalSummaryRow>\r\n                <TotalSummaryCell>Order Total</TotalSummaryCell>\r\n                <TotalSummaryCell>{cartItems ? '$' : '0'}{user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)}</TotalSummaryCell>\r\n              </TotalSummaryRow>\r\n            </TotalSummary>\r\n            {loading && <Loader />}\r\n            {!sdkReady ? <Loader /> : isFormValid && !loading ? <PaypalWrapper><PayPalButton amount={user ? getCartTotalForLoggedUser(cartItems) : getCartTotal(cartItems)} onSuccess={successPaymentHandler}\r\n              catchError={errorPaymentHandler}\r\n              onError={errorPaymentHandler}\r\n            /></PaypalWrapper> : null\r\n            }\r\n\r\n\r\n          </>}\r\n\r\n          <LinksContainer>\r\n            {cartItems.length === 0 && <CheckoutLink to=\"/order\">BACK TO MENU</CheckoutLink>}\r\n          </LinksContainer>\r\n\r\n        </CheckoutSection>}\r\n        {order?.id && <CheckoutSection> <CheckoutTitle> Order Completed!</CheckoutTitle>\r\n          <CheckoutSubTitle>An email with your order details has been sent to your mail.</CheckoutSubTitle>\r\n\r\n        </CheckoutSection>}\r\n      </CheckoutSectionWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","F:\\projects\\burger-gril\\src\\components\\checkout\\Checkout-style.ts",[],"F:\\projects\\burger-gril\\src\\helpers\\getCartTotal.ts",[],"F:\\projects\\burger-gril\\src\\redux\\actions\\orderActions.ts",["424"],"F:\\projects\\burger-gril\\src\\redux\\constants\\orderConstants.ts",[],"F:\\projects\\burger-gril\\src\\redux\\reducers\\orderReducer.ts",[],"F:\\projects\\burger-gril\\src\\pages\\profile.tsx",[],"F:\\projects\\burger-gril\\src\\components\\profile\\Profile.tsx",["425"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProfileHero, ProfileSection, HeroTitle, ProfileTitle, NavContainer, NavItem, CardsContainer, Card, CardRow, CardOrderItemsRow, CardTitle, CardLabel, CardDescription, OrderItemsDescription, DeleteAccountButton } from './Profile-style';\r\nimport { RootState } from '../../redux';\r\nimport { User } from '../../redux/types/authTypes';\r\nimport { getReservationsForUser } from '../../redux/actions/reservationActions';\r\nimport { ReservationDataFromDb } from '../../redux/types/reservationTypes';\r\nimport { getOrdersForUser } from '../../redux/actions/orderActions';\r\nimport { Order } from '../../redux/types/orderTypes';\r\nimport Loader from '../loader/Loader';\r\nimport { deleteUser } from '../../redux/actions/authActions';\r\n\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { user }: { user: User } = useSelector((state: RootState) => state.userLogin);\r\n\r\n  const { reservationData, }: { reservationData: ReservationDataFromDb[], loading: boolean } = useSelector((state: RootState) => state.getReservationForUser);\r\n\r\n  const { orders, loading: ordersLoading }: { orders: Order[], loading: boolean } = useSelector((state: RootState) => state.getOrdersForUser);\r\n\r\n  const { loading: deleteUserLoading }: { loading: boolean } = useSelector((state: RootState) => state.userDelete);\r\n\r\n  const [currentNavItem, setCurrentNavItem] = useState('Orders')\r\n\r\n  useEffect(() => {\r\n    dispatch(getReservationsForUser());\r\n    dispatch(getOrdersForUser());\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ProfileHero>\r\n        <HeroTitle>{user && user.name}</HeroTitle>\r\n      </ProfileHero>\r\n      <ProfileSection>\r\n        <NavContainer>\r\n          <NavItem onClick={() => {\r\n            setCurrentNavItem(\"Orders\")\r\n          }} currentNavItem={currentNavItem === \"Orders\"}>Orders</NavItem>\r\n          <NavItem onClick={() => {\r\n            setCurrentNavItem(\"Reservations\")\r\n          }} currentNavItem={currentNavItem === \"Reservations\"}>Reservations</NavItem>\r\n          <NavItem onClick={() => {\r\n            setCurrentNavItem(\"Settings\")\r\n          }} currentNavItem={currentNavItem === \"Settings\"}>Settings</NavItem>\r\n        </NavContainer>\r\n        {currentNavItem === \"Reservations\" && reservationData?.length === 0 && <ProfileTitle>\r\n          No Reservation Yet!\r\n            </ProfileTitle>}\r\n        {currentNavItem === \"Reservations\" && reservationData?.length > 0 && <CardsContainer>\r\n          {reservationData.map((reservation, index) => <Card key={index}>\r\n            <CardTitle>{reservation.date.split(' ').join('\\\\')}, {reservation.time + \":00\"} </CardTitle>\r\n            <hr />\r\n            <CardRow>\r\n              <CardLabel>{reservation.table.name}.</CardLabel>\r\n            </CardRow>\r\n            <CardRow>\r\n              <CardLabel>Table Location: </CardLabel>\r\n              <CardDescription>&nbsp; {reservation.table.location}.</CardDescription>\r\n            </CardRow>\r\n            <CardRow>\r\n              <CardLabel>Guests: </CardLabel>\r\n              <CardDescription>&nbsp; {reservation.partySize}.</CardDescription>\r\n            </CardRow>\r\n\r\n          </Card>)}\r\n        </CardsContainer>}\r\n        {currentNavItem === \"Orders\" && orders?.length === 0 && <ProfileTitle>\r\n          No Orders Yet!\r\n            </ProfileTitle>}\r\n        {currentNavItem === \"Orders\" && orders?.length > 0 && <CardsContainer>\r\n          {orders.map((order) => <Card key={order.id}>\r\n            <CardTitle>{order.orderMethod} </CardTitle>\r\n            <hr />\r\n            <CardRow>\r\n              <CardLabel>Order Made At: </CardLabel>\r\n              <CardDescription>&nbsp; {order.create_time}.</CardDescription>\r\n            </CardRow>\r\n            {order.address && <CardRow>\r\n              <CardLabel>Address: </CardLabel>\r\n              <CardDescription>&nbsp; {order.address}, {order.city}. </CardDescription>\r\n            </CardRow>}\r\n            <CardOrderItemsRow>\r\n              <CardLabel>Order Items: </CardLabel>\r\n              {order.orderItems.map(((orderItem,index) => \r\n                <OrderItemsDescription key={index}>*{orderItem.title}.</OrderItemsDescription>\r\n              ))}\r\n            </CardOrderItemsRow>\r\n            <CardRow>\r\n              <CardLabel>Order Sum: </CardLabel>\r\n              <CardDescription>&nbsp;${order.amount}.</CardDescription>  \r\n            </CardRow>\r\n          </Card>)}\r\n        </CardsContainer>}\r\n        {currentNavItem === \"Settings\" && <CardsContainer>\r\n          {deleteUserLoading && <Loader />}\r\n          <DeleteAccountButton onClick={() => {\r\n            dispatch(deleteUser())\r\n          }} disabled={deleteUserLoading}>Delete Account</DeleteAccountButton>\r\n        </CardsContainer>}\r\n\r\n\r\n      </ProfileSection>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\projects\\burger-gril\\src\\components\\profile\\Profile-style.ts",[],"F:\\projects\\burger-gril\\src\\components\\burger-popup\\BurgerPopup-style.tsx",[],"F:\\projects\\burger-gril\\src\\components\\chatbot\\Chatbot.tsx",["426","427"],"F:\\projects\\burger-gril\\src\\redux\\reducers\\chatbotReducer.ts",["428","429","430","431","432"],"F:\\projects\\burger-gril\\src\\components\\chatbot\\Chatbot-style.ts",["433"],"F:\\projects\\burger-gril\\src\\redux\\actions\\chatbotActions.ts",["434","435"],"F:\\projects\\burger-gril\\src\\redux\\constants\\chatbotConstants.ts",[],"F:\\projects\\burger-gril\\src\\helpers\\genrateUid.ts",[],{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","replacedBy":"439"},{"ruleId":"440","severity":1,"message":"441","line":3,"column":50,"nodeType":"442","messageId":"443","endLine":3,"endColumn":54},{"ruleId":"440","severity":1,"message":"444","line":1,"column":76,"nodeType":"442","messageId":"443","endLine":1,"endColumn":87},{"ruleId":"436","replacedBy":"445"},{"ruleId":"438","replacedBy":"446"},{"ruleId":"440","severity":1,"message":"447","line":19,"column":7,"nodeType":"442","messageId":"443","endLine":19,"endColumn":27},{"ruleId":"436","replacedBy":"448"},{"ruleId":"438","replacedBy":"449"},{"ruleId":"440","severity":1,"message":"450","line":1,"column":10,"nodeType":"442","messageId":"443","endLine":1,"endColumn":18},{"ruleId":"440","severity":1,"message":"451","line":1,"column":31,"nodeType":"442","messageId":"443","endLine":1,"endColumn":41},{"ruleId":"440","severity":1,"message":"452","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":16},{"ruleId":"440","severity":1,"message":"453","line":5,"column":23,"nodeType":"442","messageId":"443","endLine":5,"endColumn":29},{"ruleId":"440","severity":1,"message":"454","line":8,"column":9,"nodeType":"442","messageId":"443","endLine":8,"endColumn":29},{"ruleId":"440","severity":1,"message":"455","line":10,"column":11,"nodeType":"442","messageId":"443","endLine":10,"endColumn":16},{"ruleId":"440","severity":1,"message":"456","line":10,"column":18,"nodeType":"442","messageId":"443","endLine":10,"endColumn":22},{"ruleId":"457","severity":1,"message":"458","line":19,"column":6,"nodeType":"459","endLine":19,"endColumn":8,"suggestions":"460"},{"ruleId":"457","severity":1,"message":"461","line":39,"column":6,"nodeType":"459","endLine":39,"endColumn":14,"suggestions":"462"},{"ruleId":"440","severity":1,"message":"463","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":33},{"ruleId":"440","severity":1,"message":"464","line":115,"column":15,"nodeType":"442","messageId":"443","endLine":115,"endColumn":19},{"ruleId":"457","severity":1,"message":"465","line":14,"column":6,"nodeType":"459","endLine":14,"endColumn":8,"suggestions":"466"},{"ruleId":"467","severity":1,"message":"468","line":41,"column":11,"nodeType":"442","messageId":"469","endLine":41,"endColumn":44},{"ruleId":"440","severity":1,"message":"470","line":3,"column":121,"nodeType":"442","messageId":"443","endLine":3,"endColumn":138},{"ruleId":"440","severity":1,"message":"455","line":27,"column":27,"nodeType":"442","messageId":"443","endLine":27,"endColumn":32},{"ruleId":"440","severity":1,"message":"464","line":29,"column":15,"nodeType":"442","messageId":"443","endLine":29,"endColumn":19},{"ruleId":"440","severity":1,"message":"471","line":20,"column":28,"nodeType":"442","messageId":"443","endLine":20,"endColumn":41},{"ruleId":"440","severity":1,"message":"455","line":60,"column":30,"nodeType":"442","messageId":"443","endLine":60,"endColumn":35},{"ruleId":"457","severity":1,"message":"465","line":74,"column":6,"nodeType":"459","endLine":74,"endColumn":17,"suggestions":"472"},{"ruleId":"440","severity":1,"message":"473","line":1,"column":10,"nodeType":"442","messageId":"443","endLine":1,"endColumn":21},{"ruleId":"440","severity":1,"message":"474","line":2,"column":32,"nodeType":"442","messageId":"443","endLine":2,"endColumn":52},{"ruleId":"440","severity":1,"message":"475","line":3,"column":10,"nodeType":"442","messageId":"443","endLine":3,"endColumn":20},{"ruleId":"440","severity":1,"message":"476","line":3,"column":22,"nodeType":"442","messageId":"443","endLine":3,"endColumn":26},{"ruleId":"440","severity":1,"message":"477","line":5,"column":10,"nodeType":"442","messageId":"443","endLine":5,"endColumn":15},{"ruleId":"440","severity":1,"message":"478","line":2,"column":18,"nodeType":"442","messageId":"443","endLine":2,"endColumn":23},{"ruleId":"440","severity":1,"message":"452","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":16},{"ruleId":"440","severity":1,"message":"479","line":4,"column":10,"nodeType":"442","messageId":"443","endLine":4,"endColumn":22},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'RESET_ERROR' is defined but never used.",["480"],["481"],"'revalWithLongerDelay' is assigned a value but never used.",["480"],["481"],"'useState' is defined but never used.","'useContext' is defined but never used.","'firebase' is defined but never used.","'logOut' is defined but never used.","'userFromLocalStorage' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["482"],"React Hook useEffect has missing dependencies: 'location' and 'partySize'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'seTablesToDisplay' needs the current value of 'location'.",["483"],"'BookReservationBackground' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["484"],"@typescript-eslint/no-redeclare","'REMOVE_SELECTED_ITEM_FROM_OVERLAY' is already defined.","redeclared","'TotalSummaryTitle' is defined but never used.","'ordersLoading' is assigned a value but never used.",["485"],"'USER_LOGOUT' is defined but never used.","'SEND_MESSAGE_SUCCESS' is defined but never used.","'CartAction' is defined but never used.","'Cart' is defined but never used.","'Order' is defined but never used.","'LinkR' is defined but never used.","'popupMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},"Update the dependencies array to be: [dispatch, loading]",{"range":"494","text":"495"},"Update the dependencies array to be: [location, partySize, tables]",{"range":"496","text":"497"},"Update the dependencies array to be: [dispatch]",{"range":"498","text":"499"},"Update the dependencies array to be: [chatbotId, dispatch]",{"range":"500","text":"501"},[805,807],"[dispatch, loading]",[2244,2252],"[location, partySize, tables]",[533,535],"[dispatch]",[2956,2967],"[chatbotId, dispatch]"]